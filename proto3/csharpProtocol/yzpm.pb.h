// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: yzpm.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_yzpm_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_yzpm_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3010000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3010001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_yzpm_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_yzpm_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[75]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_yzpm_2eproto;
class C_ChangePwd_1004;
class C_ChangePwd_1004DefaultTypeInternal;
extern C_ChangePwd_1004DefaultTypeInternal _C_ChangePwd_1004_default_instance_;
class C_GetDisciplineContrastResList_1024;
class C_GetDisciplineContrastResList_1024DefaultTypeInternal;
extern C_GetDisciplineContrastResList_1024DefaultTypeInternal _C_GetDisciplineContrastResList_1024_default_instance_;
class C_GetDisciplineStoreUpResList_1020;
class C_GetDisciplineStoreUpResList_1020DefaultTypeInternal;
extern C_GetDisciplineStoreUpResList_1020DefaultTypeInternal _C_GetDisciplineStoreUpResList_1020_default_instance_;
class C_GetPlanRecruit_2006;
class C_GetPlanRecruit_2006DefaultTypeInternal;
extern C_GetPlanRecruit_2006DefaultTypeInternal _C_GetPlanRecruit_2006_default_instance_;
class C_GetSchoolAdmitInfo_2002;
class C_GetSchoolAdmitInfo_2002DefaultTypeInternal;
extern C_GetSchoolAdmitInfo_2002DefaultTypeInternal _C_GetSchoolAdmitInfo_2002_default_instance_;
class C_GetSchoolContrastResList_1022;
class C_GetSchoolContrastResList_1022DefaultTypeInternal;
extern C_GetSchoolContrastResList_1022DefaultTypeInternal _C_GetSchoolContrastResList_1022_default_instance_;
class C_GetSchoolInfoById_2000;
class C_GetSchoolInfoById_2000DefaultTypeInternal;
extern C_GetSchoolInfoById_2000DefaultTypeInternal _C_GetSchoolInfoById_2000_default_instance_;
class C_GetSchoolStoreUpResList_1008;
class C_GetSchoolStoreUpResList_1008DefaultTypeInternal;
extern C_GetSchoolStoreUpResList_1008DefaultTypeInternal _C_GetSchoolStoreUpResList_1008_default_instance_;
class C_GetSeachFSXZYList_3012;
class C_GetSeachFSXZYList_3012DefaultTypeInternal;
extern C_GetSeachFSXZYList_3012DefaultTypeInternal _C_GetSeachFSXZYList_3012_default_instance_;
class C_GetSeachSKYXList_3006;
class C_GetSeachSKYXList_3006DefaultTypeInternal;
extern C_GetSeachSKYXList_3006DefaultTypeInternal _C_GetSeachSKYXList_3006_default_instance_;
class C_GetSeachSchoolList_3002;
class C_GetSeachSchoolList_3002DefaultTypeInternal;
extern C_GetSeachSchoolList_3002DefaultTypeInternal _C_GetSeachSchoolList_3002_default_instance_;
class C_GetSeachScoreList_3004;
class C_GetSeachScoreList_3004DefaultTypeInternal;
extern C_GetSeachScoreList_3004DefaultTypeInternal _C_GetSeachScoreList_3004_default_instance_;
class C_GetSeachYYPMList_3008;
class C_GetSeachYYPMList_3008DefaultTypeInternal;
extern C_GetSeachYYPMList_3008DefaultTypeInternal _C_GetSeachYYPMList_3008_default_instance_;
class C_GetXkyqInfo_2008;
class C_GetXkyqInfo_2008DefaultTypeInternal;
extern C_GetXkyqInfo_2008DefaultTypeInternal _C_GetXkyqInfo_2008_default_instance_;
class C_GetYxszInfo_2010;
class C_GetYxszInfo_2010DefaultTypeInternal;
extern C_GetYxszInfo_2010DefaultTypeInternal _C_GetYxszInfo_2010_default_instance_;
class C_GetZntjInfoList_3000;
class C_GetZntjInfoList_3000DefaultTypeInternal;
extern C_GetZntjInfoList_3000DefaultTypeInternal _C_GetZntjInfoList_3000_default_instance_;
class C_GetZsjzInfo_2012;
class C_GetZsjzInfo_2012DefaultTypeInternal;
extern C_GetZsjzInfo_2012DefaultTypeInternal _C_GetZsjzInfo_2012_default_instance_;
class C_GetZyAdmitInfo_2004;
class C_GetZyAdmitInfo_2004DefaultTypeInternal;
extern C_GetZyAdmitInfo_2004DefaultTypeInternal _C_GetZyAdmitInfo_2004_default_instance_;
class C_GetZydqList_3010;
class C_GetZydqList_3010DefaultTypeInternal;
extern C_GetZydqList_3010DefaultTypeInternal _C_GetZydqList_3010_default_instance_;
class C_GetZyzdxList_3014;
class C_GetZyzdxList_3014DefaultTypeInternal;
extern C_GetZyzdxList_3014DefaultTypeInternal _C_GetZyzdxList_3014_default_instance_;
class C_LoginResByPhone_1002;
class C_LoginResByPhone_1002DefaultTypeInternal;
extern C_LoginResByPhone_1002DefaultTypeInternal _C_LoginResByPhone_1002_default_instance_;
class C_LoginResByUser_1000;
class C_LoginResByUser_1000DefaultTypeInternal;
extern C_LoginResByUser_1000DefaultTypeInternal _C_LoginResByUser_1000_default_instance_;
class C_SaveAssessment_1026;
class C_SaveAssessment_1026DefaultTypeInternal;
extern C_SaveAssessment_1026DefaultTypeInternal _C_SaveAssessment_1026_default_instance_;
class C_SaveUserInfo_1006;
class C_SaveUserInfo_1006DefaultTypeInternal;
extern C_SaveUserInfo_1006DefaultTypeInternal _C_SaveUserInfo_1006_default_instance_;
class C_SaveUserInfo_1028;
class C_SaveUserInfo_1028DefaultTypeInternal;
extern C_SaveUserInfo_1028DefaultTypeInternal _C_SaveUserInfo_1028_default_instance_;
class DisciplineContrastRes;
class DisciplineContrastResDefaultTypeInternal;
extern DisciplineContrastResDefaultTypeInternal _DisciplineContrastRes_default_instance_;
class DisciplineStoreUpRes;
class DisciplineStoreUpResDefaultTypeInternal;
extern DisciplineStoreUpResDefaultTypeInternal _DisciplineStoreUpRes_default_instance_;
class FSXZY;
class FSXZYDefaultTypeInternal;
extern FSXZYDefaultTypeInternal _FSXZY_default_instance_;
class PagingInfo;
class PagingInfoDefaultTypeInternal;
extern PagingInfoDefaultTypeInternal _PagingInfo_default_instance_;
class PlanRecruit;
class PlanRecruitDefaultTypeInternal;
extern PlanRecruitDefaultTypeInternal _PlanRecruit_default_instance_;
class RetObj;
class RetObjDefaultTypeInternal;
extern RetObjDefaultTypeInternal _RetObj_default_instance_;
class S_ChangePwd_1005;
class S_ChangePwd_1005DefaultTypeInternal;
extern S_ChangePwd_1005DefaultTypeInternal _S_ChangePwd_1005_default_instance_;
class S_GetDisciplineContrastResList_1025;
class S_GetDisciplineContrastResList_1025DefaultTypeInternal;
extern S_GetDisciplineContrastResList_1025DefaultTypeInternal _S_GetDisciplineContrastResList_1025_default_instance_;
class S_GetDisciplineStoreUpResList_1021;
class S_GetDisciplineStoreUpResList_1021DefaultTypeInternal;
extern S_GetDisciplineStoreUpResList_1021DefaultTypeInternal _S_GetDisciplineStoreUpResList_1021_default_instance_;
class S_GetPlanRecruit_2007;
class S_GetPlanRecruit_2007DefaultTypeInternal;
extern S_GetPlanRecruit_2007DefaultTypeInternal _S_GetPlanRecruit_2007_default_instance_;
class S_GetSchoolAdmitInfo_2003;
class S_GetSchoolAdmitInfo_2003DefaultTypeInternal;
extern S_GetSchoolAdmitInfo_2003DefaultTypeInternal _S_GetSchoolAdmitInfo_2003_default_instance_;
class S_GetSchoolContrastResList_1023;
class S_GetSchoolContrastResList_1023DefaultTypeInternal;
extern S_GetSchoolContrastResList_1023DefaultTypeInternal _S_GetSchoolContrastResList_1023_default_instance_;
class S_GetSchoolInfoById_2001;
class S_GetSchoolInfoById_2001DefaultTypeInternal;
extern S_GetSchoolInfoById_2001DefaultTypeInternal _S_GetSchoolInfoById_2001_default_instance_;
class S_GetSchoolStoreUpResList_1009;
class S_GetSchoolStoreUpResList_1009DefaultTypeInternal;
extern S_GetSchoolStoreUpResList_1009DefaultTypeInternal _S_GetSchoolStoreUpResList_1009_default_instance_;
class S_GetSeachFSXZYList_3013;
class S_GetSeachFSXZYList_3013DefaultTypeInternal;
extern S_GetSeachFSXZYList_3013DefaultTypeInternal _S_GetSeachFSXZYList_3013_default_instance_;
class S_GetSeachSKYXList_3007;
class S_GetSeachSKYXList_3007DefaultTypeInternal;
extern S_GetSeachSKYXList_3007DefaultTypeInternal _S_GetSeachSKYXList_3007_default_instance_;
class S_GetSeachSchoolList_3003;
class S_GetSeachSchoolList_3003DefaultTypeInternal;
extern S_GetSeachSchoolList_3003DefaultTypeInternal _S_GetSeachSchoolList_3003_default_instance_;
class S_GetSeachScoreList_3005;
class S_GetSeachScoreList_3005DefaultTypeInternal;
extern S_GetSeachScoreList_3005DefaultTypeInternal _S_GetSeachScoreList_3005_default_instance_;
class S_GetSeachYYPMList_3009;
class S_GetSeachYYPMList_3009DefaultTypeInternal;
extern S_GetSeachYYPMList_3009DefaultTypeInternal _S_GetSeachYYPMList_3009_default_instance_;
class S_GetXkyqInfo_2009;
class S_GetXkyqInfo_2009DefaultTypeInternal;
extern S_GetXkyqInfo_2009DefaultTypeInternal _S_GetXkyqInfo_2009_default_instance_;
class S_GetYxszInfo_2011;
class S_GetYxszInfo_2011DefaultTypeInternal;
extern S_GetYxszInfo_2011DefaultTypeInternal _S_GetYxszInfo_2011_default_instance_;
class S_GetZntjInfoList_3001;
class S_GetZntjInfoList_3001DefaultTypeInternal;
extern S_GetZntjInfoList_3001DefaultTypeInternal _S_GetZntjInfoList_3001_default_instance_;
class S_GetZsjzInfo_2013;
class S_GetZsjzInfo_2013DefaultTypeInternal;
extern S_GetZsjzInfo_2013DefaultTypeInternal _S_GetZsjzInfo_2013_default_instance_;
class S_GetZyAdmitInfo_2005;
class S_GetZyAdmitInfo_2005DefaultTypeInternal;
extern S_GetZyAdmitInfo_2005DefaultTypeInternal _S_GetZyAdmitInfo_2005_default_instance_;
class S_GetZydqList_3011;
class S_GetZydqList_3011DefaultTypeInternal;
extern S_GetZydqList_3011DefaultTypeInternal _S_GetZydqList_3011_default_instance_;
class S_GetZyzdxList_3015;
class S_GetZyzdxList_3015DefaultTypeInternal;
extern S_GetZyzdxList_3015DefaultTypeInternal _S_GetZyzdxList_3015_default_instance_;
class S_LoginResByPhone_1003;
class S_LoginResByPhone_1003DefaultTypeInternal;
extern S_LoginResByPhone_1003DefaultTypeInternal _S_LoginResByPhone_1003_default_instance_;
class S_LoginResByUser_1001;
class S_LoginResByUser_1001DefaultTypeInternal;
extern S_LoginResByUser_1001DefaultTypeInternal _S_LoginResByUser_1001_default_instance_;
class S_SaveAssessment_1027;
class S_SaveAssessment_1027DefaultTypeInternal;
extern S_SaveAssessment_1027DefaultTypeInternal _S_SaveAssessment_1027_default_instance_;
class S_SaveUserInfo_1007;
class S_SaveUserInfo_1007DefaultTypeInternal;
extern S_SaveUserInfo_1007DefaultTypeInternal _S_SaveUserInfo_1007_default_instance_;
class S_SaveUserInfo_1029;
class S_SaveUserInfo_1029DefaultTypeInternal;
extern S_SaveUserInfo_1029DefaultTypeInternal _S_SaveUserInfo_1029_default_instance_;
class SchoolAdmitInfo;
class SchoolAdmitInfoDefaultTypeInternal;
extern SchoolAdmitInfoDefaultTypeInternal _SchoolAdmitInfo_default_instance_;
class SchoolContrastRes;
class SchoolContrastResDefaultTypeInternal;
extern SchoolContrastResDefaultTypeInternal _SchoolContrastRes_default_instance_;
class SchoolInfo;
class SchoolInfoDefaultTypeInternal;
extern SchoolInfoDefaultTypeInternal _SchoolInfo_default_instance_;
class SchoolStoreUpRes;
class SchoolStoreUpResDefaultTypeInternal;
extern SchoolStoreUpResDefaultTypeInternal _SchoolStoreUpRes_default_instance_;
class SeachSKYX;
class SeachSKYXDefaultTypeInternal;
extern SeachSKYXDefaultTypeInternal _SeachSKYX_default_instance_;
class SeachSchool;
class SeachSchoolDefaultTypeInternal;
extern SeachSchoolDefaultTypeInternal _SeachSchool_default_instance_;
class SeachScore;
class SeachScoreDefaultTypeInternal;
extern SeachScoreDefaultTypeInternal _SeachScore_default_instance_;
class SeachYYPM;
class SeachYYPMDefaultTypeInternal;
extern SeachYYPMDefaultTypeInternal _SeachYYPM_default_instance_;
class UsersRes;
class UsersResDefaultTypeInternal;
extern UsersResDefaultTypeInternal _UsersRes_default_instance_;
class Xkml;
class XkmlDefaultTypeInternal;
extern XkmlDefaultTypeInternal _Xkml_default_instance_;
class Xkyq;
class XkyqDefaultTypeInternal;
extern XkyqDefaultTypeInternal _Xkyq_default_instance_;
class XkyqInfo;
class XkyqInfoDefaultTypeInternal;
extern XkyqInfoDefaultTypeInternal _XkyqInfo_default_instance_;
class Yjxk;
class YjxkDefaultTypeInternal;
extern YjxkDefaultTypeInternal _Yjxk_default_instance_;
class YxszInfo;
class YxszInfoDefaultTypeInternal;
extern YxszInfoDefaultTypeInternal _YxszInfo_default_instance_;
class ZntjInfo;
class ZntjInfoDefaultTypeInternal;
extern ZntjInfoDefaultTypeInternal _ZntjInfo_default_instance_;
class ZsjzInfo;
class ZsjzInfoDefaultTypeInternal;
extern ZsjzInfoDefaultTypeInternal _ZsjzInfo_default_instance_;
class ZyAdmitInfo;
class ZyAdmitInfoDefaultTypeInternal;
extern ZyAdmitInfoDefaultTypeInternal _ZyAdmitInfo_default_instance_;
class ZyInfo;
class ZyInfoDefaultTypeInternal;
extern ZyInfoDefaultTypeInternal _ZyInfo_default_instance_;
class Zyzdx;
class ZyzdxDefaultTypeInternal;
extern ZyzdxDefaultTypeInternal _Zyzdx_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::C_ChangePwd_1004* Arena::CreateMaybeMessage<::C_ChangePwd_1004>(Arena*);
template<> ::C_GetDisciplineContrastResList_1024* Arena::CreateMaybeMessage<::C_GetDisciplineContrastResList_1024>(Arena*);
template<> ::C_GetDisciplineStoreUpResList_1020* Arena::CreateMaybeMessage<::C_GetDisciplineStoreUpResList_1020>(Arena*);
template<> ::C_GetPlanRecruit_2006* Arena::CreateMaybeMessage<::C_GetPlanRecruit_2006>(Arena*);
template<> ::C_GetSchoolAdmitInfo_2002* Arena::CreateMaybeMessage<::C_GetSchoolAdmitInfo_2002>(Arena*);
template<> ::C_GetSchoolContrastResList_1022* Arena::CreateMaybeMessage<::C_GetSchoolContrastResList_1022>(Arena*);
template<> ::C_GetSchoolInfoById_2000* Arena::CreateMaybeMessage<::C_GetSchoolInfoById_2000>(Arena*);
template<> ::C_GetSchoolStoreUpResList_1008* Arena::CreateMaybeMessage<::C_GetSchoolStoreUpResList_1008>(Arena*);
template<> ::C_GetSeachFSXZYList_3012* Arena::CreateMaybeMessage<::C_GetSeachFSXZYList_3012>(Arena*);
template<> ::C_GetSeachSKYXList_3006* Arena::CreateMaybeMessage<::C_GetSeachSKYXList_3006>(Arena*);
template<> ::C_GetSeachSchoolList_3002* Arena::CreateMaybeMessage<::C_GetSeachSchoolList_3002>(Arena*);
template<> ::C_GetSeachScoreList_3004* Arena::CreateMaybeMessage<::C_GetSeachScoreList_3004>(Arena*);
template<> ::C_GetSeachYYPMList_3008* Arena::CreateMaybeMessage<::C_GetSeachYYPMList_3008>(Arena*);
template<> ::C_GetXkyqInfo_2008* Arena::CreateMaybeMessage<::C_GetXkyqInfo_2008>(Arena*);
template<> ::C_GetYxszInfo_2010* Arena::CreateMaybeMessage<::C_GetYxszInfo_2010>(Arena*);
template<> ::C_GetZntjInfoList_3000* Arena::CreateMaybeMessage<::C_GetZntjInfoList_3000>(Arena*);
template<> ::C_GetZsjzInfo_2012* Arena::CreateMaybeMessage<::C_GetZsjzInfo_2012>(Arena*);
template<> ::C_GetZyAdmitInfo_2004* Arena::CreateMaybeMessage<::C_GetZyAdmitInfo_2004>(Arena*);
template<> ::C_GetZydqList_3010* Arena::CreateMaybeMessage<::C_GetZydqList_3010>(Arena*);
template<> ::C_GetZyzdxList_3014* Arena::CreateMaybeMessage<::C_GetZyzdxList_3014>(Arena*);
template<> ::C_LoginResByPhone_1002* Arena::CreateMaybeMessage<::C_LoginResByPhone_1002>(Arena*);
template<> ::C_LoginResByUser_1000* Arena::CreateMaybeMessage<::C_LoginResByUser_1000>(Arena*);
template<> ::C_SaveAssessment_1026* Arena::CreateMaybeMessage<::C_SaveAssessment_1026>(Arena*);
template<> ::C_SaveUserInfo_1006* Arena::CreateMaybeMessage<::C_SaveUserInfo_1006>(Arena*);
template<> ::C_SaveUserInfo_1028* Arena::CreateMaybeMessage<::C_SaveUserInfo_1028>(Arena*);
template<> ::DisciplineContrastRes* Arena::CreateMaybeMessage<::DisciplineContrastRes>(Arena*);
template<> ::DisciplineStoreUpRes* Arena::CreateMaybeMessage<::DisciplineStoreUpRes>(Arena*);
template<> ::FSXZY* Arena::CreateMaybeMessage<::FSXZY>(Arena*);
template<> ::PagingInfo* Arena::CreateMaybeMessage<::PagingInfo>(Arena*);
template<> ::PlanRecruit* Arena::CreateMaybeMessage<::PlanRecruit>(Arena*);
template<> ::RetObj* Arena::CreateMaybeMessage<::RetObj>(Arena*);
template<> ::S_ChangePwd_1005* Arena::CreateMaybeMessage<::S_ChangePwd_1005>(Arena*);
template<> ::S_GetDisciplineContrastResList_1025* Arena::CreateMaybeMessage<::S_GetDisciplineContrastResList_1025>(Arena*);
template<> ::S_GetDisciplineStoreUpResList_1021* Arena::CreateMaybeMessage<::S_GetDisciplineStoreUpResList_1021>(Arena*);
template<> ::S_GetPlanRecruit_2007* Arena::CreateMaybeMessage<::S_GetPlanRecruit_2007>(Arena*);
template<> ::S_GetSchoolAdmitInfo_2003* Arena::CreateMaybeMessage<::S_GetSchoolAdmitInfo_2003>(Arena*);
template<> ::S_GetSchoolContrastResList_1023* Arena::CreateMaybeMessage<::S_GetSchoolContrastResList_1023>(Arena*);
template<> ::S_GetSchoolInfoById_2001* Arena::CreateMaybeMessage<::S_GetSchoolInfoById_2001>(Arena*);
template<> ::S_GetSchoolStoreUpResList_1009* Arena::CreateMaybeMessage<::S_GetSchoolStoreUpResList_1009>(Arena*);
template<> ::S_GetSeachFSXZYList_3013* Arena::CreateMaybeMessage<::S_GetSeachFSXZYList_3013>(Arena*);
template<> ::S_GetSeachSKYXList_3007* Arena::CreateMaybeMessage<::S_GetSeachSKYXList_3007>(Arena*);
template<> ::S_GetSeachSchoolList_3003* Arena::CreateMaybeMessage<::S_GetSeachSchoolList_3003>(Arena*);
template<> ::S_GetSeachScoreList_3005* Arena::CreateMaybeMessage<::S_GetSeachScoreList_3005>(Arena*);
template<> ::S_GetSeachYYPMList_3009* Arena::CreateMaybeMessage<::S_GetSeachYYPMList_3009>(Arena*);
template<> ::S_GetXkyqInfo_2009* Arena::CreateMaybeMessage<::S_GetXkyqInfo_2009>(Arena*);
template<> ::S_GetYxszInfo_2011* Arena::CreateMaybeMessage<::S_GetYxszInfo_2011>(Arena*);
template<> ::S_GetZntjInfoList_3001* Arena::CreateMaybeMessage<::S_GetZntjInfoList_3001>(Arena*);
template<> ::S_GetZsjzInfo_2013* Arena::CreateMaybeMessage<::S_GetZsjzInfo_2013>(Arena*);
template<> ::S_GetZyAdmitInfo_2005* Arena::CreateMaybeMessage<::S_GetZyAdmitInfo_2005>(Arena*);
template<> ::S_GetZydqList_3011* Arena::CreateMaybeMessage<::S_GetZydqList_3011>(Arena*);
template<> ::S_GetZyzdxList_3015* Arena::CreateMaybeMessage<::S_GetZyzdxList_3015>(Arena*);
template<> ::S_LoginResByPhone_1003* Arena::CreateMaybeMessage<::S_LoginResByPhone_1003>(Arena*);
template<> ::S_LoginResByUser_1001* Arena::CreateMaybeMessage<::S_LoginResByUser_1001>(Arena*);
template<> ::S_SaveAssessment_1027* Arena::CreateMaybeMessage<::S_SaveAssessment_1027>(Arena*);
template<> ::S_SaveUserInfo_1007* Arena::CreateMaybeMessage<::S_SaveUserInfo_1007>(Arena*);
template<> ::S_SaveUserInfo_1029* Arena::CreateMaybeMessage<::S_SaveUserInfo_1029>(Arena*);
template<> ::SchoolAdmitInfo* Arena::CreateMaybeMessage<::SchoolAdmitInfo>(Arena*);
template<> ::SchoolContrastRes* Arena::CreateMaybeMessage<::SchoolContrastRes>(Arena*);
template<> ::SchoolInfo* Arena::CreateMaybeMessage<::SchoolInfo>(Arena*);
template<> ::SchoolStoreUpRes* Arena::CreateMaybeMessage<::SchoolStoreUpRes>(Arena*);
template<> ::SeachSKYX* Arena::CreateMaybeMessage<::SeachSKYX>(Arena*);
template<> ::SeachSchool* Arena::CreateMaybeMessage<::SeachSchool>(Arena*);
template<> ::SeachScore* Arena::CreateMaybeMessage<::SeachScore>(Arena*);
template<> ::SeachYYPM* Arena::CreateMaybeMessage<::SeachYYPM>(Arena*);
template<> ::UsersRes* Arena::CreateMaybeMessage<::UsersRes>(Arena*);
template<> ::Xkml* Arena::CreateMaybeMessage<::Xkml>(Arena*);
template<> ::Xkyq* Arena::CreateMaybeMessage<::Xkyq>(Arena*);
template<> ::XkyqInfo* Arena::CreateMaybeMessage<::XkyqInfo>(Arena*);
template<> ::Yjxk* Arena::CreateMaybeMessage<::Yjxk>(Arena*);
template<> ::YxszInfo* Arena::CreateMaybeMessage<::YxszInfo>(Arena*);
template<> ::ZntjInfo* Arena::CreateMaybeMessage<::ZntjInfo>(Arena*);
template<> ::ZsjzInfo* Arena::CreateMaybeMessage<::ZsjzInfo>(Arena*);
template<> ::ZyAdmitInfo* Arena::CreateMaybeMessage<::ZyAdmitInfo>(Arena*);
template<> ::ZyInfo* Arena::CreateMaybeMessage<::ZyInfo>(Arena*);
template<> ::Zyzdx* Arena::CreateMaybeMessage<::Zyzdx>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class C_LoginResByUser_1000 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:C_LoginResByUser_1000) */ {
 public:
  C_LoginResByUser_1000();
  virtual ~C_LoginResByUser_1000();

  C_LoginResByUser_1000(const C_LoginResByUser_1000& from);
  C_LoginResByUser_1000(C_LoginResByUser_1000&& from) noexcept
    : C_LoginResByUser_1000() {
    *this = ::std::move(from);
  }

  inline C_LoginResByUser_1000& operator=(const C_LoginResByUser_1000& from) {
    CopyFrom(from);
    return *this;
  }
  inline C_LoginResByUser_1000& operator=(C_LoginResByUser_1000&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const C_LoginResByUser_1000& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_LoginResByUser_1000* internal_default_instance() {
    return reinterpret_cast<const C_LoginResByUser_1000*>(
               &_C_LoginResByUser_1000_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(C_LoginResByUser_1000& a, C_LoginResByUser_1000& b) {
    a.Swap(&b);
  }
  inline void Swap(C_LoginResByUser_1000* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline C_LoginResByUser_1000* New() const final {
    return CreateMaybeMessage<C_LoginResByUser_1000>(nullptr);
  }

  C_LoginResByUser_1000* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<C_LoginResByUser_1000>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const C_LoginResByUser_1000& from);
  void MergeFrom(const C_LoginResByUser_1000& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(C_LoginResByUser_1000* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "C_LoginResByUser_1000";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTelFieldNumber = 1,
    kYzmFieldNumber = 2,
  };
  // string tel = 1;
  void clear_tel();
  const std::string& tel() const;
  void set_tel(const std::string& value);
  void set_tel(std::string&& value);
  void set_tel(const char* value);
  void set_tel(const char* value, size_t size);
  std::string* mutable_tel();
  std::string* release_tel();
  void set_allocated_tel(std::string* tel);
  private:
  const std::string& _internal_tel() const;
  void _internal_set_tel(const std::string& value);
  std::string* _internal_mutable_tel();
  public:

  // string yzm = 2;
  void clear_yzm();
  const std::string& yzm() const;
  void set_yzm(const std::string& value);
  void set_yzm(std::string&& value);
  void set_yzm(const char* value);
  void set_yzm(const char* value, size_t size);
  std::string* mutable_yzm();
  std::string* release_yzm();
  void set_allocated_yzm(std::string* yzm);
  private:
  const std::string& _internal_yzm() const;
  void _internal_set_yzm(const std::string& value);
  std::string* _internal_mutable_yzm();
  public:

  // @@protoc_insertion_point(class_scope:C_LoginResByUser_1000)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tel_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr yzm_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class S_LoginResByUser_1001 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:S_LoginResByUser_1001) */ {
 public:
  S_LoginResByUser_1001();
  virtual ~S_LoginResByUser_1001();

  S_LoginResByUser_1001(const S_LoginResByUser_1001& from);
  S_LoginResByUser_1001(S_LoginResByUser_1001&& from) noexcept
    : S_LoginResByUser_1001() {
    *this = ::std::move(from);
  }

  inline S_LoginResByUser_1001& operator=(const S_LoginResByUser_1001& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_LoginResByUser_1001& operator=(S_LoginResByUser_1001&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const S_LoginResByUser_1001& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S_LoginResByUser_1001* internal_default_instance() {
    return reinterpret_cast<const S_LoginResByUser_1001*>(
               &_S_LoginResByUser_1001_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(S_LoginResByUser_1001& a, S_LoginResByUser_1001& b) {
    a.Swap(&b);
  }
  inline void Swap(S_LoginResByUser_1001* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline S_LoginResByUser_1001* New() const final {
    return CreateMaybeMessage<S_LoginResByUser_1001>(nullptr);
  }

  S_LoginResByUser_1001* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<S_LoginResByUser_1001>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const S_LoginResByUser_1001& from);
  void MergeFrom(const S_LoginResByUser_1001& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S_LoginResByUser_1001* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "S_LoginResByUser_1001";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUsersResFieldNumber = 1,
  };
  // .UsersRes usersRes = 1;
  bool has_usersres() const;
  private:
  bool _internal_has_usersres() const;
  public:
  void clear_usersres();
  const ::UsersRes& usersres() const;
  ::UsersRes* release_usersres();
  ::UsersRes* mutable_usersres();
  void set_allocated_usersres(::UsersRes* usersres);
  private:
  const ::UsersRes& _internal_usersres() const;
  ::UsersRes* _internal_mutable_usersres();
  public:

  // @@protoc_insertion_point(class_scope:S_LoginResByUser_1001)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::UsersRes* usersres_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class C_LoginResByPhone_1002 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:C_LoginResByPhone_1002) */ {
 public:
  C_LoginResByPhone_1002();
  virtual ~C_LoginResByPhone_1002();

  C_LoginResByPhone_1002(const C_LoginResByPhone_1002& from);
  C_LoginResByPhone_1002(C_LoginResByPhone_1002&& from) noexcept
    : C_LoginResByPhone_1002() {
    *this = ::std::move(from);
  }

  inline C_LoginResByPhone_1002& operator=(const C_LoginResByPhone_1002& from) {
    CopyFrom(from);
    return *this;
  }
  inline C_LoginResByPhone_1002& operator=(C_LoginResByPhone_1002&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const C_LoginResByPhone_1002& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_LoginResByPhone_1002* internal_default_instance() {
    return reinterpret_cast<const C_LoginResByPhone_1002*>(
               &_C_LoginResByPhone_1002_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(C_LoginResByPhone_1002& a, C_LoginResByPhone_1002& b) {
    a.Swap(&b);
  }
  inline void Swap(C_LoginResByPhone_1002* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline C_LoginResByPhone_1002* New() const final {
    return CreateMaybeMessage<C_LoginResByPhone_1002>(nullptr);
  }

  C_LoginResByPhone_1002* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<C_LoginResByPhone_1002>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const C_LoginResByPhone_1002& from);
  void MergeFrom(const C_LoginResByPhone_1002& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(C_LoginResByPhone_1002* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "C_LoginResByPhone_1002";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTelFieldNumber = 1,
    kPwdFieldNumber = 2,
  };
  // string tel = 1;
  void clear_tel();
  const std::string& tel() const;
  void set_tel(const std::string& value);
  void set_tel(std::string&& value);
  void set_tel(const char* value);
  void set_tel(const char* value, size_t size);
  std::string* mutable_tel();
  std::string* release_tel();
  void set_allocated_tel(std::string* tel);
  private:
  const std::string& _internal_tel() const;
  void _internal_set_tel(const std::string& value);
  std::string* _internal_mutable_tel();
  public:

  // string pwd = 2;
  void clear_pwd();
  const std::string& pwd() const;
  void set_pwd(const std::string& value);
  void set_pwd(std::string&& value);
  void set_pwd(const char* value);
  void set_pwd(const char* value, size_t size);
  std::string* mutable_pwd();
  std::string* release_pwd();
  void set_allocated_pwd(std::string* pwd);
  private:
  const std::string& _internal_pwd() const;
  void _internal_set_pwd(const std::string& value);
  std::string* _internal_mutable_pwd();
  public:

  // @@protoc_insertion_point(class_scope:C_LoginResByPhone_1002)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tel_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pwd_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class S_LoginResByPhone_1003 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:S_LoginResByPhone_1003) */ {
 public:
  S_LoginResByPhone_1003();
  virtual ~S_LoginResByPhone_1003();

  S_LoginResByPhone_1003(const S_LoginResByPhone_1003& from);
  S_LoginResByPhone_1003(S_LoginResByPhone_1003&& from) noexcept
    : S_LoginResByPhone_1003() {
    *this = ::std::move(from);
  }

  inline S_LoginResByPhone_1003& operator=(const S_LoginResByPhone_1003& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_LoginResByPhone_1003& operator=(S_LoginResByPhone_1003&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const S_LoginResByPhone_1003& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S_LoginResByPhone_1003* internal_default_instance() {
    return reinterpret_cast<const S_LoginResByPhone_1003*>(
               &_S_LoginResByPhone_1003_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(S_LoginResByPhone_1003& a, S_LoginResByPhone_1003& b) {
    a.Swap(&b);
  }
  inline void Swap(S_LoginResByPhone_1003* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline S_LoginResByPhone_1003* New() const final {
    return CreateMaybeMessage<S_LoginResByPhone_1003>(nullptr);
  }

  S_LoginResByPhone_1003* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<S_LoginResByPhone_1003>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const S_LoginResByPhone_1003& from);
  void MergeFrom(const S_LoginResByPhone_1003& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S_LoginResByPhone_1003* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "S_LoginResByPhone_1003";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUsersResFieldNumber = 1,
    kRetObjFieldNumber = 2,
  };
  // .UsersRes usersRes = 1;
  bool has_usersres() const;
  private:
  bool _internal_has_usersres() const;
  public:
  void clear_usersres();
  const ::UsersRes& usersres() const;
  ::UsersRes* release_usersres();
  ::UsersRes* mutable_usersres();
  void set_allocated_usersres(::UsersRes* usersres);
  private:
  const ::UsersRes& _internal_usersres() const;
  ::UsersRes* _internal_mutable_usersres();
  public:

  // .RetObj retObj = 2;
  bool has_retobj() const;
  private:
  bool _internal_has_retobj() const;
  public:
  void clear_retobj();
  const ::RetObj& retobj() const;
  ::RetObj* release_retobj();
  ::RetObj* mutable_retobj();
  void set_allocated_retobj(::RetObj* retobj);
  private:
  const ::RetObj& _internal_retobj() const;
  ::RetObj* _internal_mutable_retobj();
  public:

  // @@protoc_insertion_point(class_scope:S_LoginResByPhone_1003)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::UsersRes* usersres_;
  ::RetObj* retobj_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class C_ChangePwd_1004 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:C_ChangePwd_1004) */ {
 public:
  C_ChangePwd_1004();
  virtual ~C_ChangePwd_1004();

  C_ChangePwd_1004(const C_ChangePwd_1004& from);
  C_ChangePwd_1004(C_ChangePwd_1004&& from) noexcept
    : C_ChangePwd_1004() {
    *this = ::std::move(from);
  }

  inline C_ChangePwd_1004& operator=(const C_ChangePwd_1004& from) {
    CopyFrom(from);
    return *this;
  }
  inline C_ChangePwd_1004& operator=(C_ChangePwd_1004&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const C_ChangePwd_1004& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_ChangePwd_1004* internal_default_instance() {
    return reinterpret_cast<const C_ChangePwd_1004*>(
               &_C_ChangePwd_1004_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(C_ChangePwd_1004& a, C_ChangePwd_1004& b) {
    a.Swap(&b);
  }
  inline void Swap(C_ChangePwd_1004* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline C_ChangePwd_1004* New() const final {
    return CreateMaybeMessage<C_ChangePwd_1004>(nullptr);
  }

  C_ChangePwd_1004* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<C_ChangePwd_1004>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const C_ChangePwd_1004& from);
  void MergeFrom(const C_ChangePwd_1004& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(C_ChangePwd_1004* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "C_ChangePwd_1004";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTelFieldNumber = 1,
    kYzmFieldNumber = 2,
    kNewPwdFieldNumber = 3,
  };
  // string tel = 1;
  void clear_tel();
  const std::string& tel() const;
  void set_tel(const std::string& value);
  void set_tel(std::string&& value);
  void set_tel(const char* value);
  void set_tel(const char* value, size_t size);
  std::string* mutable_tel();
  std::string* release_tel();
  void set_allocated_tel(std::string* tel);
  private:
  const std::string& _internal_tel() const;
  void _internal_set_tel(const std::string& value);
  std::string* _internal_mutable_tel();
  public:

  // string yzm = 2;
  void clear_yzm();
  const std::string& yzm() const;
  void set_yzm(const std::string& value);
  void set_yzm(std::string&& value);
  void set_yzm(const char* value);
  void set_yzm(const char* value, size_t size);
  std::string* mutable_yzm();
  std::string* release_yzm();
  void set_allocated_yzm(std::string* yzm);
  private:
  const std::string& _internal_yzm() const;
  void _internal_set_yzm(const std::string& value);
  std::string* _internal_mutable_yzm();
  public:

  // string newPwd = 3;
  void clear_newpwd();
  const std::string& newpwd() const;
  void set_newpwd(const std::string& value);
  void set_newpwd(std::string&& value);
  void set_newpwd(const char* value);
  void set_newpwd(const char* value, size_t size);
  std::string* mutable_newpwd();
  std::string* release_newpwd();
  void set_allocated_newpwd(std::string* newpwd);
  private:
  const std::string& _internal_newpwd() const;
  void _internal_set_newpwd(const std::string& value);
  std::string* _internal_mutable_newpwd();
  public:

  // @@protoc_insertion_point(class_scope:C_ChangePwd_1004)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tel_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr yzm_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr newpwd_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class S_ChangePwd_1005 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:S_ChangePwd_1005) */ {
 public:
  S_ChangePwd_1005();
  virtual ~S_ChangePwd_1005();

  S_ChangePwd_1005(const S_ChangePwd_1005& from);
  S_ChangePwd_1005(S_ChangePwd_1005&& from) noexcept
    : S_ChangePwd_1005() {
    *this = ::std::move(from);
  }

  inline S_ChangePwd_1005& operator=(const S_ChangePwd_1005& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_ChangePwd_1005& operator=(S_ChangePwd_1005&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const S_ChangePwd_1005& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S_ChangePwd_1005* internal_default_instance() {
    return reinterpret_cast<const S_ChangePwd_1005*>(
               &_S_ChangePwd_1005_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(S_ChangePwd_1005& a, S_ChangePwd_1005& b) {
    a.Swap(&b);
  }
  inline void Swap(S_ChangePwd_1005* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline S_ChangePwd_1005* New() const final {
    return CreateMaybeMessage<S_ChangePwd_1005>(nullptr);
  }

  S_ChangePwd_1005* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<S_ChangePwd_1005>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const S_ChangePwd_1005& from);
  void MergeFrom(const S_ChangePwd_1005& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S_ChangePwd_1005* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "S_ChangePwd_1005";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetObjFieldNumber = 1,
  };
  // .RetObj retObj = 1;
  bool has_retobj() const;
  private:
  bool _internal_has_retobj() const;
  public:
  void clear_retobj();
  const ::RetObj& retobj() const;
  ::RetObj* release_retobj();
  ::RetObj* mutable_retobj();
  void set_allocated_retobj(::RetObj* retobj);
  private:
  const ::RetObj& _internal_retobj() const;
  ::RetObj* _internal_mutable_retobj();
  public:

  // @@protoc_insertion_point(class_scope:S_ChangePwd_1005)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::RetObj* retobj_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class C_SaveUserInfo_1006 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:C_SaveUserInfo_1006) */ {
 public:
  C_SaveUserInfo_1006();
  virtual ~C_SaveUserInfo_1006();

  C_SaveUserInfo_1006(const C_SaveUserInfo_1006& from);
  C_SaveUserInfo_1006(C_SaveUserInfo_1006&& from) noexcept
    : C_SaveUserInfo_1006() {
    *this = ::std::move(from);
  }

  inline C_SaveUserInfo_1006& operator=(const C_SaveUserInfo_1006& from) {
    CopyFrom(from);
    return *this;
  }
  inline C_SaveUserInfo_1006& operator=(C_SaveUserInfo_1006&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const C_SaveUserInfo_1006& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_SaveUserInfo_1006* internal_default_instance() {
    return reinterpret_cast<const C_SaveUserInfo_1006*>(
               &_C_SaveUserInfo_1006_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(C_SaveUserInfo_1006& a, C_SaveUserInfo_1006& b) {
    a.Swap(&b);
  }
  inline void Swap(C_SaveUserInfo_1006* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline C_SaveUserInfo_1006* New() const final {
    return CreateMaybeMessage<C_SaveUserInfo_1006>(nullptr);
  }

  C_SaveUserInfo_1006* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<C_SaveUserInfo_1006>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const C_SaveUserInfo_1006& from);
  void MergeFrom(const C_SaveUserInfo_1006& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(C_SaveUserInfo_1006* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "C_SaveUserInfo_1006";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSspFieldNumber = 5,
    kExamYearFieldNumber = 6,
    kExamPreScoreFieldNumber = 7,
    kRoleFieldNumber = 8,
    kExamSubjectFieldNumber = 9,
    kIdFieldNumber = 1,
  };
  // string ssp = 5;
  void clear_ssp();
  const std::string& ssp() const;
  void set_ssp(const std::string& value);
  void set_ssp(std::string&& value);
  void set_ssp(const char* value);
  void set_ssp(const char* value, size_t size);
  std::string* mutable_ssp();
  std::string* release_ssp();
  void set_allocated_ssp(std::string* ssp);
  private:
  const std::string& _internal_ssp() const;
  void _internal_set_ssp(const std::string& value);
  std::string* _internal_mutable_ssp();
  public:

  // string examYear = 6;
  void clear_examyear();
  const std::string& examyear() const;
  void set_examyear(const std::string& value);
  void set_examyear(std::string&& value);
  void set_examyear(const char* value);
  void set_examyear(const char* value, size_t size);
  std::string* mutable_examyear();
  std::string* release_examyear();
  void set_allocated_examyear(std::string* examyear);
  private:
  const std::string& _internal_examyear() const;
  void _internal_set_examyear(const std::string& value);
  std::string* _internal_mutable_examyear();
  public:

  // string examPreScore = 7;
  void clear_examprescore();
  const std::string& examprescore() const;
  void set_examprescore(const std::string& value);
  void set_examprescore(std::string&& value);
  void set_examprescore(const char* value);
  void set_examprescore(const char* value, size_t size);
  std::string* mutable_examprescore();
  std::string* release_examprescore();
  void set_allocated_examprescore(std::string* examprescore);
  private:
  const std::string& _internal_examprescore() const;
  void _internal_set_examprescore(const std::string& value);
  std::string* _internal_mutable_examprescore();
  public:

  // string role = 8;
  void clear_role();
  const std::string& role() const;
  void set_role(const std::string& value);
  void set_role(std::string&& value);
  void set_role(const char* value);
  void set_role(const char* value, size_t size);
  std::string* mutable_role();
  std::string* release_role();
  void set_allocated_role(std::string* role);
  private:
  const std::string& _internal_role() const;
  void _internal_set_role(const std::string& value);
  std::string* _internal_mutable_role();
  public:

  // string examSubject = 9;
  void clear_examsubject();
  const std::string& examsubject() const;
  void set_examsubject(const std::string& value);
  void set_examsubject(std::string&& value);
  void set_examsubject(const char* value);
  void set_examsubject(const char* value, size_t size);
  std::string* mutable_examsubject();
  std::string* release_examsubject();
  void set_allocated_examsubject(std::string* examsubject);
  private:
  const std::string& _internal_examsubject() const;
  void _internal_set_examsubject(const std::string& value);
  std::string* _internal_mutable_examsubject();
  public:

  // fixed64 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:C_SaveUserInfo_1006)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr ssp_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr examyear_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr examprescore_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr role_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr examsubject_;
  ::PROTOBUF_NAMESPACE_ID::uint64 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class S_SaveUserInfo_1007 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:S_SaveUserInfo_1007) */ {
 public:
  S_SaveUserInfo_1007();
  virtual ~S_SaveUserInfo_1007();

  S_SaveUserInfo_1007(const S_SaveUserInfo_1007& from);
  S_SaveUserInfo_1007(S_SaveUserInfo_1007&& from) noexcept
    : S_SaveUserInfo_1007() {
    *this = ::std::move(from);
  }

  inline S_SaveUserInfo_1007& operator=(const S_SaveUserInfo_1007& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_SaveUserInfo_1007& operator=(S_SaveUserInfo_1007&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const S_SaveUserInfo_1007& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S_SaveUserInfo_1007* internal_default_instance() {
    return reinterpret_cast<const S_SaveUserInfo_1007*>(
               &_S_SaveUserInfo_1007_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(S_SaveUserInfo_1007& a, S_SaveUserInfo_1007& b) {
    a.Swap(&b);
  }
  inline void Swap(S_SaveUserInfo_1007* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline S_SaveUserInfo_1007* New() const final {
    return CreateMaybeMessage<S_SaveUserInfo_1007>(nullptr);
  }

  S_SaveUserInfo_1007* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<S_SaveUserInfo_1007>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const S_SaveUserInfo_1007& from);
  void MergeFrom(const S_SaveUserInfo_1007& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S_SaveUserInfo_1007* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "S_SaveUserInfo_1007";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetObjFieldNumber = 1,
    kUsersResFieldNumber = 2,
  };
  // .RetObj retObj = 1;
  bool has_retobj() const;
  private:
  bool _internal_has_retobj() const;
  public:
  void clear_retobj();
  const ::RetObj& retobj() const;
  ::RetObj* release_retobj();
  ::RetObj* mutable_retobj();
  void set_allocated_retobj(::RetObj* retobj);
  private:
  const ::RetObj& _internal_retobj() const;
  ::RetObj* _internal_mutable_retobj();
  public:

  // .UsersRes usersRes = 2;
  bool has_usersres() const;
  private:
  bool _internal_has_usersres() const;
  public:
  void clear_usersres();
  const ::UsersRes& usersres() const;
  ::UsersRes* release_usersres();
  ::UsersRes* mutable_usersres();
  void set_allocated_usersres(::UsersRes* usersres);
  private:
  const ::UsersRes& _internal_usersres() const;
  ::UsersRes* _internal_mutable_usersres();
  public:

  // @@protoc_insertion_point(class_scope:S_SaveUserInfo_1007)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::RetObj* retobj_;
  ::UsersRes* usersres_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class C_GetSchoolStoreUpResList_1008 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:C_GetSchoolStoreUpResList_1008) */ {
 public:
  C_GetSchoolStoreUpResList_1008();
  virtual ~C_GetSchoolStoreUpResList_1008();

  C_GetSchoolStoreUpResList_1008(const C_GetSchoolStoreUpResList_1008& from);
  C_GetSchoolStoreUpResList_1008(C_GetSchoolStoreUpResList_1008&& from) noexcept
    : C_GetSchoolStoreUpResList_1008() {
    *this = ::std::move(from);
  }

  inline C_GetSchoolStoreUpResList_1008& operator=(const C_GetSchoolStoreUpResList_1008& from) {
    CopyFrom(from);
    return *this;
  }
  inline C_GetSchoolStoreUpResList_1008& operator=(C_GetSchoolStoreUpResList_1008&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const C_GetSchoolStoreUpResList_1008& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_GetSchoolStoreUpResList_1008* internal_default_instance() {
    return reinterpret_cast<const C_GetSchoolStoreUpResList_1008*>(
               &_C_GetSchoolStoreUpResList_1008_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(C_GetSchoolStoreUpResList_1008& a, C_GetSchoolStoreUpResList_1008& b) {
    a.Swap(&b);
  }
  inline void Swap(C_GetSchoolStoreUpResList_1008* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline C_GetSchoolStoreUpResList_1008* New() const final {
    return CreateMaybeMessage<C_GetSchoolStoreUpResList_1008>(nullptr);
  }

  C_GetSchoolStoreUpResList_1008* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<C_GetSchoolStoreUpResList_1008>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const C_GetSchoolStoreUpResList_1008& from);
  void MergeFrom(const C_GetSchoolStoreUpResList_1008& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(C_GetSchoolStoreUpResList_1008* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "C_GetSchoolStoreUpResList_1008";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserIDFieldNumber = 1,
  };
  // fixed64 userID = 1;
  void clear_userid();
  ::PROTOBUF_NAMESPACE_ID::uint64 userid() const;
  void set_userid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_userid() const;
  void _internal_set_userid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:C_GetSchoolStoreUpResList_1008)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 userid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class S_GetSchoolStoreUpResList_1009 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:S_GetSchoolStoreUpResList_1009) */ {
 public:
  S_GetSchoolStoreUpResList_1009();
  virtual ~S_GetSchoolStoreUpResList_1009();

  S_GetSchoolStoreUpResList_1009(const S_GetSchoolStoreUpResList_1009& from);
  S_GetSchoolStoreUpResList_1009(S_GetSchoolStoreUpResList_1009&& from) noexcept
    : S_GetSchoolStoreUpResList_1009() {
    *this = ::std::move(from);
  }

  inline S_GetSchoolStoreUpResList_1009& operator=(const S_GetSchoolStoreUpResList_1009& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_GetSchoolStoreUpResList_1009& operator=(S_GetSchoolStoreUpResList_1009&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const S_GetSchoolStoreUpResList_1009& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S_GetSchoolStoreUpResList_1009* internal_default_instance() {
    return reinterpret_cast<const S_GetSchoolStoreUpResList_1009*>(
               &_S_GetSchoolStoreUpResList_1009_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(S_GetSchoolStoreUpResList_1009& a, S_GetSchoolStoreUpResList_1009& b) {
    a.Swap(&b);
  }
  inline void Swap(S_GetSchoolStoreUpResList_1009* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline S_GetSchoolStoreUpResList_1009* New() const final {
    return CreateMaybeMessage<S_GetSchoolStoreUpResList_1009>(nullptr);
  }

  S_GetSchoolStoreUpResList_1009* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<S_GetSchoolStoreUpResList_1009>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const S_GetSchoolStoreUpResList_1009& from);
  void MergeFrom(const S_GetSchoolStoreUpResList_1009& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S_GetSchoolStoreUpResList_1009* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "S_GetSchoolStoreUpResList_1009";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSchoolStoreUpResListFieldNumber = 1,
  };
  // repeated .SchoolStoreUpRes schoolStoreUpResList = 1;
  int schoolstoreupreslist_size() const;
  private:
  int _internal_schoolstoreupreslist_size() const;
  public:
  void clear_schoolstoreupreslist();
  ::SchoolStoreUpRes* mutable_schoolstoreupreslist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SchoolStoreUpRes >*
      mutable_schoolstoreupreslist();
  private:
  const ::SchoolStoreUpRes& _internal_schoolstoreupreslist(int index) const;
  ::SchoolStoreUpRes* _internal_add_schoolstoreupreslist();
  public:
  const ::SchoolStoreUpRes& schoolstoreupreslist(int index) const;
  ::SchoolStoreUpRes* add_schoolstoreupreslist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SchoolStoreUpRes >&
      schoolstoreupreslist() const;

  // @@protoc_insertion_point(class_scope:S_GetSchoolStoreUpResList_1009)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SchoolStoreUpRes > schoolstoreupreslist_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class C_GetDisciplineStoreUpResList_1020 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:C_GetDisciplineStoreUpResList_1020) */ {
 public:
  C_GetDisciplineStoreUpResList_1020();
  virtual ~C_GetDisciplineStoreUpResList_1020();

  C_GetDisciplineStoreUpResList_1020(const C_GetDisciplineStoreUpResList_1020& from);
  C_GetDisciplineStoreUpResList_1020(C_GetDisciplineStoreUpResList_1020&& from) noexcept
    : C_GetDisciplineStoreUpResList_1020() {
    *this = ::std::move(from);
  }

  inline C_GetDisciplineStoreUpResList_1020& operator=(const C_GetDisciplineStoreUpResList_1020& from) {
    CopyFrom(from);
    return *this;
  }
  inline C_GetDisciplineStoreUpResList_1020& operator=(C_GetDisciplineStoreUpResList_1020&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const C_GetDisciplineStoreUpResList_1020& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_GetDisciplineStoreUpResList_1020* internal_default_instance() {
    return reinterpret_cast<const C_GetDisciplineStoreUpResList_1020*>(
               &_C_GetDisciplineStoreUpResList_1020_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(C_GetDisciplineStoreUpResList_1020& a, C_GetDisciplineStoreUpResList_1020& b) {
    a.Swap(&b);
  }
  inline void Swap(C_GetDisciplineStoreUpResList_1020* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline C_GetDisciplineStoreUpResList_1020* New() const final {
    return CreateMaybeMessage<C_GetDisciplineStoreUpResList_1020>(nullptr);
  }

  C_GetDisciplineStoreUpResList_1020* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<C_GetDisciplineStoreUpResList_1020>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const C_GetDisciplineStoreUpResList_1020& from);
  void MergeFrom(const C_GetDisciplineStoreUpResList_1020& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(C_GetDisciplineStoreUpResList_1020* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "C_GetDisciplineStoreUpResList_1020";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserIDFieldNumber = 1,
  };
  // fixed64 userID = 1;
  void clear_userid();
  ::PROTOBUF_NAMESPACE_ID::uint64 userid() const;
  void set_userid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_userid() const;
  void _internal_set_userid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:C_GetDisciplineStoreUpResList_1020)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 userid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class S_GetDisciplineStoreUpResList_1021 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:S_GetDisciplineStoreUpResList_1021) */ {
 public:
  S_GetDisciplineStoreUpResList_1021();
  virtual ~S_GetDisciplineStoreUpResList_1021();

  S_GetDisciplineStoreUpResList_1021(const S_GetDisciplineStoreUpResList_1021& from);
  S_GetDisciplineStoreUpResList_1021(S_GetDisciplineStoreUpResList_1021&& from) noexcept
    : S_GetDisciplineStoreUpResList_1021() {
    *this = ::std::move(from);
  }

  inline S_GetDisciplineStoreUpResList_1021& operator=(const S_GetDisciplineStoreUpResList_1021& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_GetDisciplineStoreUpResList_1021& operator=(S_GetDisciplineStoreUpResList_1021&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const S_GetDisciplineStoreUpResList_1021& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S_GetDisciplineStoreUpResList_1021* internal_default_instance() {
    return reinterpret_cast<const S_GetDisciplineStoreUpResList_1021*>(
               &_S_GetDisciplineStoreUpResList_1021_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(S_GetDisciplineStoreUpResList_1021& a, S_GetDisciplineStoreUpResList_1021& b) {
    a.Swap(&b);
  }
  inline void Swap(S_GetDisciplineStoreUpResList_1021* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline S_GetDisciplineStoreUpResList_1021* New() const final {
    return CreateMaybeMessage<S_GetDisciplineStoreUpResList_1021>(nullptr);
  }

  S_GetDisciplineStoreUpResList_1021* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<S_GetDisciplineStoreUpResList_1021>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const S_GetDisciplineStoreUpResList_1021& from);
  void MergeFrom(const S_GetDisciplineStoreUpResList_1021& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S_GetDisciplineStoreUpResList_1021* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "S_GetDisciplineStoreUpResList_1021";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDisciplineStoreUpResLisFieldNumber = 1,
  };
  // repeated .DisciplineStoreUpRes disciplineStoreUpResLis = 1;
  int disciplinestoreupreslis_size() const;
  private:
  int _internal_disciplinestoreupreslis_size() const;
  public:
  void clear_disciplinestoreupreslis();
  ::DisciplineStoreUpRes* mutable_disciplinestoreupreslis(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DisciplineStoreUpRes >*
      mutable_disciplinestoreupreslis();
  private:
  const ::DisciplineStoreUpRes& _internal_disciplinestoreupreslis(int index) const;
  ::DisciplineStoreUpRes* _internal_add_disciplinestoreupreslis();
  public:
  const ::DisciplineStoreUpRes& disciplinestoreupreslis(int index) const;
  ::DisciplineStoreUpRes* add_disciplinestoreupreslis();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DisciplineStoreUpRes >&
      disciplinestoreupreslis() const;

  // @@protoc_insertion_point(class_scope:S_GetDisciplineStoreUpResList_1021)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DisciplineStoreUpRes > disciplinestoreupreslis_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class C_GetSchoolContrastResList_1022 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:C_GetSchoolContrastResList_1022) */ {
 public:
  C_GetSchoolContrastResList_1022();
  virtual ~C_GetSchoolContrastResList_1022();

  C_GetSchoolContrastResList_1022(const C_GetSchoolContrastResList_1022& from);
  C_GetSchoolContrastResList_1022(C_GetSchoolContrastResList_1022&& from) noexcept
    : C_GetSchoolContrastResList_1022() {
    *this = ::std::move(from);
  }

  inline C_GetSchoolContrastResList_1022& operator=(const C_GetSchoolContrastResList_1022& from) {
    CopyFrom(from);
    return *this;
  }
  inline C_GetSchoolContrastResList_1022& operator=(C_GetSchoolContrastResList_1022&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const C_GetSchoolContrastResList_1022& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_GetSchoolContrastResList_1022* internal_default_instance() {
    return reinterpret_cast<const C_GetSchoolContrastResList_1022*>(
               &_C_GetSchoolContrastResList_1022_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(C_GetSchoolContrastResList_1022& a, C_GetSchoolContrastResList_1022& b) {
    a.Swap(&b);
  }
  inline void Swap(C_GetSchoolContrastResList_1022* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline C_GetSchoolContrastResList_1022* New() const final {
    return CreateMaybeMessage<C_GetSchoolContrastResList_1022>(nullptr);
  }

  C_GetSchoolContrastResList_1022* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<C_GetSchoolContrastResList_1022>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const C_GetSchoolContrastResList_1022& from);
  void MergeFrom(const C_GetSchoolContrastResList_1022& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(C_GetSchoolContrastResList_1022* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "C_GetSchoolContrastResList_1022";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserIDFieldNumber = 1,
  };
  // fixed64 userID = 1;
  void clear_userid();
  ::PROTOBUF_NAMESPACE_ID::uint64 userid() const;
  void set_userid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_userid() const;
  void _internal_set_userid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:C_GetSchoolContrastResList_1022)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 userid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class S_GetSchoolContrastResList_1023 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:S_GetSchoolContrastResList_1023) */ {
 public:
  S_GetSchoolContrastResList_1023();
  virtual ~S_GetSchoolContrastResList_1023();

  S_GetSchoolContrastResList_1023(const S_GetSchoolContrastResList_1023& from);
  S_GetSchoolContrastResList_1023(S_GetSchoolContrastResList_1023&& from) noexcept
    : S_GetSchoolContrastResList_1023() {
    *this = ::std::move(from);
  }

  inline S_GetSchoolContrastResList_1023& operator=(const S_GetSchoolContrastResList_1023& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_GetSchoolContrastResList_1023& operator=(S_GetSchoolContrastResList_1023&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const S_GetSchoolContrastResList_1023& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S_GetSchoolContrastResList_1023* internal_default_instance() {
    return reinterpret_cast<const S_GetSchoolContrastResList_1023*>(
               &_S_GetSchoolContrastResList_1023_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(S_GetSchoolContrastResList_1023& a, S_GetSchoolContrastResList_1023& b) {
    a.Swap(&b);
  }
  inline void Swap(S_GetSchoolContrastResList_1023* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline S_GetSchoolContrastResList_1023* New() const final {
    return CreateMaybeMessage<S_GetSchoolContrastResList_1023>(nullptr);
  }

  S_GetSchoolContrastResList_1023* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<S_GetSchoolContrastResList_1023>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const S_GetSchoolContrastResList_1023& from);
  void MergeFrom(const S_GetSchoolContrastResList_1023& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S_GetSchoolContrastResList_1023* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "S_GetSchoolContrastResList_1023";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSchoolContrastResListFieldNumber = 1,
  };
  // repeated .SchoolContrastRes schoolContrastResList = 1;
  int schoolcontrastreslist_size() const;
  private:
  int _internal_schoolcontrastreslist_size() const;
  public:
  void clear_schoolcontrastreslist();
  ::SchoolContrastRes* mutable_schoolcontrastreslist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SchoolContrastRes >*
      mutable_schoolcontrastreslist();
  private:
  const ::SchoolContrastRes& _internal_schoolcontrastreslist(int index) const;
  ::SchoolContrastRes* _internal_add_schoolcontrastreslist();
  public:
  const ::SchoolContrastRes& schoolcontrastreslist(int index) const;
  ::SchoolContrastRes* add_schoolcontrastreslist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SchoolContrastRes >&
      schoolcontrastreslist() const;

  // @@protoc_insertion_point(class_scope:S_GetSchoolContrastResList_1023)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SchoolContrastRes > schoolcontrastreslist_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class C_GetDisciplineContrastResList_1024 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:C_GetDisciplineContrastResList_1024) */ {
 public:
  C_GetDisciplineContrastResList_1024();
  virtual ~C_GetDisciplineContrastResList_1024();

  C_GetDisciplineContrastResList_1024(const C_GetDisciplineContrastResList_1024& from);
  C_GetDisciplineContrastResList_1024(C_GetDisciplineContrastResList_1024&& from) noexcept
    : C_GetDisciplineContrastResList_1024() {
    *this = ::std::move(from);
  }

  inline C_GetDisciplineContrastResList_1024& operator=(const C_GetDisciplineContrastResList_1024& from) {
    CopyFrom(from);
    return *this;
  }
  inline C_GetDisciplineContrastResList_1024& operator=(C_GetDisciplineContrastResList_1024&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const C_GetDisciplineContrastResList_1024& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_GetDisciplineContrastResList_1024* internal_default_instance() {
    return reinterpret_cast<const C_GetDisciplineContrastResList_1024*>(
               &_C_GetDisciplineContrastResList_1024_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(C_GetDisciplineContrastResList_1024& a, C_GetDisciplineContrastResList_1024& b) {
    a.Swap(&b);
  }
  inline void Swap(C_GetDisciplineContrastResList_1024* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline C_GetDisciplineContrastResList_1024* New() const final {
    return CreateMaybeMessage<C_GetDisciplineContrastResList_1024>(nullptr);
  }

  C_GetDisciplineContrastResList_1024* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<C_GetDisciplineContrastResList_1024>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const C_GetDisciplineContrastResList_1024& from);
  void MergeFrom(const C_GetDisciplineContrastResList_1024& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(C_GetDisciplineContrastResList_1024* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "C_GetDisciplineContrastResList_1024";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserIDFieldNumber = 1,
  };
  // fixed64 userID = 1;
  void clear_userid();
  ::PROTOBUF_NAMESPACE_ID::uint64 userid() const;
  void set_userid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_userid() const;
  void _internal_set_userid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:C_GetDisciplineContrastResList_1024)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 userid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class S_GetDisciplineContrastResList_1025 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:S_GetDisciplineContrastResList_1025) */ {
 public:
  S_GetDisciplineContrastResList_1025();
  virtual ~S_GetDisciplineContrastResList_1025();

  S_GetDisciplineContrastResList_1025(const S_GetDisciplineContrastResList_1025& from);
  S_GetDisciplineContrastResList_1025(S_GetDisciplineContrastResList_1025&& from) noexcept
    : S_GetDisciplineContrastResList_1025() {
    *this = ::std::move(from);
  }

  inline S_GetDisciplineContrastResList_1025& operator=(const S_GetDisciplineContrastResList_1025& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_GetDisciplineContrastResList_1025& operator=(S_GetDisciplineContrastResList_1025&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const S_GetDisciplineContrastResList_1025& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S_GetDisciplineContrastResList_1025* internal_default_instance() {
    return reinterpret_cast<const S_GetDisciplineContrastResList_1025*>(
               &_S_GetDisciplineContrastResList_1025_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(S_GetDisciplineContrastResList_1025& a, S_GetDisciplineContrastResList_1025& b) {
    a.Swap(&b);
  }
  inline void Swap(S_GetDisciplineContrastResList_1025* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline S_GetDisciplineContrastResList_1025* New() const final {
    return CreateMaybeMessage<S_GetDisciplineContrastResList_1025>(nullptr);
  }

  S_GetDisciplineContrastResList_1025* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<S_GetDisciplineContrastResList_1025>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const S_GetDisciplineContrastResList_1025& from);
  void MergeFrom(const S_GetDisciplineContrastResList_1025& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S_GetDisciplineContrastResList_1025* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "S_GetDisciplineContrastResList_1025";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDisciplineContrastResFieldNumber = 1,
  };
  // repeated .DisciplineContrastRes disciplineContrastRes = 1;
  int disciplinecontrastres_size() const;
  private:
  int _internal_disciplinecontrastres_size() const;
  public:
  void clear_disciplinecontrastres();
  ::DisciplineContrastRes* mutable_disciplinecontrastres(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DisciplineContrastRes >*
      mutable_disciplinecontrastres();
  private:
  const ::DisciplineContrastRes& _internal_disciplinecontrastres(int index) const;
  ::DisciplineContrastRes* _internal_add_disciplinecontrastres();
  public:
  const ::DisciplineContrastRes& disciplinecontrastres(int index) const;
  ::DisciplineContrastRes* add_disciplinecontrastres();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DisciplineContrastRes >&
      disciplinecontrastres() const;

  // @@protoc_insertion_point(class_scope:S_GetDisciplineContrastResList_1025)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DisciplineContrastRes > disciplinecontrastres_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class C_SaveAssessment_1026 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:C_SaveAssessment_1026) */ {
 public:
  C_SaveAssessment_1026();
  virtual ~C_SaveAssessment_1026();

  C_SaveAssessment_1026(const C_SaveAssessment_1026& from);
  C_SaveAssessment_1026(C_SaveAssessment_1026&& from) noexcept
    : C_SaveAssessment_1026() {
    *this = ::std::move(from);
  }

  inline C_SaveAssessment_1026& operator=(const C_SaveAssessment_1026& from) {
    CopyFrom(from);
    return *this;
  }
  inline C_SaveAssessment_1026& operator=(C_SaveAssessment_1026&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const C_SaveAssessment_1026& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_SaveAssessment_1026* internal_default_instance() {
    return reinterpret_cast<const C_SaveAssessment_1026*>(
               &_C_SaveAssessment_1026_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(C_SaveAssessment_1026& a, C_SaveAssessment_1026& b) {
    a.Swap(&b);
  }
  inline void Swap(C_SaveAssessment_1026* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline C_SaveAssessment_1026* New() const final {
    return CreateMaybeMessage<C_SaveAssessment_1026>(nullptr);
  }

  C_SaveAssessment_1026* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<C_SaveAssessment_1026>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const C_SaveAssessment_1026& from);
  void MergeFrom(const C_SaveAssessment_1026& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(C_SaveAssessment_1026* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "C_SaveAssessment_1026";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExamPreScoreFieldNumber = 7,
    kIdFieldNumber = 1,
  };
  // string examPreScore = 7;
  void clear_examprescore();
  const std::string& examprescore() const;
  void set_examprescore(const std::string& value);
  void set_examprescore(std::string&& value);
  void set_examprescore(const char* value);
  void set_examprescore(const char* value, size_t size);
  std::string* mutable_examprescore();
  std::string* release_examprescore();
  void set_allocated_examprescore(std::string* examprescore);
  private:
  const std::string& _internal_examprescore() const;
  void _internal_set_examprescore(const std::string& value);
  std::string* _internal_mutable_examprescore();
  public:

  // fixed64 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:C_SaveAssessment_1026)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr examprescore_;
  ::PROTOBUF_NAMESPACE_ID::uint64 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class S_SaveAssessment_1027 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:S_SaveAssessment_1027) */ {
 public:
  S_SaveAssessment_1027();
  virtual ~S_SaveAssessment_1027();

  S_SaveAssessment_1027(const S_SaveAssessment_1027& from);
  S_SaveAssessment_1027(S_SaveAssessment_1027&& from) noexcept
    : S_SaveAssessment_1027() {
    *this = ::std::move(from);
  }

  inline S_SaveAssessment_1027& operator=(const S_SaveAssessment_1027& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_SaveAssessment_1027& operator=(S_SaveAssessment_1027&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const S_SaveAssessment_1027& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S_SaveAssessment_1027* internal_default_instance() {
    return reinterpret_cast<const S_SaveAssessment_1027*>(
               &_S_SaveAssessment_1027_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(S_SaveAssessment_1027& a, S_SaveAssessment_1027& b) {
    a.Swap(&b);
  }
  inline void Swap(S_SaveAssessment_1027* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline S_SaveAssessment_1027* New() const final {
    return CreateMaybeMessage<S_SaveAssessment_1027>(nullptr);
  }

  S_SaveAssessment_1027* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<S_SaveAssessment_1027>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const S_SaveAssessment_1027& from);
  void MergeFrom(const S_SaveAssessment_1027& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S_SaveAssessment_1027* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "S_SaveAssessment_1027";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetObjFieldNumber = 7,
  };
  // .RetObj retObj = 7;
  bool has_retobj() const;
  private:
  bool _internal_has_retobj() const;
  public:
  void clear_retobj();
  const ::RetObj& retobj() const;
  ::RetObj* release_retobj();
  ::RetObj* mutable_retobj();
  void set_allocated_retobj(::RetObj* retobj);
  private:
  const ::RetObj& _internal_retobj() const;
  ::RetObj* _internal_mutable_retobj();
  public:

  // @@protoc_insertion_point(class_scope:S_SaveAssessment_1027)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::RetObj* retobj_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class C_SaveUserInfo_1028 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:C_SaveUserInfo_1028) */ {
 public:
  C_SaveUserInfo_1028();
  virtual ~C_SaveUserInfo_1028();

  C_SaveUserInfo_1028(const C_SaveUserInfo_1028& from);
  C_SaveUserInfo_1028(C_SaveUserInfo_1028&& from) noexcept
    : C_SaveUserInfo_1028() {
    *this = ::std::move(from);
  }

  inline C_SaveUserInfo_1028& operator=(const C_SaveUserInfo_1028& from) {
    CopyFrom(from);
    return *this;
  }
  inline C_SaveUserInfo_1028& operator=(C_SaveUserInfo_1028&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const C_SaveUserInfo_1028& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_SaveUserInfo_1028* internal_default_instance() {
    return reinterpret_cast<const C_SaveUserInfo_1028*>(
               &_C_SaveUserInfo_1028_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(C_SaveUserInfo_1028& a, C_SaveUserInfo_1028& b) {
    a.Swap(&b);
  }
  inline void Swap(C_SaveUserInfo_1028* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline C_SaveUserInfo_1028* New() const final {
    return CreateMaybeMessage<C_SaveUserInfo_1028>(nullptr);
  }

  C_SaveUserInfo_1028* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<C_SaveUserInfo_1028>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const C_SaveUserInfo_1028& from);
  void MergeFrom(const C_SaveUserInfo_1028& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(C_SaveUserInfo_1028* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "C_SaveUserInfo_1028";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExamSubjectFieldNumber = 7,
    kIdFieldNumber = 1,
  };
  // string examSubject = 7;
  void clear_examsubject();
  const std::string& examsubject() const;
  void set_examsubject(const std::string& value);
  void set_examsubject(std::string&& value);
  void set_examsubject(const char* value);
  void set_examsubject(const char* value, size_t size);
  std::string* mutable_examsubject();
  std::string* release_examsubject();
  void set_allocated_examsubject(std::string* examsubject);
  private:
  const std::string& _internal_examsubject() const;
  void _internal_set_examsubject(const std::string& value);
  std::string* _internal_mutable_examsubject();
  public:

  // fixed64 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:C_SaveUserInfo_1028)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr examsubject_;
  ::PROTOBUF_NAMESPACE_ID::uint64 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class S_SaveUserInfo_1029 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:S_SaveUserInfo_1029) */ {
 public:
  S_SaveUserInfo_1029();
  virtual ~S_SaveUserInfo_1029();

  S_SaveUserInfo_1029(const S_SaveUserInfo_1029& from);
  S_SaveUserInfo_1029(S_SaveUserInfo_1029&& from) noexcept
    : S_SaveUserInfo_1029() {
    *this = ::std::move(from);
  }

  inline S_SaveUserInfo_1029& operator=(const S_SaveUserInfo_1029& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_SaveUserInfo_1029& operator=(S_SaveUserInfo_1029&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const S_SaveUserInfo_1029& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S_SaveUserInfo_1029* internal_default_instance() {
    return reinterpret_cast<const S_SaveUserInfo_1029*>(
               &_S_SaveUserInfo_1029_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(S_SaveUserInfo_1029& a, S_SaveUserInfo_1029& b) {
    a.Swap(&b);
  }
  inline void Swap(S_SaveUserInfo_1029* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline S_SaveUserInfo_1029* New() const final {
    return CreateMaybeMessage<S_SaveUserInfo_1029>(nullptr);
  }

  S_SaveUserInfo_1029* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<S_SaveUserInfo_1029>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const S_SaveUserInfo_1029& from);
  void MergeFrom(const S_SaveUserInfo_1029& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S_SaveUserInfo_1029* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "S_SaveUserInfo_1029";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetObjFieldNumber = 7,
  };
  // .RetObj retObj = 7;
  bool has_retobj() const;
  private:
  bool _internal_has_retobj() const;
  public:
  void clear_retobj();
  const ::RetObj& retobj() const;
  ::RetObj* release_retobj();
  ::RetObj* mutable_retobj();
  void set_allocated_retobj(::RetObj* retobj);
  private:
  const ::RetObj& _internal_retobj() const;
  ::RetObj* _internal_mutable_retobj();
  public:

  // @@protoc_insertion_point(class_scope:S_SaveUserInfo_1029)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::RetObj* retobj_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class RetObj :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:RetObj) */ {
 public:
  RetObj();
  virtual ~RetObj();

  RetObj(const RetObj& from);
  RetObj(RetObj&& from) noexcept
    : RetObj() {
    *this = ::std::move(from);
  }

  inline RetObj& operator=(const RetObj& from) {
    CopyFrom(from);
    return *this;
  }
  inline RetObj& operator=(RetObj&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RetObj& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RetObj* internal_default_instance() {
    return reinterpret_cast<const RetObj*>(
               &_RetObj_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(RetObj& a, RetObj& b) {
    a.Swap(&b);
  }
  inline void Swap(RetObj* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RetObj* New() const final {
    return CreateMaybeMessage<RetObj>(nullptr);
  }

  RetObj* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RetObj>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RetObj& from);
  void MergeFrom(const RetObj& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RetObj* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "RetObj";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResCodeFieldNumber = 1,
    kResInfoFieldNumber = 2,
  };
  // fixed64 resCode = 1;
  void clear_rescode();
  ::PROTOBUF_NAMESPACE_ID::uint64 rescode() const;
  void set_rescode(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_rescode() const;
  void _internal_set_rescode(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // fixed64 resInfo = 2;
  void clear_resinfo();
  ::PROTOBUF_NAMESPACE_ID::uint64 resinfo() const;
  void set_resinfo(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_resinfo() const;
  void _internal_set_resinfo(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:RetObj)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 rescode_;
  ::PROTOBUF_NAMESPACE_ID::uint64 resinfo_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class UsersRes :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:UsersRes) */ {
 public:
  UsersRes();
  virtual ~UsersRes();

  UsersRes(const UsersRes& from);
  UsersRes(UsersRes&& from) noexcept
    : UsersRes() {
    *this = ::std::move(from);
  }

  inline UsersRes& operator=(const UsersRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline UsersRes& operator=(UsersRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UsersRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsersRes* internal_default_instance() {
    return reinterpret_cast<const UsersRes*>(
               &_UsersRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(UsersRes& a, UsersRes& b) {
    a.Swap(&b);
  }
  inline void Swap(UsersRes* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UsersRes* New() const final {
    return CreateMaybeMessage<UsersRes>(nullptr);
  }

  UsersRes* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UsersRes>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UsersRes& from);
  void MergeFrom(const UsersRes& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsersRes* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "UsersRes";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTelFieldNumber = 2,
    kPicPath1FieldNumber = 3,
    kPwdFieldNumber = 4,
    kSspFieldNumber = 5,
    kExamYearFieldNumber = 6,
    kExamPreScoreFieldNumber = 7,
    kRoleFieldNumber = 8,
    kExamSubjectFieldNumber = 9,
    kIdFieldNumber = 1,
  };
  // string tel = 2;
  void clear_tel();
  const std::string& tel() const;
  void set_tel(const std::string& value);
  void set_tel(std::string&& value);
  void set_tel(const char* value);
  void set_tel(const char* value, size_t size);
  std::string* mutable_tel();
  std::string* release_tel();
  void set_allocated_tel(std::string* tel);
  private:
  const std::string& _internal_tel() const;
  void _internal_set_tel(const std::string& value);
  std::string* _internal_mutable_tel();
  public:

  // string picPath1 = 3;
  void clear_picpath1();
  const std::string& picpath1() const;
  void set_picpath1(const std::string& value);
  void set_picpath1(std::string&& value);
  void set_picpath1(const char* value);
  void set_picpath1(const char* value, size_t size);
  std::string* mutable_picpath1();
  std::string* release_picpath1();
  void set_allocated_picpath1(std::string* picpath1);
  private:
  const std::string& _internal_picpath1() const;
  void _internal_set_picpath1(const std::string& value);
  std::string* _internal_mutable_picpath1();
  public:

  // string pwd = 4;
  void clear_pwd();
  const std::string& pwd() const;
  void set_pwd(const std::string& value);
  void set_pwd(std::string&& value);
  void set_pwd(const char* value);
  void set_pwd(const char* value, size_t size);
  std::string* mutable_pwd();
  std::string* release_pwd();
  void set_allocated_pwd(std::string* pwd);
  private:
  const std::string& _internal_pwd() const;
  void _internal_set_pwd(const std::string& value);
  std::string* _internal_mutable_pwd();
  public:

  // string ssp = 5;
  void clear_ssp();
  const std::string& ssp() const;
  void set_ssp(const std::string& value);
  void set_ssp(std::string&& value);
  void set_ssp(const char* value);
  void set_ssp(const char* value, size_t size);
  std::string* mutable_ssp();
  std::string* release_ssp();
  void set_allocated_ssp(std::string* ssp);
  private:
  const std::string& _internal_ssp() const;
  void _internal_set_ssp(const std::string& value);
  std::string* _internal_mutable_ssp();
  public:

  // string examYear = 6;
  void clear_examyear();
  const std::string& examyear() const;
  void set_examyear(const std::string& value);
  void set_examyear(std::string&& value);
  void set_examyear(const char* value);
  void set_examyear(const char* value, size_t size);
  std::string* mutable_examyear();
  std::string* release_examyear();
  void set_allocated_examyear(std::string* examyear);
  private:
  const std::string& _internal_examyear() const;
  void _internal_set_examyear(const std::string& value);
  std::string* _internal_mutable_examyear();
  public:

  // string examPreScore = 7;
  void clear_examprescore();
  const std::string& examprescore() const;
  void set_examprescore(const std::string& value);
  void set_examprescore(std::string&& value);
  void set_examprescore(const char* value);
  void set_examprescore(const char* value, size_t size);
  std::string* mutable_examprescore();
  std::string* release_examprescore();
  void set_allocated_examprescore(std::string* examprescore);
  private:
  const std::string& _internal_examprescore() const;
  void _internal_set_examprescore(const std::string& value);
  std::string* _internal_mutable_examprescore();
  public:

  // string role = 8;
  void clear_role();
  const std::string& role() const;
  void set_role(const std::string& value);
  void set_role(std::string&& value);
  void set_role(const char* value);
  void set_role(const char* value, size_t size);
  std::string* mutable_role();
  std::string* release_role();
  void set_allocated_role(std::string* role);
  private:
  const std::string& _internal_role() const;
  void _internal_set_role(const std::string& value);
  std::string* _internal_mutable_role();
  public:

  // string examSubject = 9;
  void clear_examsubject();
  const std::string& examsubject() const;
  void set_examsubject(const std::string& value);
  void set_examsubject(std::string&& value);
  void set_examsubject(const char* value);
  void set_examsubject(const char* value, size_t size);
  std::string* mutable_examsubject();
  std::string* release_examsubject();
  void set_allocated_examsubject(std::string* examsubject);
  private:
  const std::string& _internal_examsubject() const;
  void _internal_set_examsubject(const std::string& value);
  std::string* _internal_mutable_examsubject();
  public:

  // fixed64 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:UsersRes)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tel_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr picpath1_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pwd_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr ssp_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr examyear_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr examprescore_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr role_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr examsubject_;
  ::PROTOBUF_NAMESPACE_ID::uint64 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class SchoolContrastRes :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SchoolContrastRes) */ {
 public:
  SchoolContrastRes();
  virtual ~SchoolContrastRes();

  SchoolContrastRes(const SchoolContrastRes& from);
  SchoolContrastRes(SchoolContrastRes&& from) noexcept
    : SchoolContrastRes() {
    *this = ::std::move(from);
  }

  inline SchoolContrastRes& operator=(const SchoolContrastRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline SchoolContrastRes& operator=(SchoolContrastRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SchoolContrastRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SchoolContrastRes* internal_default_instance() {
    return reinterpret_cast<const SchoolContrastRes*>(
               &_SchoolContrastRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(SchoolContrastRes& a, SchoolContrastRes& b) {
    a.Swap(&b);
  }
  inline void Swap(SchoolContrastRes* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SchoolContrastRes* New() const final {
    return CreateMaybeMessage<SchoolContrastRes>(nullptr);
  }

  SchoolContrastRes* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SchoolContrastRes>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SchoolContrastRes& from);
  void MergeFrom(const SchoolContrastRes& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SchoolContrastRes* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SchoolContrastRes";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSchoolNameFieldNumber = 2,
    kAddTimeFieldNumber = 3,
    kUserIDFieldNumber = 4,
    kSchoolIdFieldNumber = 1,
  };
  // string schoolName = 2;
  void clear_schoolname();
  const std::string& schoolname() const;
  void set_schoolname(const std::string& value);
  void set_schoolname(std::string&& value);
  void set_schoolname(const char* value);
  void set_schoolname(const char* value, size_t size);
  std::string* mutable_schoolname();
  std::string* release_schoolname();
  void set_allocated_schoolname(std::string* schoolname);
  private:
  const std::string& _internal_schoolname() const;
  void _internal_set_schoolname(const std::string& value);
  std::string* _internal_mutable_schoolname();
  public:

  // string addTime = 3;
  void clear_addtime();
  const std::string& addtime() const;
  void set_addtime(const std::string& value);
  void set_addtime(std::string&& value);
  void set_addtime(const char* value);
  void set_addtime(const char* value, size_t size);
  std::string* mutable_addtime();
  std::string* release_addtime();
  void set_allocated_addtime(std::string* addtime);
  private:
  const std::string& _internal_addtime() const;
  void _internal_set_addtime(const std::string& value);
  std::string* _internal_mutable_addtime();
  public:

  // string userID = 4;
  void clear_userid();
  const std::string& userid() const;
  void set_userid(const std::string& value);
  void set_userid(std::string&& value);
  void set_userid(const char* value);
  void set_userid(const char* value, size_t size);
  std::string* mutable_userid();
  std::string* release_userid();
  void set_allocated_userid(std::string* userid);
  private:
  const std::string& _internal_userid() const;
  void _internal_set_userid(const std::string& value);
  std::string* _internal_mutable_userid();
  public:

  // fixed64 schoolId = 1;
  void clear_schoolid();
  ::PROTOBUF_NAMESPACE_ID::uint64 schoolid() const;
  void set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_schoolid() const;
  void _internal_set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:SchoolContrastRes)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr schoolname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr addtime_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr userid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 schoolid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class DisciplineContrastRes :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:DisciplineContrastRes) */ {
 public:
  DisciplineContrastRes();
  virtual ~DisciplineContrastRes();

  DisciplineContrastRes(const DisciplineContrastRes& from);
  DisciplineContrastRes(DisciplineContrastRes&& from) noexcept
    : DisciplineContrastRes() {
    *this = ::std::move(from);
  }

  inline DisciplineContrastRes& operator=(const DisciplineContrastRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline DisciplineContrastRes& operator=(DisciplineContrastRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DisciplineContrastRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DisciplineContrastRes* internal_default_instance() {
    return reinterpret_cast<const DisciplineContrastRes*>(
               &_DisciplineContrastRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(DisciplineContrastRes& a, DisciplineContrastRes& b) {
    a.Swap(&b);
  }
  inline void Swap(DisciplineContrastRes* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DisciplineContrastRes* New() const final {
    return CreateMaybeMessage<DisciplineContrastRes>(nullptr);
  }

  DisciplineContrastRes* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DisciplineContrastRes>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DisciplineContrastRes& from);
  void MergeFrom(const DisciplineContrastRes& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DisciplineContrastRes* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "DisciplineContrastRes";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kZyNameFieldNumber = 2,
    kAddTimeFieldNumber = 3,
    kUserIDFieldNumber = 4,
    kZylIdFieldNumber = 1,
  };
  // string zyName = 2;
  void clear_zyname();
  const std::string& zyname() const;
  void set_zyname(const std::string& value);
  void set_zyname(std::string&& value);
  void set_zyname(const char* value);
  void set_zyname(const char* value, size_t size);
  std::string* mutable_zyname();
  std::string* release_zyname();
  void set_allocated_zyname(std::string* zyname);
  private:
  const std::string& _internal_zyname() const;
  void _internal_set_zyname(const std::string& value);
  std::string* _internal_mutable_zyname();
  public:

  // string addTime = 3;
  void clear_addtime();
  const std::string& addtime() const;
  void set_addtime(const std::string& value);
  void set_addtime(std::string&& value);
  void set_addtime(const char* value);
  void set_addtime(const char* value, size_t size);
  std::string* mutable_addtime();
  std::string* release_addtime();
  void set_allocated_addtime(std::string* addtime);
  private:
  const std::string& _internal_addtime() const;
  void _internal_set_addtime(const std::string& value);
  std::string* _internal_mutable_addtime();
  public:

  // string userID = 4;
  void clear_userid();
  const std::string& userid() const;
  void set_userid(const std::string& value);
  void set_userid(std::string&& value);
  void set_userid(const char* value);
  void set_userid(const char* value, size_t size);
  std::string* mutable_userid();
  std::string* release_userid();
  void set_allocated_userid(std::string* userid);
  private:
  const std::string& _internal_userid() const;
  void _internal_set_userid(const std::string& value);
  std::string* _internal_mutable_userid();
  public:

  // fixed64 zylId = 1;
  void clear_zylid();
  ::PROTOBUF_NAMESPACE_ID::uint64 zylid() const;
  void set_zylid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_zylid() const;
  void _internal_set_zylid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:DisciplineContrastRes)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr zyname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr addtime_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr userid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 zylid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class SchoolStoreUpRes :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SchoolStoreUpRes) */ {
 public:
  SchoolStoreUpRes();
  virtual ~SchoolStoreUpRes();

  SchoolStoreUpRes(const SchoolStoreUpRes& from);
  SchoolStoreUpRes(SchoolStoreUpRes&& from) noexcept
    : SchoolStoreUpRes() {
    *this = ::std::move(from);
  }

  inline SchoolStoreUpRes& operator=(const SchoolStoreUpRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline SchoolStoreUpRes& operator=(SchoolStoreUpRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SchoolStoreUpRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SchoolStoreUpRes* internal_default_instance() {
    return reinterpret_cast<const SchoolStoreUpRes*>(
               &_SchoolStoreUpRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(SchoolStoreUpRes& a, SchoolStoreUpRes& b) {
    a.Swap(&b);
  }
  inline void Swap(SchoolStoreUpRes* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SchoolStoreUpRes* New() const final {
    return CreateMaybeMessage<SchoolStoreUpRes>(nullptr);
  }

  SchoolStoreUpRes* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SchoolStoreUpRes>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SchoolStoreUpRes& from);
  void MergeFrom(const SchoolStoreUpRes& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SchoolStoreUpRes* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SchoolStoreUpRes";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSchoolNameFieldNumber = 2,
    kAddTimeFieldNumber = 3,
    kUserIDFieldNumber = 4,
    kIdFieldNumber = 1,
  };
  // string schoolName = 2;
  void clear_schoolname();
  const std::string& schoolname() const;
  void set_schoolname(const std::string& value);
  void set_schoolname(std::string&& value);
  void set_schoolname(const char* value);
  void set_schoolname(const char* value, size_t size);
  std::string* mutable_schoolname();
  std::string* release_schoolname();
  void set_allocated_schoolname(std::string* schoolname);
  private:
  const std::string& _internal_schoolname() const;
  void _internal_set_schoolname(const std::string& value);
  std::string* _internal_mutable_schoolname();
  public:

  // string addTime = 3;
  void clear_addtime();
  const std::string& addtime() const;
  void set_addtime(const std::string& value);
  void set_addtime(std::string&& value);
  void set_addtime(const char* value);
  void set_addtime(const char* value, size_t size);
  std::string* mutable_addtime();
  std::string* release_addtime();
  void set_allocated_addtime(std::string* addtime);
  private:
  const std::string& _internal_addtime() const;
  void _internal_set_addtime(const std::string& value);
  std::string* _internal_mutable_addtime();
  public:

  // string userID = 4;
  void clear_userid();
  const std::string& userid() const;
  void set_userid(const std::string& value);
  void set_userid(std::string&& value);
  void set_userid(const char* value);
  void set_userid(const char* value, size_t size);
  std::string* mutable_userid();
  std::string* release_userid();
  void set_allocated_userid(std::string* userid);
  private:
  const std::string& _internal_userid() const;
  void _internal_set_userid(const std::string& value);
  std::string* _internal_mutable_userid();
  public:

  // fixed64 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:SchoolStoreUpRes)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr schoolname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr addtime_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr userid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class DisciplineStoreUpRes :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:DisciplineStoreUpRes) */ {
 public:
  DisciplineStoreUpRes();
  virtual ~DisciplineStoreUpRes();

  DisciplineStoreUpRes(const DisciplineStoreUpRes& from);
  DisciplineStoreUpRes(DisciplineStoreUpRes&& from) noexcept
    : DisciplineStoreUpRes() {
    *this = ::std::move(from);
  }

  inline DisciplineStoreUpRes& operator=(const DisciplineStoreUpRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline DisciplineStoreUpRes& operator=(DisciplineStoreUpRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DisciplineStoreUpRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DisciplineStoreUpRes* internal_default_instance() {
    return reinterpret_cast<const DisciplineStoreUpRes*>(
               &_DisciplineStoreUpRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(DisciplineStoreUpRes& a, DisciplineStoreUpRes& b) {
    a.Swap(&b);
  }
  inline void Swap(DisciplineStoreUpRes* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DisciplineStoreUpRes* New() const final {
    return CreateMaybeMessage<DisciplineStoreUpRes>(nullptr);
  }

  DisciplineStoreUpRes* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DisciplineStoreUpRes>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DisciplineStoreUpRes& from);
  void MergeFrom(const DisciplineStoreUpRes& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DisciplineStoreUpRes* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "DisciplineStoreUpRes";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDisciplineNameFieldNumber = 2,
    kAddTimeFieldNumber = 3,
    kUserIDFieldNumber = 4,
    kIdFieldNumber = 1,
  };
  // string disciplineName = 2;
  void clear_disciplinename();
  const std::string& disciplinename() const;
  void set_disciplinename(const std::string& value);
  void set_disciplinename(std::string&& value);
  void set_disciplinename(const char* value);
  void set_disciplinename(const char* value, size_t size);
  std::string* mutable_disciplinename();
  std::string* release_disciplinename();
  void set_allocated_disciplinename(std::string* disciplinename);
  private:
  const std::string& _internal_disciplinename() const;
  void _internal_set_disciplinename(const std::string& value);
  std::string* _internal_mutable_disciplinename();
  public:

  // string addTime = 3;
  void clear_addtime();
  const std::string& addtime() const;
  void set_addtime(const std::string& value);
  void set_addtime(std::string&& value);
  void set_addtime(const char* value);
  void set_addtime(const char* value, size_t size);
  std::string* mutable_addtime();
  std::string* release_addtime();
  void set_allocated_addtime(std::string* addtime);
  private:
  const std::string& _internal_addtime() const;
  void _internal_set_addtime(const std::string& value);
  std::string* _internal_mutable_addtime();
  public:

  // string userID = 4;
  void clear_userid();
  const std::string& userid() const;
  void set_userid(const std::string& value);
  void set_userid(std::string&& value);
  void set_userid(const char* value);
  void set_userid(const char* value, size_t size);
  std::string* mutable_userid();
  std::string* release_userid();
  void set_allocated_userid(std::string* userid);
  private:
  const std::string& _internal_userid() const;
  void _internal_set_userid(const std::string& value);
  std::string* _internal_mutable_userid();
  public:

  // fixed64 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:DisciplineStoreUpRes)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr disciplinename_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr addtime_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr userid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class C_GetSchoolInfoById_2000 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:C_GetSchoolInfoById_2000) */ {
 public:
  C_GetSchoolInfoById_2000();
  virtual ~C_GetSchoolInfoById_2000();

  C_GetSchoolInfoById_2000(const C_GetSchoolInfoById_2000& from);
  C_GetSchoolInfoById_2000(C_GetSchoolInfoById_2000&& from) noexcept
    : C_GetSchoolInfoById_2000() {
    *this = ::std::move(from);
  }

  inline C_GetSchoolInfoById_2000& operator=(const C_GetSchoolInfoById_2000& from) {
    CopyFrom(from);
    return *this;
  }
  inline C_GetSchoolInfoById_2000& operator=(C_GetSchoolInfoById_2000&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const C_GetSchoolInfoById_2000& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_GetSchoolInfoById_2000* internal_default_instance() {
    return reinterpret_cast<const C_GetSchoolInfoById_2000*>(
               &_C_GetSchoolInfoById_2000_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(C_GetSchoolInfoById_2000& a, C_GetSchoolInfoById_2000& b) {
    a.Swap(&b);
  }
  inline void Swap(C_GetSchoolInfoById_2000* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline C_GetSchoolInfoById_2000* New() const final {
    return CreateMaybeMessage<C_GetSchoolInfoById_2000>(nullptr);
  }

  C_GetSchoolInfoById_2000* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<C_GetSchoolInfoById_2000>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const C_GetSchoolInfoById_2000& from);
  void MergeFrom(const C_GetSchoolInfoById_2000& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(C_GetSchoolInfoById_2000* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "C_GetSchoolInfoById_2000";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSchoolIdFieldNumber = 1,
  };
  // fixed64 schoolId = 1;
  void clear_schoolid();
  ::PROTOBUF_NAMESPACE_ID::uint64 schoolid() const;
  void set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_schoolid() const;
  void _internal_set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:C_GetSchoolInfoById_2000)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 schoolid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class S_GetSchoolInfoById_2001 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:S_GetSchoolInfoById_2001) */ {
 public:
  S_GetSchoolInfoById_2001();
  virtual ~S_GetSchoolInfoById_2001();

  S_GetSchoolInfoById_2001(const S_GetSchoolInfoById_2001& from);
  S_GetSchoolInfoById_2001(S_GetSchoolInfoById_2001&& from) noexcept
    : S_GetSchoolInfoById_2001() {
    *this = ::std::move(from);
  }

  inline S_GetSchoolInfoById_2001& operator=(const S_GetSchoolInfoById_2001& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_GetSchoolInfoById_2001& operator=(S_GetSchoolInfoById_2001&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const S_GetSchoolInfoById_2001& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S_GetSchoolInfoById_2001* internal_default_instance() {
    return reinterpret_cast<const S_GetSchoolInfoById_2001*>(
               &_S_GetSchoolInfoById_2001_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(S_GetSchoolInfoById_2001& a, S_GetSchoolInfoById_2001& b) {
    a.Swap(&b);
  }
  inline void Swap(S_GetSchoolInfoById_2001* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline S_GetSchoolInfoById_2001* New() const final {
    return CreateMaybeMessage<S_GetSchoolInfoById_2001>(nullptr);
  }

  S_GetSchoolInfoById_2001* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<S_GetSchoolInfoById_2001>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const S_GetSchoolInfoById_2001& from);
  void MergeFrom(const S_GetSchoolInfoById_2001& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S_GetSchoolInfoById_2001* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "S_GetSchoolInfoById_2001";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSchoolInfoFieldNumber = 1,
  };
  // .SchoolInfo schoolInfo = 1;
  bool has_schoolinfo() const;
  private:
  bool _internal_has_schoolinfo() const;
  public:
  void clear_schoolinfo();
  const ::SchoolInfo& schoolinfo() const;
  ::SchoolInfo* release_schoolinfo();
  ::SchoolInfo* mutable_schoolinfo();
  void set_allocated_schoolinfo(::SchoolInfo* schoolinfo);
  private:
  const ::SchoolInfo& _internal_schoolinfo() const;
  ::SchoolInfo* _internal_mutable_schoolinfo();
  public:

  // @@protoc_insertion_point(class_scope:S_GetSchoolInfoById_2001)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::SchoolInfo* schoolinfo_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class C_GetSchoolAdmitInfo_2002 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:C_GetSchoolAdmitInfo_2002) */ {
 public:
  C_GetSchoolAdmitInfo_2002();
  virtual ~C_GetSchoolAdmitInfo_2002();

  C_GetSchoolAdmitInfo_2002(const C_GetSchoolAdmitInfo_2002& from);
  C_GetSchoolAdmitInfo_2002(C_GetSchoolAdmitInfo_2002&& from) noexcept
    : C_GetSchoolAdmitInfo_2002() {
    *this = ::std::move(from);
  }

  inline C_GetSchoolAdmitInfo_2002& operator=(const C_GetSchoolAdmitInfo_2002& from) {
    CopyFrom(from);
    return *this;
  }
  inline C_GetSchoolAdmitInfo_2002& operator=(C_GetSchoolAdmitInfo_2002&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const C_GetSchoolAdmitInfo_2002& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_GetSchoolAdmitInfo_2002* internal_default_instance() {
    return reinterpret_cast<const C_GetSchoolAdmitInfo_2002*>(
               &_C_GetSchoolAdmitInfo_2002_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(C_GetSchoolAdmitInfo_2002& a, C_GetSchoolAdmitInfo_2002& b) {
    a.Swap(&b);
  }
  inline void Swap(C_GetSchoolAdmitInfo_2002* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline C_GetSchoolAdmitInfo_2002* New() const final {
    return CreateMaybeMessage<C_GetSchoolAdmitInfo_2002>(nullptr);
  }

  C_GetSchoolAdmitInfo_2002* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<C_GetSchoolAdmitInfo_2002>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const C_GetSchoolAdmitInfo_2002& from);
  void MergeFrom(const C_GetSchoolAdmitInfo_2002& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(C_GetSchoolAdmitInfo_2002* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "C_GetSchoolAdmitInfo_2002";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kYearFieldNumber = 2,
    kProvinceFieldNumber = 3,
    kSchoolIdFieldNumber = 1,
  };
  // string year = 2;
  void clear_year();
  const std::string& year() const;
  void set_year(const std::string& value);
  void set_year(std::string&& value);
  void set_year(const char* value);
  void set_year(const char* value, size_t size);
  std::string* mutable_year();
  std::string* release_year();
  void set_allocated_year(std::string* year);
  private:
  const std::string& _internal_year() const;
  void _internal_set_year(const std::string& value);
  std::string* _internal_mutable_year();
  public:

  // string province = 3;
  void clear_province();
  const std::string& province() const;
  void set_province(const std::string& value);
  void set_province(std::string&& value);
  void set_province(const char* value);
  void set_province(const char* value, size_t size);
  std::string* mutable_province();
  std::string* release_province();
  void set_allocated_province(std::string* province);
  private:
  const std::string& _internal_province() const;
  void _internal_set_province(const std::string& value);
  std::string* _internal_mutable_province();
  public:

  // fixed64 schoolId = 1;
  void clear_schoolid();
  ::PROTOBUF_NAMESPACE_ID::uint64 schoolid() const;
  void set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_schoolid() const;
  void _internal_set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:C_GetSchoolAdmitInfo_2002)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr year_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr province_;
  ::PROTOBUF_NAMESPACE_ID::uint64 schoolid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class S_GetSchoolAdmitInfo_2003 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:S_GetSchoolAdmitInfo_2003) */ {
 public:
  S_GetSchoolAdmitInfo_2003();
  virtual ~S_GetSchoolAdmitInfo_2003();

  S_GetSchoolAdmitInfo_2003(const S_GetSchoolAdmitInfo_2003& from);
  S_GetSchoolAdmitInfo_2003(S_GetSchoolAdmitInfo_2003&& from) noexcept
    : S_GetSchoolAdmitInfo_2003() {
    *this = ::std::move(from);
  }

  inline S_GetSchoolAdmitInfo_2003& operator=(const S_GetSchoolAdmitInfo_2003& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_GetSchoolAdmitInfo_2003& operator=(S_GetSchoolAdmitInfo_2003&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const S_GetSchoolAdmitInfo_2003& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S_GetSchoolAdmitInfo_2003* internal_default_instance() {
    return reinterpret_cast<const S_GetSchoolAdmitInfo_2003*>(
               &_S_GetSchoolAdmitInfo_2003_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(S_GetSchoolAdmitInfo_2003& a, S_GetSchoolAdmitInfo_2003& b) {
    a.Swap(&b);
  }
  inline void Swap(S_GetSchoolAdmitInfo_2003* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline S_GetSchoolAdmitInfo_2003* New() const final {
    return CreateMaybeMessage<S_GetSchoolAdmitInfo_2003>(nullptr);
  }

  S_GetSchoolAdmitInfo_2003* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<S_GetSchoolAdmitInfo_2003>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const S_GetSchoolAdmitInfo_2003& from);
  void MergeFrom(const S_GetSchoolAdmitInfo_2003& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S_GetSchoolAdmitInfo_2003* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "S_GetSchoolAdmitInfo_2003";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSchoolAdmitInfoFieldNumber = 1,
  };
  // repeated .SchoolAdmitInfo schoolAdmitInfo = 1;
  int schooladmitinfo_size() const;
  private:
  int _internal_schooladmitinfo_size() const;
  public:
  void clear_schooladmitinfo();
  ::SchoolAdmitInfo* mutable_schooladmitinfo(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SchoolAdmitInfo >*
      mutable_schooladmitinfo();
  private:
  const ::SchoolAdmitInfo& _internal_schooladmitinfo(int index) const;
  ::SchoolAdmitInfo* _internal_add_schooladmitinfo();
  public:
  const ::SchoolAdmitInfo& schooladmitinfo(int index) const;
  ::SchoolAdmitInfo* add_schooladmitinfo();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SchoolAdmitInfo >&
      schooladmitinfo() const;

  // @@protoc_insertion_point(class_scope:S_GetSchoolAdmitInfo_2003)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SchoolAdmitInfo > schooladmitinfo_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class C_GetZyAdmitInfo_2004 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:C_GetZyAdmitInfo_2004) */ {
 public:
  C_GetZyAdmitInfo_2004();
  virtual ~C_GetZyAdmitInfo_2004();

  C_GetZyAdmitInfo_2004(const C_GetZyAdmitInfo_2004& from);
  C_GetZyAdmitInfo_2004(C_GetZyAdmitInfo_2004&& from) noexcept
    : C_GetZyAdmitInfo_2004() {
    *this = ::std::move(from);
  }

  inline C_GetZyAdmitInfo_2004& operator=(const C_GetZyAdmitInfo_2004& from) {
    CopyFrom(from);
    return *this;
  }
  inline C_GetZyAdmitInfo_2004& operator=(C_GetZyAdmitInfo_2004&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const C_GetZyAdmitInfo_2004& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_GetZyAdmitInfo_2004* internal_default_instance() {
    return reinterpret_cast<const C_GetZyAdmitInfo_2004*>(
               &_C_GetZyAdmitInfo_2004_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(C_GetZyAdmitInfo_2004& a, C_GetZyAdmitInfo_2004& b) {
    a.Swap(&b);
  }
  inline void Swap(C_GetZyAdmitInfo_2004* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline C_GetZyAdmitInfo_2004* New() const final {
    return CreateMaybeMessage<C_GetZyAdmitInfo_2004>(nullptr);
  }

  C_GetZyAdmitInfo_2004* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<C_GetZyAdmitInfo_2004>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const C_GetZyAdmitInfo_2004& from);
  void MergeFrom(const C_GetZyAdmitInfo_2004& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(C_GetZyAdmitInfo_2004* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "C_GetZyAdmitInfo_2004";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kYearFieldNumber = 2,
    kProvinceFieldNumber = 3,
    kKeleiFieldNumber = 4,
    kSchoolIdFieldNumber = 1,
  };
  // string year = 2;
  void clear_year();
  const std::string& year() const;
  void set_year(const std::string& value);
  void set_year(std::string&& value);
  void set_year(const char* value);
  void set_year(const char* value, size_t size);
  std::string* mutable_year();
  std::string* release_year();
  void set_allocated_year(std::string* year);
  private:
  const std::string& _internal_year() const;
  void _internal_set_year(const std::string& value);
  std::string* _internal_mutable_year();
  public:

  // string province = 3;
  void clear_province();
  const std::string& province() const;
  void set_province(const std::string& value);
  void set_province(std::string&& value);
  void set_province(const char* value);
  void set_province(const char* value, size_t size);
  std::string* mutable_province();
  std::string* release_province();
  void set_allocated_province(std::string* province);
  private:
  const std::string& _internal_province() const;
  void _internal_set_province(const std::string& value);
  std::string* _internal_mutable_province();
  public:

  // string kelei = 4;
  void clear_kelei();
  const std::string& kelei() const;
  void set_kelei(const std::string& value);
  void set_kelei(std::string&& value);
  void set_kelei(const char* value);
  void set_kelei(const char* value, size_t size);
  std::string* mutable_kelei();
  std::string* release_kelei();
  void set_allocated_kelei(std::string* kelei);
  private:
  const std::string& _internal_kelei() const;
  void _internal_set_kelei(const std::string& value);
  std::string* _internal_mutable_kelei();
  public:

  // fixed64 schoolId = 1;
  void clear_schoolid();
  ::PROTOBUF_NAMESPACE_ID::uint64 schoolid() const;
  void set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_schoolid() const;
  void _internal_set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:C_GetZyAdmitInfo_2004)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr year_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr province_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr kelei_;
  ::PROTOBUF_NAMESPACE_ID::uint64 schoolid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class S_GetZyAdmitInfo_2005 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:S_GetZyAdmitInfo_2005) */ {
 public:
  S_GetZyAdmitInfo_2005();
  virtual ~S_GetZyAdmitInfo_2005();

  S_GetZyAdmitInfo_2005(const S_GetZyAdmitInfo_2005& from);
  S_GetZyAdmitInfo_2005(S_GetZyAdmitInfo_2005&& from) noexcept
    : S_GetZyAdmitInfo_2005() {
    *this = ::std::move(from);
  }

  inline S_GetZyAdmitInfo_2005& operator=(const S_GetZyAdmitInfo_2005& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_GetZyAdmitInfo_2005& operator=(S_GetZyAdmitInfo_2005&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const S_GetZyAdmitInfo_2005& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S_GetZyAdmitInfo_2005* internal_default_instance() {
    return reinterpret_cast<const S_GetZyAdmitInfo_2005*>(
               &_S_GetZyAdmitInfo_2005_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(S_GetZyAdmitInfo_2005& a, S_GetZyAdmitInfo_2005& b) {
    a.Swap(&b);
  }
  inline void Swap(S_GetZyAdmitInfo_2005* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline S_GetZyAdmitInfo_2005* New() const final {
    return CreateMaybeMessage<S_GetZyAdmitInfo_2005>(nullptr);
  }

  S_GetZyAdmitInfo_2005* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<S_GetZyAdmitInfo_2005>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const S_GetZyAdmitInfo_2005& from);
  void MergeFrom(const S_GetZyAdmitInfo_2005& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S_GetZyAdmitInfo_2005* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "S_GetZyAdmitInfo_2005";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kZyAdmitInfoFieldNumber = 1,
  };
  // repeated .ZyAdmitInfo zyAdmitInfo = 1;
  int zyadmitinfo_size() const;
  private:
  int _internal_zyadmitinfo_size() const;
  public:
  void clear_zyadmitinfo();
  ::ZyAdmitInfo* mutable_zyadmitinfo(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ZyAdmitInfo >*
      mutable_zyadmitinfo();
  private:
  const ::ZyAdmitInfo& _internal_zyadmitinfo(int index) const;
  ::ZyAdmitInfo* _internal_add_zyadmitinfo();
  public:
  const ::ZyAdmitInfo& zyadmitinfo(int index) const;
  ::ZyAdmitInfo* add_zyadmitinfo();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ZyAdmitInfo >&
      zyadmitinfo() const;

  // @@protoc_insertion_point(class_scope:S_GetZyAdmitInfo_2005)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ZyAdmitInfo > zyadmitinfo_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class C_GetPlanRecruit_2006 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:C_GetPlanRecruit_2006) */ {
 public:
  C_GetPlanRecruit_2006();
  virtual ~C_GetPlanRecruit_2006();

  C_GetPlanRecruit_2006(const C_GetPlanRecruit_2006& from);
  C_GetPlanRecruit_2006(C_GetPlanRecruit_2006&& from) noexcept
    : C_GetPlanRecruit_2006() {
    *this = ::std::move(from);
  }

  inline C_GetPlanRecruit_2006& operator=(const C_GetPlanRecruit_2006& from) {
    CopyFrom(from);
    return *this;
  }
  inline C_GetPlanRecruit_2006& operator=(C_GetPlanRecruit_2006&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const C_GetPlanRecruit_2006& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_GetPlanRecruit_2006* internal_default_instance() {
    return reinterpret_cast<const C_GetPlanRecruit_2006*>(
               &_C_GetPlanRecruit_2006_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(C_GetPlanRecruit_2006& a, C_GetPlanRecruit_2006& b) {
    a.Swap(&b);
  }
  inline void Swap(C_GetPlanRecruit_2006* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline C_GetPlanRecruit_2006* New() const final {
    return CreateMaybeMessage<C_GetPlanRecruit_2006>(nullptr);
  }

  C_GetPlanRecruit_2006* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<C_GetPlanRecruit_2006>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const C_GetPlanRecruit_2006& from);
  void MergeFrom(const C_GetPlanRecruit_2006& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(C_GetPlanRecruit_2006* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "C_GetPlanRecruit_2006";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kYearFieldNumber = 2,
    kProvinceFieldNumber = 3,
    kKeleiFieldNumber = 4,
    kPiciFieldNumber = 5,
    kSchoolIdFieldNumber = 1,
  };
  // string year = 2;
  void clear_year();
  const std::string& year() const;
  void set_year(const std::string& value);
  void set_year(std::string&& value);
  void set_year(const char* value);
  void set_year(const char* value, size_t size);
  std::string* mutable_year();
  std::string* release_year();
  void set_allocated_year(std::string* year);
  private:
  const std::string& _internal_year() const;
  void _internal_set_year(const std::string& value);
  std::string* _internal_mutable_year();
  public:

  // string province = 3;
  void clear_province();
  const std::string& province() const;
  void set_province(const std::string& value);
  void set_province(std::string&& value);
  void set_province(const char* value);
  void set_province(const char* value, size_t size);
  std::string* mutable_province();
  std::string* release_province();
  void set_allocated_province(std::string* province);
  private:
  const std::string& _internal_province() const;
  void _internal_set_province(const std::string& value);
  std::string* _internal_mutable_province();
  public:

  // string kelei = 4;
  void clear_kelei();
  const std::string& kelei() const;
  void set_kelei(const std::string& value);
  void set_kelei(std::string&& value);
  void set_kelei(const char* value);
  void set_kelei(const char* value, size_t size);
  std::string* mutable_kelei();
  std::string* release_kelei();
  void set_allocated_kelei(std::string* kelei);
  private:
  const std::string& _internal_kelei() const;
  void _internal_set_kelei(const std::string& value);
  std::string* _internal_mutable_kelei();
  public:

  // string pici = 5;
  void clear_pici();
  const std::string& pici() const;
  void set_pici(const std::string& value);
  void set_pici(std::string&& value);
  void set_pici(const char* value);
  void set_pici(const char* value, size_t size);
  std::string* mutable_pici();
  std::string* release_pici();
  void set_allocated_pici(std::string* pici);
  private:
  const std::string& _internal_pici() const;
  void _internal_set_pici(const std::string& value);
  std::string* _internal_mutable_pici();
  public:

  // fixed64 schoolId = 1;
  void clear_schoolid();
  ::PROTOBUF_NAMESPACE_ID::uint64 schoolid() const;
  void set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_schoolid() const;
  void _internal_set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:C_GetPlanRecruit_2006)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr year_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr province_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr kelei_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pici_;
  ::PROTOBUF_NAMESPACE_ID::uint64 schoolid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class S_GetPlanRecruit_2007 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:S_GetPlanRecruit_2007) */ {
 public:
  S_GetPlanRecruit_2007();
  virtual ~S_GetPlanRecruit_2007();

  S_GetPlanRecruit_2007(const S_GetPlanRecruit_2007& from);
  S_GetPlanRecruit_2007(S_GetPlanRecruit_2007&& from) noexcept
    : S_GetPlanRecruit_2007() {
    *this = ::std::move(from);
  }

  inline S_GetPlanRecruit_2007& operator=(const S_GetPlanRecruit_2007& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_GetPlanRecruit_2007& operator=(S_GetPlanRecruit_2007&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const S_GetPlanRecruit_2007& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S_GetPlanRecruit_2007* internal_default_instance() {
    return reinterpret_cast<const S_GetPlanRecruit_2007*>(
               &_S_GetPlanRecruit_2007_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(S_GetPlanRecruit_2007& a, S_GetPlanRecruit_2007& b) {
    a.Swap(&b);
  }
  inline void Swap(S_GetPlanRecruit_2007* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline S_GetPlanRecruit_2007* New() const final {
    return CreateMaybeMessage<S_GetPlanRecruit_2007>(nullptr);
  }

  S_GetPlanRecruit_2007* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<S_GetPlanRecruit_2007>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const S_GetPlanRecruit_2007& from);
  void MergeFrom(const S_GetPlanRecruit_2007& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S_GetPlanRecruit_2007* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "S_GetPlanRecruit_2007";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlanRecruitFieldNumber = 1,
  };
  // repeated .PlanRecruit planRecruit = 1;
  int planrecruit_size() const;
  private:
  int _internal_planrecruit_size() const;
  public:
  void clear_planrecruit();
  ::PlanRecruit* mutable_planrecruit(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PlanRecruit >*
      mutable_planrecruit();
  private:
  const ::PlanRecruit& _internal_planrecruit(int index) const;
  ::PlanRecruit* _internal_add_planrecruit();
  public:
  const ::PlanRecruit& planrecruit(int index) const;
  ::PlanRecruit* add_planrecruit();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PlanRecruit >&
      planrecruit() const;

  // @@protoc_insertion_point(class_scope:S_GetPlanRecruit_2007)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PlanRecruit > planrecruit_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class C_GetXkyqInfo_2008 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:C_GetXkyqInfo_2008) */ {
 public:
  C_GetXkyqInfo_2008();
  virtual ~C_GetXkyqInfo_2008();

  C_GetXkyqInfo_2008(const C_GetXkyqInfo_2008& from);
  C_GetXkyqInfo_2008(C_GetXkyqInfo_2008&& from) noexcept
    : C_GetXkyqInfo_2008() {
    *this = ::std::move(from);
  }

  inline C_GetXkyqInfo_2008& operator=(const C_GetXkyqInfo_2008& from) {
    CopyFrom(from);
    return *this;
  }
  inline C_GetXkyqInfo_2008& operator=(C_GetXkyqInfo_2008&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const C_GetXkyqInfo_2008& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_GetXkyqInfo_2008* internal_default_instance() {
    return reinterpret_cast<const C_GetXkyqInfo_2008*>(
               &_C_GetXkyqInfo_2008_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(C_GetXkyqInfo_2008& a, C_GetXkyqInfo_2008& b) {
    a.Swap(&b);
  }
  inline void Swap(C_GetXkyqInfo_2008* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline C_GetXkyqInfo_2008* New() const final {
    return CreateMaybeMessage<C_GetXkyqInfo_2008>(nullptr);
  }

  C_GetXkyqInfo_2008* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<C_GetXkyqInfo_2008>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const C_GetXkyqInfo_2008& from);
  void MergeFrom(const C_GetXkyqInfo_2008& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(C_GetXkyqInfo_2008* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "C_GetXkyqInfo_2008";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSchoolIdFieldNumber = 1,
  };
  // fixed64 schoolId = 1;
  void clear_schoolid();
  ::PROTOBUF_NAMESPACE_ID::uint64 schoolid() const;
  void set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_schoolid() const;
  void _internal_set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:C_GetXkyqInfo_2008)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 schoolid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class S_GetXkyqInfo_2009 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:S_GetXkyqInfo_2009) */ {
 public:
  S_GetXkyqInfo_2009();
  virtual ~S_GetXkyqInfo_2009();

  S_GetXkyqInfo_2009(const S_GetXkyqInfo_2009& from);
  S_GetXkyqInfo_2009(S_GetXkyqInfo_2009&& from) noexcept
    : S_GetXkyqInfo_2009() {
    *this = ::std::move(from);
  }

  inline S_GetXkyqInfo_2009& operator=(const S_GetXkyqInfo_2009& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_GetXkyqInfo_2009& operator=(S_GetXkyqInfo_2009&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const S_GetXkyqInfo_2009& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S_GetXkyqInfo_2009* internal_default_instance() {
    return reinterpret_cast<const S_GetXkyqInfo_2009*>(
               &_S_GetXkyqInfo_2009_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(S_GetXkyqInfo_2009& a, S_GetXkyqInfo_2009& b) {
    a.Swap(&b);
  }
  inline void Swap(S_GetXkyqInfo_2009* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline S_GetXkyqInfo_2009* New() const final {
    return CreateMaybeMessage<S_GetXkyqInfo_2009>(nullptr);
  }

  S_GetXkyqInfo_2009* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<S_GetXkyqInfo_2009>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const S_GetXkyqInfo_2009& from);
  void MergeFrom(const S_GetXkyqInfo_2009& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S_GetXkyqInfo_2009* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "S_GetXkyqInfo_2009";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXkyqInfoFieldNumber = 1,
  };
  // repeated .XkyqInfo xkyqInfo = 1;
  int xkyqinfo_size() const;
  private:
  int _internal_xkyqinfo_size() const;
  public:
  void clear_xkyqinfo();
  ::XkyqInfo* mutable_xkyqinfo(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::XkyqInfo >*
      mutable_xkyqinfo();
  private:
  const ::XkyqInfo& _internal_xkyqinfo(int index) const;
  ::XkyqInfo* _internal_add_xkyqinfo();
  public:
  const ::XkyqInfo& xkyqinfo(int index) const;
  ::XkyqInfo* add_xkyqinfo();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::XkyqInfo >&
      xkyqinfo() const;

  // @@protoc_insertion_point(class_scope:S_GetXkyqInfo_2009)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::XkyqInfo > xkyqinfo_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class C_GetYxszInfo_2010 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:C_GetYxszInfo_2010) */ {
 public:
  C_GetYxszInfo_2010();
  virtual ~C_GetYxszInfo_2010();

  C_GetYxszInfo_2010(const C_GetYxszInfo_2010& from);
  C_GetYxszInfo_2010(C_GetYxszInfo_2010&& from) noexcept
    : C_GetYxszInfo_2010() {
    *this = ::std::move(from);
  }

  inline C_GetYxszInfo_2010& operator=(const C_GetYxszInfo_2010& from) {
    CopyFrom(from);
    return *this;
  }
  inline C_GetYxszInfo_2010& operator=(C_GetYxszInfo_2010&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const C_GetYxszInfo_2010& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_GetYxszInfo_2010* internal_default_instance() {
    return reinterpret_cast<const C_GetYxszInfo_2010*>(
               &_C_GetYxszInfo_2010_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(C_GetYxszInfo_2010& a, C_GetYxszInfo_2010& b) {
    a.Swap(&b);
  }
  inline void Swap(C_GetYxszInfo_2010* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline C_GetYxszInfo_2010* New() const final {
    return CreateMaybeMessage<C_GetYxszInfo_2010>(nullptr);
  }

  C_GetYxszInfo_2010* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<C_GetYxszInfo_2010>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const C_GetYxszInfo_2010& from);
  void MergeFrom(const C_GetYxszInfo_2010& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(C_GetYxszInfo_2010* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "C_GetYxszInfo_2010";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSchoolIdFieldNumber = 1,
  };
  // fixed64 schoolId = 1;
  void clear_schoolid();
  ::PROTOBUF_NAMESPACE_ID::uint64 schoolid() const;
  void set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_schoolid() const;
  void _internal_set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:C_GetYxszInfo_2010)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 schoolid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class S_GetYxszInfo_2011 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:S_GetYxszInfo_2011) */ {
 public:
  S_GetYxszInfo_2011();
  virtual ~S_GetYxszInfo_2011();

  S_GetYxszInfo_2011(const S_GetYxszInfo_2011& from);
  S_GetYxszInfo_2011(S_GetYxszInfo_2011&& from) noexcept
    : S_GetYxszInfo_2011() {
    *this = ::std::move(from);
  }

  inline S_GetYxszInfo_2011& operator=(const S_GetYxszInfo_2011& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_GetYxszInfo_2011& operator=(S_GetYxszInfo_2011&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const S_GetYxszInfo_2011& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S_GetYxszInfo_2011* internal_default_instance() {
    return reinterpret_cast<const S_GetYxszInfo_2011*>(
               &_S_GetYxszInfo_2011_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(S_GetYxszInfo_2011& a, S_GetYxszInfo_2011& b) {
    a.Swap(&b);
  }
  inline void Swap(S_GetYxszInfo_2011* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline S_GetYxszInfo_2011* New() const final {
    return CreateMaybeMessage<S_GetYxszInfo_2011>(nullptr);
  }

  S_GetYxszInfo_2011* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<S_GetYxszInfo_2011>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const S_GetYxszInfo_2011& from);
  void MergeFrom(const S_GetYxszInfo_2011& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S_GetYxszInfo_2011* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "S_GetYxszInfo_2011";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kYxszInfoFieldNumber = 1,
  };
  // repeated .YxszInfo yxszInfo = 1;
  int yxszinfo_size() const;
  private:
  int _internal_yxszinfo_size() const;
  public:
  void clear_yxszinfo();
  ::YxszInfo* mutable_yxszinfo(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::YxszInfo >*
      mutable_yxszinfo();
  private:
  const ::YxszInfo& _internal_yxszinfo(int index) const;
  ::YxszInfo* _internal_add_yxszinfo();
  public:
  const ::YxszInfo& yxszinfo(int index) const;
  ::YxszInfo* add_yxszinfo();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::YxszInfo >&
      yxszinfo() const;

  // @@protoc_insertion_point(class_scope:S_GetYxszInfo_2011)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::YxszInfo > yxszinfo_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class C_GetZsjzInfo_2012 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:C_GetZsjzInfo_2012) */ {
 public:
  C_GetZsjzInfo_2012();
  virtual ~C_GetZsjzInfo_2012();

  C_GetZsjzInfo_2012(const C_GetZsjzInfo_2012& from);
  C_GetZsjzInfo_2012(C_GetZsjzInfo_2012&& from) noexcept
    : C_GetZsjzInfo_2012() {
    *this = ::std::move(from);
  }

  inline C_GetZsjzInfo_2012& operator=(const C_GetZsjzInfo_2012& from) {
    CopyFrom(from);
    return *this;
  }
  inline C_GetZsjzInfo_2012& operator=(C_GetZsjzInfo_2012&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const C_GetZsjzInfo_2012& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_GetZsjzInfo_2012* internal_default_instance() {
    return reinterpret_cast<const C_GetZsjzInfo_2012*>(
               &_C_GetZsjzInfo_2012_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(C_GetZsjzInfo_2012& a, C_GetZsjzInfo_2012& b) {
    a.Swap(&b);
  }
  inline void Swap(C_GetZsjzInfo_2012* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline C_GetZsjzInfo_2012* New() const final {
    return CreateMaybeMessage<C_GetZsjzInfo_2012>(nullptr);
  }

  C_GetZsjzInfo_2012* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<C_GetZsjzInfo_2012>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const C_GetZsjzInfo_2012& from);
  void MergeFrom(const C_GetZsjzInfo_2012& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(C_GetZsjzInfo_2012* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "C_GetZsjzInfo_2012";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSchoolIdFieldNumber = 1,
  };
  // fixed64 schoolId = 1;
  void clear_schoolid();
  ::PROTOBUF_NAMESPACE_ID::uint64 schoolid() const;
  void set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_schoolid() const;
  void _internal_set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:C_GetZsjzInfo_2012)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 schoolid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class S_GetZsjzInfo_2013 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:S_GetZsjzInfo_2013) */ {
 public:
  S_GetZsjzInfo_2013();
  virtual ~S_GetZsjzInfo_2013();

  S_GetZsjzInfo_2013(const S_GetZsjzInfo_2013& from);
  S_GetZsjzInfo_2013(S_GetZsjzInfo_2013&& from) noexcept
    : S_GetZsjzInfo_2013() {
    *this = ::std::move(from);
  }

  inline S_GetZsjzInfo_2013& operator=(const S_GetZsjzInfo_2013& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_GetZsjzInfo_2013& operator=(S_GetZsjzInfo_2013&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const S_GetZsjzInfo_2013& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S_GetZsjzInfo_2013* internal_default_instance() {
    return reinterpret_cast<const S_GetZsjzInfo_2013*>(
               &_S_GetZsjzInfo_2013_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  friend void swap(S_GetZsjzInfo_2013& a, S_GetZsjzInfo_2013& b) {
    a.Swap(&b);
  }
  inline void Swap(S_GetZsjzInfo_2013* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline S_GetZsjzInfo_2013* New() const final {
    return CreateMaybeMessage<S_GetZsjzInfo_2013>(nullptr);
  }

  S_GetZsjzInfo_2013* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<S_GetZsjzInfo_2013>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const S_GetZsjzInfo_2013& from);
  void MergeFrom(const S_GetZsjzInfo_2013& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S_GetZsjzInfo_2013* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "S_GetZsjzInfo_2013";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kZsjzInfoFieldNumber = 1,
  };
  // repeated .ZsjzInfo zsjzInfo = 1;
  int zsjzinfo_size() const;
  private:
  int _internal_zsjzinfo_size() const;
  public:
  void clear_zsjzinfo();
  ::ZsjzInfo* mutable_zsjzinfo(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ZsjzInfo >*
      mutable_zsjzinfo();
  private:
  const ::ZsjzInfo& _internal_zsjzinfo(int index) const;
  ::ZsjzInfo* _internal_add_zsjzinfo();
  public:
  const ::ZsjzInfo& zsjzinfo(int index) const;
  ::ZsjzInfo* add_zsjzinfo();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ZsjzInfo >&
      zsjzinfo() const;

  // @@protoc_insertion_point(class_scope:S_GetZsjzInfo_2013)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ZsjzInfo > zsjzinfo_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class SchoolInfo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SchoolInfo) */ {
 public:
  SchoolInfo();
  virtual ~SchoolInfo();

  SchoolInfo(const SchoolInfo& from);
  SchoolInfo(SchoolInfo&& from) noexcept
    : SchoolInfo() {
    *this = ::std::move(from);
  }

  inline SchoolInfo& operator=(const SchoolInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline SchoolInfo& operator=(SchoolInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SchoolInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SchoolInfo* internal_default_instance() {
    return reinterpret_cast<const SchoolInfo*>(
               &_SchoolInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  friend void swap(SchoolInfo& a, SchoolInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(SchoolInfo* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SchoolInfo* New() const final {
    return CreateMaybeMessage<SchoolInfo>(nullptr);
  }

  SchoolInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SchoolInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SchoolInfo& from);
  void MergeFrom(const SchoolInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SchoolInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SchoolInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTelFieldNumber = 2,
    kNameFieldNumber = 3,
    kLogoPathFieldNumber = 4,
    kTypeFieldNumber = 5,
    kLevelFieldNumber = 6,
    kProvinceFieldNumber = 7,
    kEmailFieldNumber = 8,
    kSchoolInfoFieldNumber = 9,
    kSchoolMeddiaFieldNumber = 10,
    kFengguangFieldNumber = 11,
    kIdFieldNumber = 1,
  };
  // string tel = 2;
  void clear_tel();
  const std::string& tel() const;
  void set_tel(const std::string& value);
  void set_tel(std::string&& value);
  void set_tel(const char* value);
  void set_tel(const char* value, size_t size);
  std::string* mutable_tel();
  std::string* release_tel();
  void set_allocated_tel(std::string* tel);
  private:
  const std::string& _internal_tel() const;
  void _internal_set_tel(const std::string& value);
  std::string* _internal_mutable_tel();
  public:

  // string name = 3;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string logoPath = 4;
  void clear_logopath();
  const std::string& logopath() const;
  void set_logopath(const std::string& value);
  void set_logopath(std::string&& value);
  void set_logopath(const char* value);
  void set_logopath(const char* value, size_t size);
  std::string* mutable_logopath();
  std::string* release_logopath();
  void set_allocated_logopath(std::string* logopath);
  private:
  const std::string& _internal_logopath() const;
  void _internal_set_logopath(const std::string& value);
  std::string* _internal_mutable_logopath();
  public:

  // string type = 5;
  void clear_type();
  const std::string& type() const;
  void set_type(const std::string& value);
  void set_type(std::string&& value);
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  std::string* mutable_type();
  std::string* release_type();
  void set_allocated_type(std::string* type);
  private:
  const std::string& _internal_type() const;
  void _internal_set_type(const std::string& value);
  std::string* _internal_mutable_type();
  public:

  // string level = 6;
  void clear_level();
  const std::string& level() const;
  void set_level(const std::string& value);
  void set_level(std::string&& value);
  void set_level(const char* value);
  void set_level(const char* value, size_t size);
  std::string* mutable_level();
  std::string* release_level();
  void set_allocated_level(std::string* level);
  private:
  const std::string& _internal_level() const;
  void _internal_set_level(const std::string& value);
  std::string* _internal_mutable_level();
  public:

  // string province = 7;
  void clear_province();
  const std::string& province() const;
  void set_province(const std::string& value);
  void set_province(std::string&& value);
  void set_province(const char* value);
  void set_province(const char* value, size_t size);
  std::string* mutable_province();
  std::string* release_province();
  void set_allocated_province(std::string* province);
  private:
  const std::string& _internal_province() const;
  void _internal_set_province(const std::string& value);
  std::string* _internal_mutable_province();
  public:

  // string email = 8;
  void clear_email();
  const std::string& email() const;
  void set_email(const std::string& value);
  void set_email(std::string&& value);
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  std::string* mutable_email();
  std::string* release_email();
  void set_allocated_email(std::string* email);
  private:
  const std::string& _internal_email() const;
  void _internal_set_email(const std::string& value);
  std::string* _internal_mutable_email();
  public:

  // string schoolInfo = 9;
  void clear_schoolinfo();
  const std::string& schoolinfo() const;
  void set_schoolinfo(const std::string& value);
  void set_schoolinfo(std::string&& value);
  void set_schoolinfo(const char* value);
  void set_schoolinfo(const char* value, size_t size);
  std::string* mutable_schoolinfo();
  std::string* release_schoolinfo();
  void set_allocated_schoolinfo(std::string* schoolinfo);
  private:
  const std::string& _internal_schoolinfo() const;
  void _internal_set_schoolinfo(const std::string& value);
  std::string* _internal_mutable_schoolinfo();
  public:

  // string schoolMeddia = 10;
  void clear_schoolmeddia();
  const std::string& schoolmeddia() const;
  void set_schoolmeddia(const std::string& value);
  void set_schoolmeddia(std::string&& value);
  void set_schoolmeddia(const char* value);
  void set_schoolmeddia(const char* value, size_t size);
  std::string* mutable_schoolmeddia();
  std::string* release_schoolmeddia();
  void set_allocated_schoolmeddia(std::string* schoolmeddia);
  private:
  const std::string& _internal_schoolmeddia() const;
  void _internal_set_schoolmeddia(const std::string& value);
  std::string* _internal_mutable_schoolmeddia();
  public:

  // string fengguang = 11;
  void clear_fengguang();
  const std::string& fengguang() const;
  void set_fengguang(const std::string& value);
  void set_fengguang(std::string&& value);
  void set_fengguang(const char* value);
  void set_fengguang(const char* value, size_t size);
  std::string* mutable_fengguang();
  std::string* release_fengguang();
  void set_allocated_fengguang(std::string* fengguang);
  private:
  const std::string& _internal_fengguang() const;
  void _internal_set_fengguang(const std::string& value);
  std::string* _internal_mutable_fengguang();
  public:

  // fixed64 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:SchoolInfo)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tel_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr logopath_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr type_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr level_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr province_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr email_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr schoolinfo_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr schoolmeddia_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr fengguang_;
  ::PROTOBUF_NAMESPACE_ID::uint64 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class ZyInfo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ZyInfo) */ {
 public:
  ZyInfo();
  virtual ~ZyInfo();

  ZyInfo(const ZyInfo& from);
  ZyInfo(ZyInfo&& from) noexcept
    : ZyInfo() {
    *this = ::std::move(from);
  }

  inline ZyInfo& operator=(const ZyInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline ZyInfo& operator=(ZyInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ZyInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ZyInfo* internal_default_instance() {
    return reinterpret_cast<const ZyInfo*>(
               &_ZyInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  friend void swap(ZyInfo& a, ZyInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(ZyInfo* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ZyInfo* New() const final {
    return CreateMaybeMessage<ZyInfo>(nullptr);
  }

  ZyInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ZyInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ZyInfo& from);
  void MergeFrom(const ZyInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ZyInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ZyInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kTypeFieldNumber = 3,
    kLevelFieldNumber = 4,
    kYearLimitFieldNumber = 5,
    kStudyLevFieldNumber = 6,
    kRequirementFieldNumber = 7,
    kZyCodeFieldNumber = 8,
    kIdFieldNumber = 1,
  };
  // string name = 2;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string type = 3;
  void clear_type();
  const std::string& type() const;
  void set_type(const std::string& value);
  void set_type(std::string&& value);
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  std::string* mutable_type();
  std::string* release_type();
  void set_allocated_type(std::string* type);
  private:
  const std::string& _internal_type() const;
  void _internal_set_type(const std::string& value);
  std::string* _internal_mutable_type();
  public:

  // string level = 4;
  void clear_level();
  const std::string& level() const;
  void set_level(const std::string& value);
  void set_level(std::string&& value);
  void set_level(const char* value);
  void set_level(const char* value, size_t size);
  std::string* mutable_level();
  std::string* release_level();
  void set_allocated_level(std::string* level);
  private:
  const std::string& _internal_level() const;
  void _internal_set_level(const std::string& value);
  std::string* _internal_mutable_level();
  public:

  // string yearLimit = 5;
  void clear_yearlimit();
  const std::string& yearlimit() const;
  void set_yearlimit(const std::string& value);
  void set_yearlimit(std::string&& value);
  void set_yearlimit(const char* value);
  void set_yearlimit(const char* value, size_t size);
  std::string* mutable_yearlimit();
  std::string* release_yearlimit();
  void set_allocated_yearlimit(std::string* yearlimit);
  private:
  const std::string& _internal_yearlimit() const;
  void _internal_set_yearlimit(const std::string& value);
  std::string* _internal_mutable_yearlimit();
  public:

  // string studyLev = 6;
  void clear_studylev();
  const std::string& studylev() const;
  void set_studylev(const std::string& value);
  void set_studylev(std::string&& value);
  void set_studylev(const char* value);
  void set_studylev(const char* value, size_t size);
  std::string* mutable_studylev();
  std::string* release_studylev();
  void set_allocated_studylev(std::string* studylev);
  private:
  const std::string& _internal_studylev() const;
  void _internal_set_studylev(const std::string& value);
  std::string* _internal_mutable_studylev();
  public:

  // string requirement = 7;
  void clear_requirement();
  const std::string& requirement() const;
  void set_requirement(const std::string& value);
  void set_requirement(std::string&& value);
  void set_requirement(const char* value);
  void set_requirement(const char* value, size_t size);
  std::string* mutable_requirement();
  std::string* release_requirement();
  void set_allocated_requirement(std::string* requirement);
  private:
  const std::string& _internal_requirement() const;
  void _internal_set_requirement(const std::string& value);
  std::string* _internal_mutable_requirement();
  public:

  // string zyCode = 8;
  void clear_zycode();
  const std::string& zycode() const;
  void set_zycode(const std::string& value);
  void set_zycode(std::string&& value);
  void set_zycode(const char* value);
  void set_zycode(const char* value, size_t size);
  std::string* mutable_zycode();
  std::string* release_zycode();
  void set_allocated_zycode(std::string* zycode);
  private:
  const std::string& _internal_zycode() const;
  void _internal_set_zycode(const std::string& value);
  std::string* _internal_mutable_zycode();
  public:

  // fixed64 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:ZyInfo)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr type_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr level_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr yearlimit_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr studylev_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr requirement_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr zycode_;
  ::PROTOBUF_NAMESPACE_ID::uint64 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class SchoolAdmitInfo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SchoolAdmitInfo) */ {
 public:
  SchoolAdmitInfo();
  virtual ~SchoolAdmitInfo();

  SchoolAdmitInfo(const SchoolAdmitInfo& from);
  SchoolAdmitInfo(SchoolAdmitInfo&& from) noexcept
    : SchoolAdmitInfo() {
    *this = ::std::move(from);
  }

  inline SchoolAdmitInfo& operator=(const SchoolAdmitInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline SchoolAdmitInfo& operator=(SchoolAdmitInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SchoolAdmitInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SchoolAdmitInfo* internal_default_instance() {
    return reinterpret_cast<const SchoolAdmitInfo*>(
               &_SchoolAdmitInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  friend void swap(SchoolAdmitInfo& a, SchoolAdmitInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(SchoolAdmitInfo* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SchoolAdmitInfo* New() const final {
    return CreateMaybeMessage<SchoolAdmitInfo>(nullptr);
  }

  SchoolAdmitInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SchoolAdmitInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SchoolAdmitInfo& from);
  void MergeFrom(const SchoolAdmitInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SchoolAdmitInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SchoolAdmitInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kZsnfFieldNumber = 3,
    kKeleiFieldNumber = 4,
    kYylbFieldNumber = 5,
    kLqpcFieldNumber = 6,
    kHigScoreFieldNumber = 7,
    kAvgScoreFieldNumber = 8,
    kLowScoreFieldNumber = 9,
    kLowSeatFieldNumber = 10,
    kPlanCountFieldNumber = 11,
    kIdFieldNumber = 1,
    kSchoolIdFieldNumber = 2,
  };
  // string zsnf = 3;
  void clear_zsnf();
  const std::string& zsnf() const;
  void set_zsnf(const std::string& value);
  void set_zsnf(std::string&& value);
  void set_zsnf(const char* value);
  void set_zsnf(const char* value, size_t size);
  std::string* mutable_zsnf();
  std::string* release_zsnf();
  void set_allocated_zsnf(std::string* zsnf);
  private:
  const std::string& _internal_zsnf() const;
  void _internal_set_zsnf(const std::string& value);
  std::string* _internal_mutable_zsnf();
  public:

  // string kelei = 4;
  void clear_kelei();
  const std::string& kelei() const;
  void set_kelei(const std::string& value);
  void set_kelei(std::string&& value);
  void set_kelei(const char* value);
  void set_kelei(const char* value, size_t size);
  std::string* mutable_kelei();
  std::string* release_kelei();
  void set_allocated_kelei(std::string* kelei);
  private:
  const std::string& _internal_kelei() const;
  void _internal_set_kelei(const std::string& value);
  std::string* _internal_mutable_kelei();
  public:

  // string yylb = 5;
  void clear_yylb();
  const std::string& yylb() const;
  void set_yylb(const std::string& value);
  void set_yylb(std::string&& value);
  void set_yylb(const char* value);
  void set_yylb(const char* value, size_t size);
  std::string* mutable_yylb();
  std::string* release_yylb();
  void set_allocated_yylb(std::string* yylb);
  private:
  const std::string& _internal_yylb() const;
  void _internal_set_yylb(const std::string& value);
  std::string* _internal_mutable_yylb();
  public:

  // string lqpc = 6;
  void clear_lqpc();
  const std::string& lqpc() const;
  void set_lqpc(const std::string& value);
  void set_lqpc(std::string&& value);
  void set_lqpc(const char* value);
  void set_lqpc(const char* value, size_t size);
  std::string* mutable_lqpc();
  std::string* release_lqpc();
  void set_allocated_lqpc(std::string* lqpc);
  private:
  const std::string& _internal_lqpc() const;
  void _internal_set_lqpc(const std::string& value);
  std::string* _internal_mutable_lqpc();
  public:

  // string higScore = 7;
  void clear_higscore();
  const std::string& higscore() const;
  void set_higscore(const std::string& value);
  void set_higscore(std::string&& value);
  void set_higscore(const char* value);
  void set_higscore(const char* value, size_t size);
  std::string* mutable_higscore();
  std::string* release_higscore();
  void set_allocated_higscore(std::string* higscore);
  private:
  const std::string& _internal_higscore() const;
  void _internal_set_higscore(const std::string& value);
  std::string* _internal_mutable_higscore();
  public:

  // string AvgScore = 8;
  void clear_avgscore();
  const std::string& avgscore() const;
  void set_avgscore(const std::string& value);
  void set_avgscore(std::string&& value);
  void set_avgscore(const char* value);
  void set_avgscore(const char* value, size_t size);
  std::string* mutable_avgscore();
  std::string* release_avgscore();
  void set_allocated_avgscore(std::string* avgscore);
  private:
  const std::string& _internal_avgscore() const;
  void _internal_set_avgscore(const std::string& value);
  std::string* _internal_mutable_avgscore();
  public:

  // string lowScore = 9;
  void clear_lowscore();
  const std::string& lowscore() const;
  void set_lowscore(const std::string& value);
  void set_lowscore(std::string&& value);
  void set_lowscore(const char* value);
  void set_lowscore(const char* value, size_t size);
  std::string* mutable_lowscore();
  std::string* release_lowscore();
  void set_allocated_lowscore(std::string* lowscore);
  private:
  const std::string& _internal_lowscore() const;
  void _internal_set_lowscore(const std::string& value);
  std::string* _internal_mutable_lowscore();
  public:

  // string lowSeat = 10;
  void clear_lowseat();
  const std::string& lowseat() const;
  void set_lowseat(const std::string& value);
  void set_lowseat(std::string&& value);
  void set_lowseat(const char* value);
  void set_lowseat(const char* value, size_t size);
  std::string* mutable_lowseat();
  std::string* release_lowseat();
  void set_allocated_lowseat(std::string* lowseat);
  private:
  const std::string& _internal_lowseat() const;
  void _internal_set_lowseat(const std::string& value);
  std::string* _internal_mutable_lowseat();
  public:

  // string planCount = 11;
  void clear_plancount();
  const std::string& plancount() const;
  void set_plancount(const std::string& value);
  void set_plancount(std::string&& value);
  void set_plancount(const char* value);
  void set_plancount(const char* value, size_t size);
  std::string* mutable_plancount();
  std::string* release_plancount();
  void set_allocated_plancount(std::string* plancount);
  private:
  const std::string& _internal_plancount() const;
  void _internal_set_plancount(const std::string& value);
  std::string* _internal_mutable_plancount();
  public:

  // fixed64 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // fixed64 schoolId = 2;
  void clear_schoolid();
  ::PROTOBUF_NAMESPACE_ID::uint64 schoolid() const;
  void set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_schoolid() const;
  void _internal_set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:SchoolAdmitInfo)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr zsnf_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr kelei_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr yylb_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr lqpc_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr higscore_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr avgscore_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr lowscore_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr lowseat_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr plancount_;
  ::PROTOBUF_NAMESPACE_ID::uint64 id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 schoolid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class ZyAdmitInfo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ZyAdmitInfo) */ {
 public:
  ZyAdmitInfo();
  virtual ~ZyAdmitInfo();

  ZyAdmitInfo(const ZyAdmitInfo& from);
  ZyAdmitInfo(ZyAdmitInfo&& from) noexcept
    : ZyAdmitInfo() {
    *this = ::std::move(from);
  }

  inline ZyAdmitInfo& operator=(const ZyAdmitInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline ZyAdmitInfo& operator=(ZyAdmitInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ZyAdmitInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ZyAdmitInfo* internal_default_instance() {
    return reinterpret_cast<const ZyAdmitInfo*>(
               &_ZyAdmitInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  friend void swap(ZyAdmitInfo& a, ZyAdmitInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(ZyAdmitInfo* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ZyAdmitInfo* New() const final {
    return CreateMaybeMessage<ZyAdmitInfo>(nullptr);
  }

  ZyAdmitInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ZyAdmitInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ZyAdmitInfo& from);
  void MergeFrom(const ZyAdmitInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ZyAdmitInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ZyAdmitInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kZyNameFieldNumber = 3,
    kZsnfFieldNumber = 4,
    kKeleiFieldNumber = 5,
    kLqpcFieldNumber = 6,
    kHigScoreFieldNumber = 7,
    kAvgScoreFieldNumber = 8,
    kLowScoreFieldNumber = 9,
    kLowSeatFieldNumber = 10,
    kDiffFieldNumber = 11,
    kPlanCountFieldNumber = 12,
    kIdFieldNumber = 1,
    kZyIdFieldNumber = 2,
    kSchoolIdFieldNumber = 13,
  };
  // string zyName = 3;
  void clear_zyname();
  const std::string& zyname() const;
  void set_zyname(const std::string& value);
  void set_zyname(std::string&& value);
  void set_zyname(const char* value);
  void set_zyname(const char* value, size_t size);
  std::string* mutable_zyname();
  std::string* release_zyname();
  void set_allocated_zyname(std::string* zyname);
  private:
  const std::string& _internal_zyname() const;
  void _internal_set_zyname(const std::string& value);
  std::string* _internal_mutable_zyname();
  public:

  // string zsnf = 4;
  void clear_zsnf();
  const std::string& zsnf() const;
  void set_zsnf(const std::string& value);
  void set_zsnf(std::string&& value);
  void set_zsnf(const char* value);
  void set_zsnf(const char* value, size_t size);
  std::string* mutable_zsnf();
  std::string* release_zsnf();
  void set_allocated_zsnf(std::string* zsnf);
  private:
  const std::string& _internal_zsnf() const;
  void _internal_set_zsnf(const std::string& value);
  std::string* _internal_mutable_zsnf();
  public:

  // string kelei = 5;
  void clear_kelei();
  const std::string& kelei() const;
  void set_kelei(const std::string& value);
  void set_kelei(std::string&& value);
  void set_kelei(const char* value);
  void set_kelei(const char* value, size_t size);
  std::string* mutable_kelei();
  std::string* release_kelei();
  void set_allocated_kelei(std::string* kelei);
  private:
  const std::string& _internal_kelei() const;
  void _internal_set_kelei(const std::string& value);
  std::string* _internal_mutable_kelei();
  public:

  // string lqpc = 6;
  void clear_lqpc();
  const std::string& lqpc() const;
  void set_lqpc(const std::string& value);
  void set_lqpc(std::string&& value);
  void set_lqpc(const char* value);
  void set_lqpc(const char* value, size_t size);
  std::string* mutable_lqpc();
  std::string* release_lqpc();
  void set_allocated_lqpc(std::string* lqpc);
  private:
  const std::string& _internal_lqpc() const;
  void _internal_set_lqpc(const std::string& value);
  std::string* _internal_mutable_lqpc();
  public:

  // string higScore = 7;
  void clear_higscore();
  const std::string& higscore() const;
  void set_higscore(const std::string& value);
  void set_higscore(std::string&& value);
  void set_higscore(const char* value);
  void set_higscore(const char* value, size_t size);
  std::string* mutable_higscore();
  std::string* release_higscore();
  void set_allocated_higscore(std::string* higscore);
  private:
  const std::string& _internal_higscore() const;
  void _internal_set_higscore(const std::string& value);
  std::string* _internal_mutable_higscore();
  public:

  // string AvgScore = 8;
  void clear_avgscore();
  const std::string& avgscore() const;
  void set_avgscore(const std::string& value);
  void set_avgscore(std::string&& value);
  void set_avgscore(const char* value);
  void set_avgscore(const char* value, size_t size);
  std::string* mutable_avgscore();
  std::string* release_avgscore();
  void set_allocated_avgscore(std::string* avgscore);
  private:
  const std::string& _internal_avgscore() const;
  void _internal_set_avgscore(const std::string& value);
  std::string* _internal_mutable_avgscore();
  public:

  // string lowScore = 9;
  void clear_lowscore();
  const std::string& lowscore() const;
  void set_lowscore(const std::string& value);
  void set_lowscore(std::string&& value);
  void set_lowscore(const char* value);
  void set_lowscore(const char* value, size_t size);
  std::string* mutable_lowscore();
  std::string* release_lowscore();
  void set_allocated_lowscore(std::string* lowscore);
  private:
  const std::string& _internal_lowscore() const;
  void _internal_set_lowscore(const std::string& value);
  std::string* _internal_mutable_lowscore();
  public:

  // string lowSeat = 10;
  void clear_lowseat();
  const std::string& lowseat() const;
  void set_lowseat(const std::string& value);
  void set_lowseat(std::string&& value);
  void set_lowseat(const char* value);
  void set_lowseat(const char* value, size_t size);
  std::string* mutable_lowseat();
  std::string* release_lowseat();
  void set_allocated_lowseat(std::string* lowseat);
  private:
  const std::string& _internal_lowseat() const;
  void _internal_set_lowseat(const std::string& value);
  std::string* _internal_mutable_lowseat();
  public:

  // string diff = 11;
  void clear_diff();
  const std::string& diff() const;
  void set_diff(const std::string& value);
  void set_diff(std::string&& value);
  void set_diff(const char* value);
  void set_diff(const char* value, size_t size);
  std::string* mutable_diff();
  std::string* release_diff();
  void set_allocated_diff(std::string* diff);
  private:
  const std::string& _internal_diff() const;
  void _internal_set_diff(const std::string& value);
  std::string* _internal_mutable_diff();
  public:

  // string planCount = 12;
  void clear_plancount();
  const std::string& plancount() const;
  void set_plancount(const std::string& value);
  void set_plancount(std::string&& value);
  void set_plancount(const char* value);
  void set_plancount(const char* value, size_t size);
  std::string* mutable_plancount();
  std::string* release_plancount();
  void set_allocated_plancount(std::string* plancount);
  private:
  const std::string& _internal_plancount() const;
  void _internal_set_plancount(const std::string& value);
  std::string* _internal_mutable_plancount();
  public:

  // fixed64 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // fixed64 zyId = 2;
  void clear_zyid();
  ::PROTOBUF_NAMESPACE_ID::uint64 zyid() const;
  void set_zyid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_zyid() const;
  void _internal_set_zyid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // fixed64 schoolId = 13;
  void clear_schoolid();
  ::PROTOBUF_NAMESPACE_ID::uint64 schoolid() const;
  void set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_schoolid() const;
  void _internal_set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:ZyAdmitInfo)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr zyname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr zsnf_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr kelei_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr lqpc_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr higscore_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr avgscore_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr lowscore_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr lowseat_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr diff_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr plancount_;
  ::PROTOBUF_NAMESPACE_ID::uint64 id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 zyid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 schoolid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class PlanRecruit :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PlanRecruit) */ {
 public:
  PlanRecruit();
  virtual ~PlanRecruit();

  PlanRecruit(const PlanRecruit& from);
  PlanRecruit(PlanRecruit&& from) noexcept
    : PlanRecruit() {
    *this = ::std::move(from);
  }

  inline PlanRecruit& operator=(const PlanRecruit& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlanRecruit& operator=(PlanRecruit&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PlanRecruit& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlanRecruit* internal_default_instance() {
    return reinterpret_cast<const PlanRecruit*>(
               &_PlanRecruit_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  friend void swap(PlanRecruit& a, PlanRecruit& b) {
    a.Swap(&b);
  }
  inline void Swap(PlanRecruit* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PlanRecruit* New() const final {
    return CreateMaybeMessage<PlanRecruit>(nullptr);
  }

  PlanRecruit* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PlanRecruit>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PlanRecruit& from);
  void MergeFrom(const PlanRecruit& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlanRecruit* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PlanRecruit";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kZcodeFieldNumber = 4,
    kZyNameFieldNumber = 5,
    kPlanCountFieldNumber = 6,
    kZsnfFieldNumber = 7,
    kPiciFieldNumber = 8,
    kIdFieldNumber = 1,
    kSchoolIdFieldNumber = 2,
    kZyIdFieldNumber = 3,
  };
  // string zcode = 4;
  void clear_zcode();
  const std::string& zcode() const;
  void set_zcode(const std::string& value);
  void set_zcode(std::string&& value);
  void set_zcode(const char* value);
  void set_zcode(const char* value, size_t size);
  std::string* mutable_zcode();
  std::string* release_zcode();
  void set_allocated_zcode(std::string* zcode);
  private:
  const std::string& _internal_zcode() const;
  void _internal_set_zcode(const std::string& value);
  std::string* _internal_mutable_zcode();
  public:

  // string zyName = 5;
  void clear_zyname();
  const std::string& zyname() const;
  void set_zyname(const std::string& value);
  void set_zyname(std::string&& value);
  void set_zyname(const char* value);
  void set_zyname(const char* value, size_t size);
  std::string* mutable_zyname();
  std::string* release_zyname();
  void set_allocated_zyname(std::string* zyname);
  private:
  const std::string& _internal_zyname() const;
  void _internal_set_zyname(const std::string& value);
  std::string* _internal_mutable_zyname();
  public:

  // string planCount = 6;
  void clear_plancount();
  const std::string& plancount() const;
  void set_plancount(const std::string& value);
  void set_plancount(std::string&& value);
  void set_plancount(const char* value);
  void set_plancount(const char* value, size_t size);
  std::string* mutable_plancount();
  std::string* release_plancount();
  void set_allocated_plancount(std::string* plancount);
  private:
  const std::string& _internal_plancount() const;
  void _internal_set_plancount(const std::string& value);
  std::string* _internal_mutable_plancount();
  public:

  // string zsnf = 7;
  void clear_zsnf();
  const std::string& zsnf() const;
  void set_zsnf(const std::string& value);
  void set_zsnf(std::string&& value);
  void set_zsnf(const char* value);
  void set_zsnf(const char* value, size_t size);
  std::string* mutable_zsnf();
  std::string* release_zsnf();
  void set_allocated_zsnf(std::string* zsnf);
  private:
  const std::string& _internal_zsnf() const;
  void _internal_set_zsnf(const std::string& value);
  std::string* _internal_mutable_zsnf();
  public:

  // string pici = 8;
  void clear_pici();
  const std::string& pici() const;
  void set_pici(const std::string& value);
  void set_pici(std::string&& value);
  void set_pici(const char* value);
  void set_pici(const char* value, size_t size);
  std::string* mutable_pici();
  std::string* release_pici();
  void set_allocated_pici(std::string* pici);
  private:
  const std::string& _internal_pici() const;
  void _internal_set_pici(const std::string& value);
  std::string* _internal_mutable_pici();
  public:

  // fixed64 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // fixed64 schoolId = 2;
  void clear_schoolid();
  ::PROTOBUF_NAMESPACE_ID::uint64 schoolid() const;
  void set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_schoolid() const;
  void _internal_set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // fixed64 zyId = 3;
  void clear_zyid();
  ::PROTOBUF_NAMESPACE_ID::uint64 zyid() const;
  void set_zyid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_zyid() const;
  void _internal_set_zyid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:PlanRecruit)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr zcode_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr zyname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr plancount_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr zsnf_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pici_;
  ::PROTOBUF_NAMESPACE_ID::uint64 id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 schoolid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 zyid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class XkyqInfo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:XkyqInfo) */ {
 public:
  XkyqInfo();
  virtual ~XkyqInfo();

  XkyqInfo(const XkyqInfo& from);
  XkyqInfo(XkyqInfo&& from) noexcept
    : XkyqInfo() {
    *this = ::std::move(from);
  }

  inline XkyqInfo& operator=(const XkyqInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline XkyqInfo& operator=(XkyqInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const XkyqInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XkyqInfo* internal_default_instance() {
    return reinterpret_cast<const XkyqInfo*>(
               &_XkyqInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  friend void swap(XkyqInfo& a, XkyqInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(XkyqInfo* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline XkyqInfo* New() const final {
    return CreateMaybeMessage<XkyqInfo>(nullptr);
  }

  XkyqInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<XkyqInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const XkyqInfo& from);
  void MergeFrom(const XkyqInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(XkyqInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "XkyqInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kZyNameFieldNumber = 4,
    kPlanCountFieldNumber = 5,
    kZsnfFieldNumber = 6,
    kPiciFieldNumber = 7,
    kIdFieldNumber = 1,
    kSchoolIdFieldNumber = 2,
    kZyIdFieldNumber = 3,
  };
  // string zyName = 4;
  void clear_zyname();
  const std::string& zyname() const;
  void set_zyname(const std::string& value);
  void set_zyname(std::string&& value);
  void set_zyname(const char* value);
  void set_zyname(const char* value, size_t size);
  std::string* mutable_zyname();
  std::string* release_zyname();
  void set_allocated_zyname(std::string* zyname);
  private:
  const std::string& _internal_zyname() const;
  void _internal_set_zyname(const std::string& value);
  std::string* _internal_mutable_zyname();
  public:

  // string planCount = 5;
  void clear_plancount();
  const std::string& plancount() const;
  void set_plancount(const std::string& value);
  void set_plancount(std::string&& value);
  void set_plancount(const char* value);
  void set_plancount(const char* value, size_t size);
  std::string* mutable_plancount();
  std::string* release_plancount();
  void set_allocated_plancount(std::string* plancount);
  private:
  const std::string& _internal_plancount() const;
  void _internal_set_plancount(const std::string& value);
  std::string* _internal_mutable_plancount();
  public:

  // string zsnf = 6;
  void clear_zsnf();
  const std::string& zsnf() const;
  void set_zsnf(const std::string& value);
  void set_zsnf(std::string&& value);
  void set_zsnf(const char* value);
  void set_zsnf(const char* value, size_t size);
  std::string* mutable_zsnf();
  std::string* release_zsnf();
  void set_allocated_zsnf(std::string* zsnf);
  private:
  const std::string& _internal_zsnf() const;
  void _internal_set_zsnf(const std::string& value);
  std::string* _internal_mutable_zsnf();
  public:

  // string pici = 7;
  void clear_pici();
  const std::string& pici() const;
  void set_pici(const std::string& value);
  void set_pici(std::string&& value);
  void set_pici(const char* value);
  void set_pici(const char* value, size_t size);
  std::string* mutable_pici();
  std::string* release_pici();
  void set_allocated_pici(std::string* pici);
  private:
  const std::string& _internal_pici() const;
  void _internal_set_pici(const std::string& value);
  std::string* _internal_mutable_pici();
  public:

  // fixed64 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // fixed64 schoolId = 2;
  void clear_schoolid();
  ::PROTOBUF_NAMESPACE_ID::uint64 schoolid() const;
  void set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_schoolid() const;
  void _internal_set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // fixed64 zyId = 3;
  void clear_zyid();
  ::PROTOBUF_NAMESPACE_ID::uint64 zyid() const;
  void set_zyid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_zyid() const;
  void _internal_set_zyid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:XkyqInfo)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr zyname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr plancount_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr zsnf_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pici_;
  ::PROTOBUF_NAMESPACE_ID::uint64 id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 schoolid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 zyid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class YxszInfo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:YxszInfo) */ {
 public:
  YxszInfo();
  virtual ~YxszInfo();

  YxszInfo(const YxszInfo& from);
  YxszInfo(YxszInfo&& from) noexcept
    : YxszInfo() {
    *this = ::std::move(from);
  }

  inline YxszInfo& operator=(const YxszInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline YxszInfo& operator=(YxszInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const YxszInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const YxszInfo* internal_default_instance() {
    return reinterpret_cast<const YxszInfo*>(
               &_YxszInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  friend void swap(YxszInfo& a, YxszInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(YxszInfo* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline YxszInfo* New() const final {
    return CreateMaybeMessage<YxszInfo>(nullptr);
  }

  YxszInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<YxszInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const YxszInfo& from);
  void MergeFrom(const YxszInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(YxszInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "YxszInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXkyqInfoFieldNumber = 2,
    kXyNameFieldNumber = 1,
  };
  // repeated .XkyqInfo xkyqInfo = 2;
  int xkyqinfo_size() const;
  private:
  int _internal_xkyqinfo_size() const;
  public:
  void clear_xkyqinfo();
  ::XkyqInfo* mutable_xkyqinfo(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::XkyqInfo >*
      mutable_xkyqinfo();
  private:
  const ::XkyqInfo& _internal_xkyqinfo(int index) const;
  ::XkyqInfo* _internal_add_xkyqinfo();
  public:
  const ::XkyqInfo& xkyqinfo(int index) const;
  ::XkyqInfo* add_xkyqinfo();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::XkyqInfo >&
      xkyqinfo() const;

  // fixed64 xyName = 1;
  void clear_xyname();
  ::PROTOBUF_NAMESPACE_ID::uint64 xyname() const;
  void set_xyname(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_xyname() const;
  void _internal_set_xyname(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:YxszInfo)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::XkyqInfo > xkyqinfo_;
  ::PROTOBUF_NAMESPACE_ID::uint64 xyname_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class ZsjzInfo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ZsjzInfo) */ {
 public:
  ZsjzInfo();
  virtual ~ZsjzInfo();

  ZsjzInfo(const ZsjzInfo& from);
  ZsjzInfo(ZsjzInfo&& from) noexcept
    : ZsjzInfo() {
    *this = ::std::move(from);
  }

  inline ZsjzInfo& operator=(const ZsjzInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline ZsjzInfo& operator=(ZsjzInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ZsjzInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ZsjzInfo* internal_default_instance() {
    return reinterpret_cast<const ZsjzInfo*>(
               &_ZsjzInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  friend void swap(ZsjzInfo& a, ZsjzInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(ZsjzInfo* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ZsjzInfo* New() const final {
    return CreateMaybeMessage<ZsjzInfo>(nullptr);
  }

  ZsjzInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ZsjzInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ZsjzInfo& from);
  void MergeFrom(const ZsjzInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ZsjzInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ZsjzInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPublishDateFieldNumber = 4,
    kContentFieldNumber = 5,
    kIdFieldNumber = 1,
    kSchoolIdFieldNumber = 2,
    kTitleFieldNumber = 3,
  };
  // string publishDate = 4;
  void clear_publishdate();
  const std::string& publishdate() const;
  void set_publishdate(const std::string& value);
  void set_publishdate(std::string&& value);
  void set_publishdate(const char* value);
  void set_publishdate(const char* value, size_t size);
  std::string* mutable_publishdate();
  std::string* release_publishdate();
  void set_allocated_publishdate(std::string* publishdate);
  private:
  const std::string& _internal_publishdate() const;
  void _internal_set_publishdate(const std::string& value);
  std::string* _internal_mutable_publishdate();
  public:

  // string content = 5;
  void clear_content();
  const std::string& content() const;
  void set_content(const std::string& value);
  void set_content(std::string&& value);
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  std::string* mutable_content();
  std::string* release_content();
  void set_allocated_content(std::string* content);
  private:
  const std::string& _internal_content() const;
  void _internal_set_content(const std::string& value);
  std::string* _internal_mutable_content();
  public:

  // fixed64 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // fixed64 schoolId = 2;
  void clear_schoolid();
  ::PROTOBUF_NAMESPACE_ID::uint64 schoolid() const;
  void set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_schoolid() const;
  void _internal_set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // fixed64 title = 3;
  void clear_title();
  ::PROTOBUF_NAMESPACE_ID::uint64 title() const;
  void set_title(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_title() const;
  void _internal_set_title(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:ZsjzInfo)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr publishdate_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr content_;
  ::PROTOBUF_NAMESPACE_ID::uint64 id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 schoolid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 title_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class C_GetZntjInfoList_3000 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:C_GetZntjInfoList_3000) */ {
 public:
  C_GetZntjInfoList_3000();
  virtual ~C_GetZntjInfoList_3000();

  C_GetZntjInfoList_3000(const C_GetZntjInfoList_3000& from);
  C_GetZntjInfoList_3000(C_GetZntjInfoList_3000&& from) noexcept
    : C_GetZntjInfoList_3000() {
    *this = ::std::move(from);
  }

  inline C_GetZntjInfoList_3000& operator=(const C_GetZntjInfoList_3000& from) {
    CopyFrom(from);
    return *this;
  }
  inline C_GetZntjInfoList_3000& operator=(C_GetZntjInfoList_3000&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const C_GetZntjInfoList_3000& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_GetZntjInfoList_3000* internal_default_instance() {
    return reinterpret_cast<const C_GetZntjInfoList_3000*>(
               &_C_GetZntjInfoList_3000_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  friend void swap(C_GetZntjInfoList_3000& a, C_GetZntjInfoList_3000& b) {
    a.Swap(&b);
  }
  inline void Swap(C_GetZntjInfoList_3000* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline C_GetZntjInfoList_3000* New() const final {
    return CreateMaybeMessage<C_GetZntjInfoList_3000>(nullptr);
  }

  C_GetZntjInfoList_3000* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<C_GetZntjInfoList_3000>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const C_GetZntjInfoList_3000& from);
  void MergeFrom(const C_GetZntjInfoList_3000& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(C_GetZntjInfoList_3000* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "C_GetZntjInfoList_3000";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeleiFieldNumber = 1,
    kProvinceFieldNumber = 4,
    kTypeFieldNumber = 5,
    kPiciFieldNumber = 6,
    kCengciFieldNumber = 7,
    kSortFileFieldNumber = 12,
    kScoreFieldNumber = 2,
    kWeishuFieldNumber = 3,
    kStartScoreFieldNumber = 8,
    kEndScoreFieldNumber = 9,
    kPageFieldNumber = 10,
    kLimitFieldNumber = 11,
  };
  // string kelei = 1;
  void clear_kelei();
  const std::string& kelei() const;
  void set_kelei(const std::string& value);
  void set_kelei(std::string&& value);
  void set_kelei(const char* value);
  void set_kelei(const char* value, size_t size);
  std::string* mutable_kelei();
  std::string* release_kelei();
  void set_allocated_kelei(std::string* kelei);
  private:
  const std::string& _internal_kelei() const;
  void _internal_set_kelei(const std::string& value);
  std::string* _internal_mutable_kelei();
  public:

  // string province = 4;
  void clear_province();
  const std::string& province() const;
  void set_province(const std::string& value);
  void set_province(std::string&& value);
  void set_province(const char* value);
  void set_province(const char* value, size_t size);
  std::string* mutable_province();
  std::string* release_province();
  void set_allocated_province(std::string* province);
  private:
  const std::string& _internal_province() const;
  void _internal_set_province(const std::string& value);
  std::string* _internal_mutable_province();
  public:

  // string type = 5;
  void clear_type();
  const std::string& type() const;
  void set_type(const std::string& value);
  void set_type(std::string&& value);
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  std::string* mutable_type();
  std::string* release_type();
  void set_allocated_type(std::string* type);
  private:
  const std::string& _internal_type() const;
  void _internal_set_type(const std::string& value);
  std::string* _internal_mutable_type();
  public:

  // string pici = 6;
  void clear_pici();
  const std::string& pici() const;
  void set_pici(const std::string& value);
  void set_pici(std::string&& value);
  void set_pici(const char* value);
  void set_pici(const char* value, size_t size);
  std::string* mutable_pici();
  std::string* release_pici();
  void set_allocated_pici(std::string* pici);
  private:
  const std::string& _internal_pici() const;
  void _internal_set_pici(const std::string& value);
  std::string* _internal_mutable_pici();
  public:

  // string cengci = 7;
  void clear_cengci();
  const std::string& cengci() const;
  void set_cengci(const std::string& value);
  void set_cengci(std::string&& value);
  void set_cengci(const char* value);
  void set_cengci(const char* value, size_t size);
  std::string* mutable_cengci();
  std::string* release_cengci();
  void set_allocated_cengci(std::string* cengci);
  private:
  const std::string& _internal_cengci() const;
  void _internal_set_cengci(const std::string& value);
  std::string* _internal_mutable_cengci();
  public:

  // string sortFile = 12;
  void clear_sortfile();
  const std::string& sortfile() const;
  void set_sortfile(const std::string& value);
  void set_sortfile(std::string&& value);
  void set_sortfile(const char* value);
  void set_sortfile(const char* value, size_t size);
  std::string* mutable_sortfile();
  std::string* release_sortfile();
  void set_allocated_sortfile(std::string* sortfile);
  private:
  const std::string& _internal_sortfile() const;
  void _internal_set_sortfile(const std::string& value);
  std::string* _internal_mutable_sortfile();
  public:

  // int32 score = 2;
  void clear_score();
  ::PROTOBUF_NAMESPACE_ID::int32 score() const;
  void set_score(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_score() const;
  void _internal_set_score(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 weishu = 3;
  void clear_weishu();
  ::PROTOBUF_NAMESPACE_ID::int32 weishu() const;
  void set_weishu(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_weishu() const;
  void _internal_set_weishu(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 startScore = 8;
  void clear_startscore();
  ::PROTOBUF_NAMESPACE_ID::int32 startscore() const;
  void set_startscore(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_startscore() const;
  void _internal_set_startscore(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 endScore = 9;
  void clear_endscore();
  ::PROTOBUF_NAMESPACE_ID::int32 endscore() const;
  void set_endscore(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_endscore() const;
  void _internal_set_endscore(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 page = 10;
  void clear_page();
  ::PROTOBUF_NAMESPACE_ID::int32 page() const;
  void set_page(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_page() const;
  void _internal_set_page(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 limit = 11;
  void clear_limit();
  ::PROTOBUF_NAMESPACE_ID::int32 limit() const;
  void set_limit(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_limit() const;
  void _internal_set_limit(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:C_GetZntjInfoList_3000)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr kelei_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr province_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr type_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pici_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr cengci_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sortfile_;
  ::PROTOBUF_NAMESPACE_ID::int32 score_;
  ::PROTOBUF_NAMESPACE_ID::int32 weishu_;
  ::PROTOBUF_NAMESPACE_ID::int32 startscore_;
  ::PROTOBUF_NAMESPACE_ID::int32 endscore_;
  ::PROTOBUF_NAMESPACE_ID::int32 page_;
  ::PROTOBUF_NAMESPACE_ID::int32 limit_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class S_GetZntjInfoList_3001 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:S_GetZntjInfoList_3001) */ {
 public:
  S_GetZntjInfoList_3001();
  virtual ~S_GetZntjInfoList_3001();

  S_GetZntjInfoList_3001(const S_GetZntjInfoList_3001& from);
  S_GetZntjInfoList_3001(S_GetZntjInfoList_3001&& from) noexcept
    : S_GetZntjInfoList_3001() {
    *this = ::std::move(from);
  }

  inline S_GetZntjInfoList_3001& operator=(const S_GetZntjInfoList_3001& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_GetZntjInfoList_3001& operator=(S_GetZntjInfoList_3001&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const S_GetZntjInfoList_3001& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S_GetZntjInfoList_3001* internal_default_instance() {
    return reinterpret_cast<const S_GetZntjInfoList_3001*>(
               &_S_GetZntjInfoList_3001_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  friend void swap(S_GetZntjInfoList_3001& a, S_GetZntjInfoList_3001& b) {
    a.Swap(&b);
  }
  inline void Swap(S_GetZntjInfoList_3001* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline S_GetZntjInfoList_3001* New() const final {
    return CreateMaybeMessage<S_GetZntjInfoList_3001>(nullptr);
  }

  S_GetZntjInfoList_3001* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<S_GetZntjInfoList_3001>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const S_GetZntjInfoList_3001& from);
  void MergeFrom(const S_GetZntjInfoList_3001& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S_GetZntjInfoList_3001* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "S_GetZntjInfoList_3001";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kZntjInfoFieldNumber = 1,
    kPagingInfoFieldNumber = 2,
  };
  // repeated .ZntjInfo zntjInfo = 1;
  int zntjinfo_size() const;
  private:
  int _internal_zntjinfo_size() const;
  public:
  void clear_zntjinfo();
  ::ZntjInfo* mutable_zntjinfo(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ZntjInfo >*
      mutable_zntjinfo();
  private:
  const ::ZntjInfo& _internal_zntjinfo(int index) const;
  ::ZntjInfo* _internal_add_zntjinfo();
  public:
  const ::ZntjInfo& zntjinfo(int index) const;
  ::ZntjInfo* add_zntjinfo();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ZntjInfo >&
      zntjinfo() const;

  // .PagingInfo pagingInfo = 2;
  bool has_paginginfo() const;
  private:
  bool _internal_has_paginginfo() const;
  public:
  void clear_paginginfo();
  const ::PagingInfo& paginginfo() const;
  ::PagingInfo* release_paginginfo();
  ::PagingInfo* mutable_paginginfo();
  void set_allocated_paginginfo(::PagingInfo* paginginfo);
  private:
  const ::PagingInfo& _internal_paginginfo() const;
  ::PagingInfo* _internal_mutable_paginginfo();
  public:

  // @@protoc_insertion_point(class_scope:S_GetZntjInfoList_3001)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ZntjInfo > zntjinfo_;
  ::PagingInfo* paginginfo_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class C_GetSeachSchoolList_3002 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:C_GetSeachSchoolList_3002) */ {
 public:
  C_GetSeachSchoolList_3002();
  virtual ~C_GetSeachSchoolList_3002();

  C_GetSeachSchoolList_3002(const C_GetSeachSchoolList_3002& from);
  C_GetSeachSchoolList_3002(C_GetSeachSchoolList_3002&& from) noexcept
    : C_GetSeachSchoolList_3002() {
    *this = ::std::move(from);
  }

  inline C_GetSeachSchoolList_3002& operator=(const C_GetSeachSchoolList_3002& from) {
    CopyFrom(from);
    return *this;
  }
  inline C_GetSeachSchoolList_3002& operator=(C_GetSeachSchoolList_3002&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const C_GetSeachSchoolList_3002& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_GetSeachSchoolList_3002* internal_default_instance() {
    return reinterpret_cast<const C_GetSeachSchoolList_3002*>(
               &_C_GetSeachSchoolList_3002_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  friend void swap(C_GetSeachSchoolList_3002& a, C_GetSeachSchoolList_3002& b) {
    a.Swap(&b);
  }
  inline void Swap(C_GetSeachSchoolList_3002* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline C_GetSeachSchoolList_3002* New() const final {
    return CreateMaybeMessage<C_GetSeachSchoolList_3002>(nullptr);
  }

  C_GetSeachSchoolList_3002* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<C_GetSeachSchoolList_3002>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const C_GetSeachSchoolList_3002& from);
  void MergeFrom(const C_GetSeachSchoolList_3002& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(C_GetSeachSchoolList_3002* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "C_GetSeachSchoolList_3002";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSchoolNameFieldNumber = 1,
    kProvinceFieldNumber = 2,
    kTypeFieldNumber = 3,
    kPiciFieldNumber = 4,
    kCengciFieldNumber = 5,
    kSortFileFieldNumber = 10,
    kStartScoreFieldNumber = 6,
    kEndScoreFieldNumber = 7,
    kPageFieldNumber = 8,
    kLimitFieldNumber = 9,
  };
  // string schoolName = 1;
  void clear_schoolname();
  const std::string& schoolname() const;
  void set_schoolname(const std::string& value);
  void set_schoolname(std::string&& value);
  void set_schoolname(const char* value);
  void set_schoolname(const char* value, size_t size);
  std::string* mutable_schoolname();
  std::string* release_schoolname();
  void set_allocated_schoolname(std::string* schoolname);
  private:
  const std::string& _internal_schoolname() const;
  void _internal_set_schoolname(const std::string& value);
  std::string* _internal_mutable_schoolname();
  public:

  // string province = 2;
  void clear_province();
  const std::string& province() const;
  void set_province(const std::string& value);
  void set_province(std::string&& value);
  void set_province(const char* value);
  void set_province(const char* value, size_t size);
  std::string* mutable_province();
  std::string* release_province();
  void set_allocated_province(std::string* province);
  private:
  const std::string& _internal_province() const;
  void _internal_set_province(const std::string& value);
  std::string* _internal_mutable_province();
  public:

  // string type = 3;
  void clear_type();
  const std::string& type() const;
  void set_type(const std::string& value);
  void set_type(std::string&& value);
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  std::string* mutable_type();
  std::string* release_type();
  void set_allocated_type(std::string* type);
  private:
  const std::string& _internal_type() const;
  void _internal_set_type(const std::string& value);
  std::string* _internal_mutable_type();
  public:

  // string pici = 4;
  void clear_pici();
  const std::string& pici() const;
  void set_pici(const std::string& value);
  void set_pici(std::string&& value);
  void set_pici(const char* value);
  void set_pici(const char* value, size_t size);
  std::string* mutable_pici();
  std::string* release_pici();
  void set_allocated_pici(std::string* pici);
  private:
  const std::string& _internal_pici() const;
  void _internal_set_pici(const std::string& value);
  std::string* _internal_mutable_pici();
  public:

  // string cengci = 5;
  void clear_cengci();
  const std::string& cengci() const;
  void set_cengci(const std::string& value);
  void set_cengci(std::string&& value);
  void set_cengci(const char* value);
  void set_cengci(const char* value, size_t size);
  std::string* mutable_cengci();
  std::string* release_cengci();
  void set_allocated_cengci(std::string* cengci);
  private:
  const std::string& _internal_cengci() const;
  void _internal_set_cengci(const std::string& value);
  std::string* _internal_mutable_cengci();
  public:

  // string sortFile = 10;
  void clear_sortfile();
  const std::string& sortfile() const;
  void set_sortfile(const std::string& value);
  void set_sortfile(std::string&& value);
  void set_sortfile(const char* value);
  void set_sortfile(const char* value, size_t size);
  std::string* mutable_sortfile();
  std::string* release_sortfile();
  void set_allocated_sortfile(std::string* sortfile);
  private:
  const std::string& _internal_sortfile() const;
  void _internal_set_sortfile(const std::string& value);
  std::string* _internal_mutable_sortfile();
  public:

  // int64 startScore = 6;
  void clear_startscore();
  ::PROTOBUF_NAMESPACE_ID::int64 startscore() const;
  void set_startscore(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_startscore() const;
  void _internal_set_startscore(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 endScore = 7;
  void clear_endscore();
  ::PROTOBUF_NAMESPACE_ID::int64 endscore() const;
  void set_endscore(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_endscore() const;
  void _internal_set_endscore(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 page = 8;
  void clear_page();
  ::PROTOBUF_NAMESPACE_ID::int32 page() const;
  void set_page(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_page() const;
  void _internal_set_page(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 limit = 9;
  void clear_limit();
  ::PROTOBUF_NAMESPACE_ID::int32 limit() const;
  void set_limit(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_limit() const;
  void _internal_set_limit(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:C_GetSeachSchoolList_3002)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr schoolname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr province_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr type_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pici_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr cengci_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sortfile_;
  ::PROTOBUF_NAMESPACE_ID::int64 startscore_;
  ::PROTOBUF_NAMESPACE_ID::int64 endscore_;
  ::PROTOBUF_NAMESPACE_ID::int32 page_;
  ::PROTOBUF_NAMESPACE_ID::int32 limit_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class S_GetSeachSchoolList_3003 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:S_GetSeachSchoolList_3003) */ {
 public:
  S_GetSeachSchoolList_3003();
  virtual ~S_GetSeachSchoolList_3003();

  S_GetSeachSchoolList_3003(const S_GetSeachSchoolList_3003& from);
  S_GetSeachSchoolList_3003(S_GetSeachSchoolList_3003&& from) noexcept
    : S_GetSeachSchoolList_3003() {
    *this = ::std::move(from);
  }

  inline S_GetSeachSchoolList_3003& operator=(const S_GetSeachSchoolList_3003& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_GetSeachSchoolList_3003& operator=(S_GetSeachSchoolList_3003&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const S_GetSeachSchoolList_3003& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S_GetSeachSchoolList_3003* internal_default_instance() {
    return reinterpret_cast<const S_GetSeachSchoolList_3003*>(
               &_S_GetSeachSchoolList_3003_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  friend void swap(S_GetSeachSchoolList_3003& a, S_GetSeachSchoolList_3003& b) {
    a.Swap(&b);
  }
  inline void Swap(S_GetSeachSchoolList_3003* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline S_GetSeachSchoolList_3003* New() const final {
    return CreateMaybeMessage<S_GetSeachSchoolList_3003>(nullptr);
  }

  S_GetSeachSchoolList_3003* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<S_GetSeachSchoolList_3003>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const S_GetSeachSchoolList_3003& from);
  void MergeFrom(const S_GetSeachSchoolList_3003& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S_GetSeachSchoolList_3003* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "S_GetSeachSchoolList_3003";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSeachSchoolFieldNumber = 1,
    kPagingInfoFieldNumber = 2,
  };
  // repeated .SeachSchool seachSchool = 1;
  int seachschool_size() const;
  private:
  int _internal_seachschool_size() const;
  public:
  void clear_seachschool();
  ::SeachSchool* mutable_seachschool(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SeachSchool >*
      mutable_seachschool();
  private:
  const ::SeachSchool& _internal_seachschool(int index) const;
  ::SeachSchool* _internal_add_seachschool();
  public:
  const ::SeachSchool& seachschool(int index) const;
  ::SeachSchool* add_seachschool();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SeachSchool >&
      seachschool() const;

  // .PagingInfo pagingInfo = 2;
  bool has_paginginfo() const;
  private:
  bool _internal_has_paginginfo() const;
  public:
  void clear_paginginfo();
  const ::PagingInfo& paginginfo() const;
  ::PagingInfo* release_paginginfo();
  ::PagingInfo* mutable_paginginfo();
  void set_allocated_paginginfo(::PagingInfo* paginginfo);
  private:
  const ::PagingInfo& _internal_paginginfo() const;
  ::PagingInfo* _internal_mutable_paginginfo();
  public:

  // @@protoc_insertion_point(class_scope:S_GetSeachSchoolList_3003)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SeachSchool > seachschool_;
  ::PagingInfo* paginginfo_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class C_GetSeachScoreList_3004 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:C_GetSeachScoreList_3004) */ {
 public:
  C_GetSeachScoreList_3004();
  virtual ~C_GetSeachScoreList_3004();

  C_GetSeachScoreList_3004(const C_GetSeachScoreList_3004& from);
  C_GetSeachScoreList_3004(C_GetSeachScoreList_3004&& from) noexcept
    : C_GetSeachScoreList_3004() {
    *this = ::std::move(from);
  }

  inline C_GetSeachScoreList_3004& operator=(const C_GetSeachScoreList_3004& from) {
    CopyFrom(from);
    return *this;
  }
  inline C_GetSeachScoreList_3004& operator=(C_GetSeachScoreList_3004&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const C_GetSeachScoreList_3004& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_GetSeachScoreList_3004* internal_default_instance() {
    return reinterpret_cast<const C_GetSeachScoreList_3004*>(
               &_C_GetSeachScoreList_3004_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  friend void swap(C_GetSeachScoreList_3004& a, C_GetSeachScoreList_3004& b) {
    a.Swap(&b);
  }
  inline void Swap(C_GetSeachScoreList_3004* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline C_GetSeachScoreList_3004* New() const final {
    return CreateMaybeMessage<C_GetSeachScoreList_3004>(nullptr);
  }

  C_GetSeachScoreList_3004* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<C_GetSeachScoreList_3004>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const C_GetSeachScoreList_3004& from);
  void MergeFrom(const C_GetSeachScoreList_3004& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(C_GetSeachScoreList_3004* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "C_GetSeachScoreList_3004";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSchoolNameFieldNumber = 1,
    kProvinceFieldNumber = 2,
    kTypeFieldNumber = 3,
    kPiciFieldNumber = 4,
    kCengciFieldNumber = 5,
    kSortFileFieldNumber = 10,
    kStartScoreFieldNumber = 6,
    kEndScoreFieldNumber = 7,
    kPageFieldNumber = 8,
    kLimitFieldNumber = 9,
  };
  // string schoolName = 1;
  void clear_schoolname();
  const std::string& schoolname() const;
  void set_schoolname(const std::string& value);
  void set_schoolname(std::string&& value);
  void set_schoolname(const char* value);
  void set_schoolname(const char* value, size_t size);
  std::string* mutable_schoolname();
  std::string* release_schoolname();
  void set_allocated_schoolname(std::string* schoolname);
  private:
  const std::string& _internal_schoolname() const;
  void _internal_set_schoolname(const std::string& value);
  std::string* _internal_mutable_schoolname();
  public:

  // string province = 2;
  void clear_province();
  const std::string& province() const;
  void set_province(const std::string& value);
  void set_province(std::string&& value);
  void set_province(const char* value);
  void set_province(const char* value, size_t size);
  std::string* mutable_province();
  std::string* release_province();
  void set_allocated_province(std::string* province);
  private:
  const std::string& _internal_province() const;
  void _internal_set_province(const std::string& value);
  std::string* _internal_mutable_province();
  public:

  // string type = 3;
  void clear_type();
  const std::string& type() const;
  void set_type(const std::string& value);
  void set_type(std::string&& value);
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  std::string* mutable_type();
  std::string* release_type();
  void set_allocated_type(std::string* type);
  private:
  const std::string& _internal_type() const;
  void _internal_set_type(const std::string& value);
  std::string* _internal_mutable_type();
  public:

  // string pici = 4;
  void clear_pici();
  const std::string& pici() const;
  void set_pici(const std::string& value);
  void set_pici(std::string&& value);
  void set_pici(const char* value);
  void set_pici(const char* value, size_t size);
  std::string* mutable_pici();
  std::string* release_pici();
  void set_allocated_pici(std::string* pici);
  private:
  const std::string& _internal_pici() const;
  void _internal_set_pici(const std::string& value);
  std::string* _internal_mutable_pici();
  public:

  // string cengci = 5;
  void clear_cengci();
  const std::string& cengci() const;
  void set_cengci(const std::string& value);
  void set_cengci(std::string&& value);
  void set_cengci(const char* value);
  void set_cengci(const char* value, size_t size);
  std::string* mutable_cengci();
  std::string* release_cengci();
  void set_allocated_cengci(std::string* cengci);
  private:
  const std::string& _internal_cengci() const;
  void _internal_set_cengci(const std::string& value);
  std::string* _internal_mutable_cengci();
  public:

  // string sortFile = 10;
  void clear_sortfile();
  const std::string& sortfile() const;
  void set_sortfile(const std::string& value);
  void set_sortfile(std::string&& value);
  void set_sortfile(const char* value);
  void set_sortfile(const char* value, size_t size);
  std::string* mutable_sortfile();
  std::string* release_sortfile();
  void set_allocated_sortfile(std::string* sortfile);
  private:
  const std::string& _internal_sortfile() const;
  void _internal_set_sortfile(const std::string& value);
  std::string* _internal_mutable_sortfile();
  public:

  // int64 startScore = 6;
  void clear_startscore();
  ::PROTOBUF_NAMESPACE_ID::int64 startscore() const;
  void set_startscore(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_startscore() const;
  void _internal_set_startscore(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 endScore = 7;
  void clear_endscore();
  ::PROTOBUF_NAMESPACE_ID::int64 endscore() const;
  void set_endscore(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_endscore() const;
  void _internal_set_endscore(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 page = 8;
  void clear_page();
  ::PROTOBUF_NAMESPACE_ID::int32 page() const;
  void set_page(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_page() const;
  void _internal_set_page(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 limit = 9;
  void clear_limit();
  ::PROTOBUF_NAMESPACE_ID::int32 limit() const;
  void set_limit(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_limit() const;
  void _internal_set_limit(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:C_GetSeachScoreList_3004)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr schoolname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr province_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr type_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pici_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr cengci_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sortfile_;
  ::PROTOBUF_NAMESPACE_ID::int64 startscore_;
  ::PROTOBUF_NAMESPACE_ID::int64 endscore_;
  ::PROTOBUF_NAMESPACE_ID::int32 page_;
  ::PROTOBUF_NAMESPACE_ID::int32 limit_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class S_GetSeachScoreList_3005 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:S_GetSeachScoreList_3005) */ {
 public:
  S_GetSeachScoreList_3005();
  virtual ~S_GetSeachScoreList_3005();

  S_GetSeachScoreList_3005(const S_GetSeachScoreList_3005& from);
  S_GetSeachScoreList_3005(S_GetSeachScoreList_3005&& from) noexcept
    : S_GetSeachScoreList_3005() {
    *this = ::std::move(from);
  }

  inline S_GetSeachScoreList_3005& operator=(const S_GetSeachScoreList_3005& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_GetSeachScoreList_3005& operator=(S_GetSeachScoreList_3005&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const S_GetSeachScoreList_3005& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S_GetSeachScoreList_3005* internal_default_instance() {
    return reinterpret_cast<const S_GetSeachScoreList_3005*>(
               &_S_GetSeachScoreList_3005_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  friend void swap(S_GetSeachScoreList_3005& a, S_GetSeachScoreList_3005& b) {
    a.Swap(&b);
  }
  inline void Swap(S_GetSeachScoreList_3005* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline S_GetSeachScoreList_3005* New() const final {
    return CreateMaybeMessage<S_GetSeachScoreList_3005>(nullptr);
  }

  S_GetSeachScoreList_3005* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<S_GetSeachScoreList_3005>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const S_GetSeachScoreList_3005& from);
  void MergeFrom(const S_GetSeachScoreList_3005& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S_GetSeachScoreList_3005* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "S_GetSeachScoreList_3005";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSeachScoreFieldNumber = 1,
    kPagingInfoFieldNumber = 2,
  };
  // repeated .SeachScore seachScore = 1;
  int seachscore_size() const;
  private:
  int _internal_seachscore_size() const;
  public:
  void clear_seachscore();
  ::SeachScore* mutable_seachscore(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SeachScore >*
      mutable_seachscore();
  private:
  const ::SeachScore& _internal_seachscore(int index) const;
  ::SeachScore* _internal_add_seachscore();
  public:
  const ::SeachScore& seachscore(int index) const;
  ::SeachScore* add_seachscore();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SeachScore >&
      seachscore() const;

  // .PagingInfo pagingInfo = 2;
  bool has_paginginfo() const;
  private:
  bool _internal_has_paginginfo() const;
  public:
  void clear_paginginfo();
  const ::PagingInfo& paginginfo() const;
  ::PagingInfo* release_paginginfo();
  ::PagingInfo* mutable_paginginfo();
  void set_allocated_paginginfo(::PagingInfo* paginginfo);
  private:
  const ::PagingInfo& _internal_paginginfo() const;
  ::PagingInfo* _internal_mutable_paginginfo();
  public:

  // @@protoc_insertion_point(class_scope:S_GetSeachScoreList_3005)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SeachScore > seachscore_;
  ::PagingInfo* paginginfo_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class C_GetSeachSKYXList_3006 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:C_GetSeachSKYXList_3006) */ {
 public:
  C_GetSeachSKYXList_3006();
  virtual ~C_GetSeachSKYXList_3006();

  C_GetSeachSKYXList_3006(const C_GetSeachSKYXList_3006& from);
  C_GetSeachSKYXList_3006(C_GetSeachSKYXList_3006&& from) noexcept
    : C_GetSeachSKYXList_3006() {
    *this = ::std::move(from);
  }

  inline C_GetSeachSKYXList_3006& operator=(const C_GetSeachSKYXList_3006& from) {
    CopyFrom(from);
    return *this;
  }
  inline C_GetSeachSKYXList_3006& operator=(C_GetSeachSKYXList_3006&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const C_GetSeachSKYXList_3006& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_GetSeachSKYXList_3006* internal_default_instance() {
    return reinterpret_cast<const C_GetSeachSKYXList_3006*>(
               &_C_GetSeachSKYXList_3006_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  friend void swap(C_GetSeachSKYXList_3006& a, C_GetSeachSKYXList_3006& b) {
    a.Swap(&b);
  }
  inline void Swap(C_GetSeachSKYXList_3006* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline C_GetSeachSKYXList_3006* New() const final {
    return CreateMaybeMessage<C_GetSeachSKYXList_3006>(nullptr);
  }

  C_GetSeachSKYXList_3006* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<C_GetSeachSKYXList_3006>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const C_GetSeachSKYXList_3006& from);
  void MergeFrom(const C_GetSeachSKYXList_3006& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(C_GetSeachSKYXList_3006* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "C_GetSeachSKYXList_3006";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kProvinceFieldNumber = 1,
    kKeleiFieldNumber = 2,
    kYearsFieldNumber = 3,
    kPageFieldNumber = 4,
    kLimitFieldNumber = 5,
  };
  // string province = 1;
  void clear_province();
  const std::string& province() const;
  void set_province(const std::string& value);
  void set_province(std::string&& value);
  void set_province(const char* value);
  void set_province(const char* value, size_t size);
  std::string* mutable_province();
  std::string* release_province();
  void set_allocated_province(std::string* province);
  private:
  const std::string& _internal_province() const;
  void _internal_set_province(const std::string& value);
  std::string* _internal_mutable_province();
  public:

  // string kelei = 2;
  void clear_kelei();
  const std::string& kelei() const;
  void set_kelei(const std::string& value);
  void set_kelei(std::string&& value);
  void set_kelei(const char* value);
  void set_kelei(const char* value, size_t size);
  std::string* mutable_kelei();
  std::string* release_kelei();
  void set_allocated_kelei(std::string* kelei);
  private:
  const std::string& _internal_kelei() const;
  void _internal_set_kelei(const std::string& value);
  std::string* _internal_mutable_kelei();
  public:

  // string years = 3;
  void clear_years();
  const std::string& years() const;
  void set_years(const std::string& value);
  void set_years(std::string&& value);
  void set_years(const char* value);
  void set_years(const char* value, size_t size);
  std::string* mutable_years();
  std::string* release_years();
  void set_allocated_years(std::string* years);
  private:
  const std::string& _internal_years() const;
  void _internal_set_years(const std::string& value);
  std::string* _internal_mutable_years();
  public:

  // int32 page = 4;
  void clear_page();
  ::PROTOBUF_NAMESPACE_ID::int32 page() const;
  void set_page(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_page() const;
  void _internal_set_page(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 limit = 5;
  void clear_limit();
  ::PROTOBUF_NAMESPACE_ID::int32 limit() const;
  void set_limit(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_limit() const;
  void _internal_set_limit(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:C_GetSeachSKYXList_3006)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr province_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr kelei_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr years_;
  ::PROTOBUF_NAMESPACE_ID::int32 page_;
  ::PROTOBUF_NAMESPACE_ID::int32 limit_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class S_GetSeachSKYXList_3007 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:S_GetSeachSKYXList_3007) */ {
 public:
  S_GetSeachSKYXList_3007();
  virtual ~S_GetSeachSKYXList_3007();

  S_GetSeachSKYXList_3007(const S_GetSeachSKYXList_3007& from);
  S_GetSeachSKYXList_3007(S_GetSeachSKYXList_3007&& from) noexcept
    : S_GetSeachSKYXList_3007() {
    *this = ::std::move(from);
  }

  inline S_GetSeachSKYXList_3007& operator=(const S_GetSeachSKYXList_3007& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_GetSeachSKYXList_3007& operator=(S_GetSeachSKYXList_3007&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const S_GetSeachSKYXList_3007& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S_GetSeachSKYXList_3007* internal_default_instance() {
    return reinterpret_cast<const S_GetSeachSKYXList_3007*>(
               &_S_GetSeachSKYXList_3007_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  friend void swap(S_GetSeachSKYXList_3007& a, S_GetSeachSKYXList_3007& b) {
    a.Swap(&b);
  }
  inline void Swap(S_GetSeachSKYXList_3007* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline S_GetSeachSKYXList_3007* New() const final {
    return CreateMaybeMessage<S_GetSeachSKYXList_3007>(nullptr);
  }

  S_GetSeachSKYXList_3007* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<S_GetSeachSKYXList_3007>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const S_GetSeachSKYXList_3007& from);
  void MergeFrom(const S_GetSeachSKYXList_3007& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S_GetSeachSKYXList_3007* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "S_GetSeachSKYXList_3007";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSeachSKYXFieldNumber = 1,
    kPagingInfoFieldNumber = 2,
  };
  // repeated .SeachSKYX seachSKYX = 1;
  int seachskyx_size() const;
  private:
  int _internal_seachskyx_size() const;
  public:
  void clear_seachskyx();
  ::SeachSKYX* mutable_seachskyx(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SeachSKYX >*
      mutable_seachskyx();
  private:
  const ::SeachSKYX& _internal_seachskyx(int index) const;
  ::SeachSKYX* _internal_add_seachskyx();
  public:
  const ::SeachSKYX& seachskyx(int index) const;
  ::SeachSKYX* add_seachskyx();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SeachSKYX >&
      seachskyx() const;

  // .PagingInfo pagingInfo = 2;
  bool has_paginginfo() const;
  private:
  bool _internal_has_paginginfo() const;
  public:
  void clear_paginginfo();
  const ::PagingInfo& paginginfo() const;
  ::PagingInfo* release_paginginfo();
  ::PagingInfo* mutable_paginginfo();
  void set_allocated_paginginfo(::PagingInfo* paginginfo);
  private:
  const ::PagingInfo& _internal_paginginfo() const;
  ::PagingInfo* _internal_mutable_paginginfo();
  public:

  // @@protoc_insertion_point(class_scope:S_GetSeachSKYXList_3007)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SeachSKYX > seachskyx_;
  ::PagingInfo* paginginfo_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class C_GetSeachYYPMList_3008 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:C_GetSeachYYPMList_3008) */ {
 public:
  C_GetSeachYYPMList_3008();
  virtual ~C_GetSeachYYPMList_3008();

  C_GetSeachYYPMList_3008(const C_GetSeachYYPMList_3008& from);
  C_GetSeachYYPMList_3008(C_GetSeachYYPMList_3008&& from) noexcept
    : C_GetSeachYYPMList_3008() {
    *this = ::std::move(from);
  }

  inline C_GetSeachYYPMList_3008& operator=(const C_GetSeachYYPMList_3008& from) {
    CopyFrom(from);
    return *this;
  }
  inline C_GetSeachYYPMList_3008& operator=(C_GetSeachYYPMList_3008&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const C_GetSeachYYPMList_3008& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_GetSeachYYPMList_3008* internal_default_instance() {
    return reinterpret_cast<const C_GetSeachYYPMList_3008*>(
               &_C_GetSeachYYPMList_3008_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  friend void swap(C_GetSeachYYPMList_3008& a, C_GetSeachYYPMList_3008& b) {
    a.Swap(&b);
  }
  inline void Swap(C_GetSeachYYPMList_3008* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline C_GetSeachYYPMList_3008* New() const final {
    return CreateMaybeMessage<C_GetSeachYYPMList_3008>(nullptr);
  }

  C_GetSeachYYPMList_3008* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<C_GetSeachYYPMList_3008>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const C_GetSeachYYPMList_3008& from);
  void MergeFrom(const C_GetSeachYYPMList_3008& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(C_GetSeachYYPMList_3008* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "C_GetSeachYYPMList_3008";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kXueliFieldNumber = 2,
    kTypeFieldNumber = 3,
    kCengciFieldNumber = 4,
    kDiquFieldNumber = 9,
    kSortFileFieldNumber = 10,
    kStartScoreFieldNumber = 5,
    kEndScoreFieldNumber = 6,
    kPageFieldNumber = 7,
    kLimitFieldNumber = 8,
  };
  // string name = 1;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string xueli = 2;
  void clear_xueli();
  const std::string& xueli() const;
  void set_xueli(const std::string& value);
  void set_xueli(std::string&& value);
  void set_xueli(const char* value);
  void set_xueli(const char* value, size_t size);
  std::string* mutable_xueli();
  std::string* release_xueli();
  void set_allocated_xueli(std::string* xueli);
  private:
  const std::string& _internal_xueli() const;
  void _internal_set_xueli(const std::string& value);
  std::string* _internal_mutable_xueli();
  public:

  // string type = 3;
  void clear_type();
  const std::string& type() const;
  void set_type(const std::string& value);
  void set_type(std::string&& value);
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  std::string* mutable_type();
  std::string* release_type();
  void set_allocated_type(std::string* type);
  private:
  const std::string& _internal_type() const;
  void _internal_set_type(const std::string& value);
  std::string* _internal_mutable_type();
  public:

  // string cengci = 4;
  void clear_cengci();
  const std::string& cengci() const;
  void set_cengci(const std::string& value);
  void set_cengci(std::string&& value);
  void set_cengci(const char* value);
  void set_cengci(const char* value, size_t size);
  std::string* mutable_cengci();
  std::string* release_cengci();
  void set_allocated_cengci(std::string* cengci);
  private:
  const std::string& _internal_cengci() const;
  void _internal_set_cengci(const std::string& value);
  std::string* _internal_mutable_cengci();
  public:

  // string diqu = 9;
  void clear_diqu();
  const std::string& diqu() const;
  void set_diqu(const std::string& value);
  void set_diqu(std::string&& value);
  void set_diqu(const char* value);
  void set_diqu(const char* value, size_t size);
  std::string* mutable_diqu();
  std::string* release_diqu();
  void set_allocated_diqu(std::string* diqu);
  private:
  const std::string& _internal_diqu() const;
  void _internal_set_diqu(const std::string& value);
  std::string* _internal_mutable_diqu();
  public:

  // string sortFile = 10;
  void clear_sortfile();
  const std::string& sortfile() const;
  void set_sortfile(const std::string& value);
  void set_sortfile(std::string&& value);
  void set_sortfile(const char* value);
  void set_sortfile(const char* value, size_t size);
  std::string* mutable_sortfile();
  std::string* release_sortfile();
  void set_allocated_sortfile(std::string* sortfile);
  private:
  const std::string& _internal_sortfile() const;
  void _internal_set_sortfile(const std::string& value);
  std::string* _internal_mutable_sortfile();
  public:

  // int64 startScore = 5;
  void clear_startscore();
  ::PROTOBUF_NAMESPACE_ID::int64 startscore() const;
  void set_startscore(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_startscore() const;
  void _internal_set_startscore(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 endScore = 6;
  void clear_endscore();
  ::PROTOBUF_NAMESPACE_ID::int64 endscore() const;
  void set_endscore(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_endscore() const;
  void _internal_set_endscore(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 page = 7;
  void clear_page();
  ::PROTOBUF_NAMESPACE_ID::int32 page() const;
  void set_page(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_page() const;
  void _internal_set_page(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 limit = 8;
  void clear_limit();
  ::PROTOBUF_NAMESPACE_ID::int32 limit() const;
  void set_limit(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_limit() const;
  void _internal_set_limit(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:C_GetSeachYYPMList_3008)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr xueli_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr type_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr cengci_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr diqu_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sortfile_;
  ::PROTOBUF_NAMESPACE_ID::int64 startscore_;
  ::PROTOBUF_NAMESPACE_ID::int64 endscore_;
  ::PROTOBUF_NAMESPACE_ID::int32 page_;
  ::PROTOBUF_NAMESPACE_ID::int32 limit_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class S_GetSeachYYPMList_3009 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:S_GetSeachYYPMList_3009) */ {
 public:
  S_GetSeachYYPMList_3009();
  virtual ~S_GetSeachYYPMList_3009();

  S_GetSeachYYPMList_3009(const S_GetSeachYYPMList_3009& from);
  S_GetSeachYYPMList_3009(S_GetSeachYYPMList_3009&& from) noexcept
    : S_GetSeachYYPMList_3009() {
    *this = ::std::move(from);
  }

  inline S_GetSeachYYPMList_3009& operator=(const S_GetSeachYYPMList_3009& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_GetSeachYYPMList_3009& operator=(S_GetSeachYYPMList_3009&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const S_GetSeachYYPMList_3009& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S_GetSeachYYPMList_3009* internal_default_instance() {
    return reinterpret_cast<const S_GetSeachYYPMList_3009*>(
               &_S_GetSeachYYPMList_3009_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  friend void swap(S_GetSeachYYPMList_3009& a, S_GetSeachYYPMList_3009& b) {
    a.Swap(&b);
  }
  inline void Swap(S_GetSeachYYPMList_3009* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline S_GetSeachYYPMList_3009* New() const final {
    return CreateMaybeMessage<S_GetSeachYYPMList_3009>(nullptr);
  }

  S_GetSeachYYPMList_3009* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<S_GetSeachYYPMList_3009>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const S_GetSeachYYPMList_3009& from);
  void MergeFrom(const S_GetSeachYYPMList_3009& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S_GetSeachYYPMList_3009* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "S_GetSeachYYPMList_3009";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSeachYYPMFieldNumber = 1,
    kPagingInfoFieldNumber = 2,
  };
  // repeated .SeachYYPM SeachYYPM = 1;
  int seachyypm_size() const;
  private:
  int _internal_seachyypm_size() const;
  public:
  void clear_seachyypm();
  ::SeachYYPM* mutable_seachyypm(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SeachYYPM >*
      mutable_seachyypm();
  private:
  const ::SeachYYPM& _internal_seachyypm(int index) const;
  ::SeachYYPM* _internal_add_seachyypm();
  public:
  const ::SeachYYPM& seachyypm(int index) const;
  ::SeachYYPM* add_seachyypm();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SeachYYPM >&
      seachyypm() const;

  // .PagingInfo pagingInfo = 2;
  bool has_paginginfo() const;
  private:
  bool _internal_has_paginginfo() const;
  public:
  void clear_paginginfo();
  const ::PagingInfo& paginginfo() const;
  ::PagingInfo* release_paginginfo();
  ::PagingInfo* mutable_paginginfo();
  void set_allocated_paginginfo(::PagingInfo* paginginfo);
  private:
  const ::PagingInfo& _internal_paginginfo() const;
  ::PagingInfo* _internal_mutable_paginginfo();
  public:

  // @@protoc_insertion_point(class_scope:S_GetSeachYYPMList_3009)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SeachYYPM > seachyypm_;
  ::PagingInfo* paginginfo_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class C_GetZydqList_3010 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:C_GetZydqList_3010) */ {
 public:
  C_GetZydqList_3010();
  virtual ~C_GetZydqList_3010();

  C_GetZydqList_3010(const C_GetZydqList_3010& from);
  C_GetZydqList_3010(C_GetZydqList_3010&& from) noexcept
    : C_GetZydqList_3010() {
    *this = ::std::move(from);
  }

  inline C_GetZydqList_3010& operator=(const C_GetZydqList_3010& from) {
    CopyFrom(from);
    return *this;
  }
  inline C_GetZydqList_3010& operator=(C_GetZydqList_3010&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const C_GetZydqList_3010& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_GetZydqList_3010* internal_default_instance() {
    return reinterpret_cast<const C_GetZydqList_3010*>(
               &_C_GetZydqList_3010_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    58;

  friend void swap(C_GetZydqList_3010& a, C_GetZydqList_3010& b) {
    a.Swap(&b);
  }
  inline void Swap(C_GetZydqList_3010* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline C_GetZydqList_3010* New() const final {
    return CreateMaybeMessage<C_GetZydqList_3010>(nullptr);
  }

  C_GetZydqList_3010* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<C_GetZydqList_3010>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const C_GetZydqList_3010& from);
  void MergeFrom(const C_GetZydqList_3010& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(C_GetZydqList_3010* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "C_GetZydqList_3010";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kZYNameFieldNumber = 1,
    kPiciFieldNumber = 2,
    kTypeFieldNumber = 3,
    kSchoolIsAllFieldNumber = 4,
    kPageFieldNumber = 5,
    kLimitFieldNumber = 6,
  };
  // string zYName = 1;
  void clear_zyname();
  const std::string& zyname() const;
  void set_zyname(const std::string& value);
  void set_zyname(std::string&& value);
  void set_zyname(const char* value);
  void set_zyname(const char* value, size_t size);
  std::string* mutable_zyname();
  std::string* release_zyname();
  void set_allocated_zyname(std::string* zyname);
  private:
  const std::string& _internal_zyname() const;
  void _internal_set_zyname(const std::string& value);
  std::string* _internal_mutable_zyname();
  public:

  // string pici = 2;
  void clear_pici();
  const std::string& pici() const;
  void set_pici(const std::string& value);
  void set_pici(std::string&& value);
  void set_pici(const char* value);
  void set_pici(const char* value, size_t size);
  std::string* mutable_pici();
  std::string* release_pici();
  void set_allocated_pici(std::string* pici);
  private:
  const std::string& _internal_pici() const;
  void _internal_set_pici(const std::string& value);
  std::string* _internal_mutable_pici();
  public:

  // string type = 3;
  void clear_type();
  const std::string& type() const;
  void set_type(const std::string& value);
  void set_type(std::string&& value);
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  std::string* mutable_type();
  std::string* release_type();
  void set_allocated_type(std::string* type);
  private:
  const std::string& _internal_type() const;
  void _internal_set_type(const std::string& value);
  std::string* _internal_mutable_type();
  public:

  // int32 schoolIsAll = 4;
  void clear_schoolisall();
  ::PROTOBUF_NAMESPACE_ID::int32 schoolisall() const;
  void set_schoolisall(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_schoolisall() const;
  void _internal_set_schoolisall(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 page = 5;
  void clear_page();
  ::PROTOBUF_NAMESPACE_ID::int32 page() const;
  void set_page(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_page() const;
  void _internal_set_page(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 limit = 6;
  void clear_limit();
  ::PROTOBUF_NAMESPACE_ID::int32 limit() const;
  void set_limit(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_limit() const;
  void _internal_set_limit(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:C_GetZydqList_3010)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr zyname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pici_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr type_;
  ::PROTOBUF_NAMESPACE_ID::int32 schoolisall_;
  ::PROTOBUF_NAMESPACE_ID::int32 page_;
  ::PROTOBUF_NAMESPACE_ID::int32 limit_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class S_GetZydqList_3011 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:S_GetZydqList_3011) */ {
 public:
  S_GetZydqList_3011();
  virtual ~S_GetZydqList_3011();

  S_GetZydqList_3011(const S_GetZydqList_3011& from);
  S_GetZydqList_3011(S_GetZydqList_3011&& from) noexcept
    : S_GetZydqList_3011() {
    *this = ::std::move(from);
  }

  inline S_GetZydqList_3011& operator=(const S_GetZydqList_3011& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_GetZydqList_3011& operator=(S_GetZydqList_3011&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const S_GetZydqList_3011& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S_GetZydqList_3011* internal_default_instance() {
    return reinterpret_cast<const S_GetZydqList_3011*>(
               &_S_GetZydqList_3011_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  friend void swap(S_GetZydqList_3011& a, S_GetZydqList_3011& b) {
    a.Swap(&b);
  }
  inline void Swap(S_GetZydqList_3011* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline S_GetZydqList_3011* New() const final {
    return CreateMaybeMessage<S_GetZydqList_3011>(nullptr);
  }

  S_GetZydqList_3011* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<S_GetZydqList_3011>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const S_GetZydqList_3011& from);
  void MergeFrom(const S_GetZydqList_3011& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S_GetZydqList_3011* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "S_GetZydqList_3011";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXkmlFieldNumber = 1,
    kPagingInfoFieldNumber = 2,
  };
  // repeated .Xkml xkml = 1;
  int xkml_size() const;
  private:
  int _internal_xkml_size() const;
  public:
  void clear_xkml();
  ::Xkml* mutable_xkml(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Xkml >*
      mutable_xkml();
  private:
  const ::Xkml& _internal_xkml(int index) const;
  ::Xkml* _internal_add_xkml();
  public:
  const ::Xkml& xkml(int index) const;
  ::Xkml* add_xkml();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Xkml >&
      xkml() const;

  // .PagingInfo pagingInfo = 2;
  bool has_paginginfo() const;
  private:
  bool _internal_has_paginginfo() const;
  public:
  void clear_paginginfo();
  const ::PagingInfo& paginginfo() const;
  ::PagingInfo* release_paginginfo();
  ::PagingInfo* mutable_paginginfo();
  void set_allocated_paginginfo(::PagingInfo* paginginfo);
  private:
  const ::PagingInfo& _internal_paginginfo() const;
  ::PagingInfo* _internal_mutable_paginginfo();
  public:

  // @@protoc_insertion_point(class_scope:S_GetZydqList_3011)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Xkml > xkml_;
  ::PagingInfo* paginginfo_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class C_GetSeachFSXZYList_3012 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:C_GetSeachFSXZYList_3012) */ {
 public:
  C_GetSeachFSXZYList_3012();
  virtual ~C_GetSeachFSXZYList_3012();

  C_GetSeachFSXZYList_3012(const C_GetSeachFSXZYList_3012& from);
  C_GetSeachFSXZYList_3012(C_GetSeachFSXZYList_3012&& from) noexcept
    : C_GetSeachFSXZYList_3012() {
    *this = ::std::move(from);
  }

  inline C_GetSeachFSXZYList_3012& operator=(const C_GetSeachFSXZYList_3012& from) {
    CopyFrom(from);
    return *this;
  }
  inline C_GetSeachFSXZYList_3012& operator=(C_GetSeachFSXZYList_3012&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const C_GetSeachFSXZYList_3012& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_GetSeachFSXZYList_3012* internal_default_instance() {
    return reinterpret_cast<const C_GetSeachFSXZYList_3012*>(
               &_C_GetSeachFSXZYList_3012_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    60;

  friend void swap(C_GetSeachFSXZYList_3012& a, C_GetSeachFSXZYList_3012& b) {
    a.Swap(&b);
  }
  inline void Swap(C_GetSeachFSXZYList_3012* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline C_GetSeachFSXZYList_3012* New() const final {
    return CreateMaybeMessage<C_GetSeachFSXZYList_3012>(nullptr);
  }

  C_GetSeachFSXZYList_3012* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<C_GetSeachFSXZYList_3012>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const C_GetSeachFSXZYList_3012& from);
  void MergeFrom(const C_GetSeachFSXZYList_3012& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(C_GetSeachFSXZYList_3012* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "C_GetSeachFSXZYList_3012";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeleiFieldNumber = 1,
    kZyNameFieldNumber = 2,
    kProvinceFieldNumber = 3,
    kTypeFieldNumber = 4,
    kPiciFieldNumber = 5,
    kXueliFieldNumber = 6,
    kKemuFieldNumber = 7,
    kSortFileFieldNumber = 13,
    kSchoolIsAllFieldNumber = 8,
    kStartScoreFieldNumber = 9,
    kEndScoreFieldNumber = 10,
    kPageFieldNumber = 11,
    kLimitFieldNumber = 12,
  };
  // string kelei = 1;
  void clear_kelei();
  const std::string& kelei() const;
  void set_kelei(const std::string& value);
  void set_kelei(std::string&& value);
  void set_kelei(const char* value);
  void set_kelei(const char* value, size_t size);
  std::string* mutable_kelei();
  std::string* release_kelei();
  void set_allocated_kelei(std::string* kelei);
  private:
  const std::string& _internal_kelei() const;
  void _internal_set_kelei(const std::string& value);
  std::string* _internal_mutable_kelei();
  public:

  // string zyName = 2;
  void clear_zyname();
  const std::string& zyname() const;
  void set_zyname(const std::string& value);
  void set_zyname(std::string&& value);
  void set_zyname(const char* value);
  void set_zyname(const char* value, size_t size);
  std::string* mutable_zyname();
  std::string* release_zyname();
  void set_allocated_zyname(std::string* zyname);
  private:
  const std::string& _internal_zyname() const;
  void _internal_set_zyname(const std::string& value);
  std::string* _internal_mutable_zyname();
  public:

  // string province = 3;
  void clear_province();
  const std::string& province() const;
  void set_province(const std::string& value);
  void set_province(std::string&& value);
  void set_province(const char* value);
  void set_province(const char* value, size_t size);
  std::string* mutable_province();
  std::string* release_province();
  void set_allocated_province(std::string* province);
  private:
  const std::string& _internal_province() const;
  void _internal_set_province(const std::string& value);
  std::string* _internal_mutable_province();
  public:

  // string type = 4;
  void clear_type();
  const std::string& type() const;
  void set_type(const std::string& value);
  void set_type(std::string&& value);
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  std::string* mutable_type();
  std::string* release_type();
  void set_allocated_type(std::string* type);
  private:
  const std::string& _internal_type() const;
  void _internal_set_type(const std::string& value);
  std::string* _internal_mutable_type();
  public:

  // string pici = 5;
  void clear_pici();
  const std::string& pici() const;
  void set_pici(const std::string& value);
  void set_pici(std::string&& value);
  void set_pici(const char* value);
  void set_pici(const char* value, size_t size);
  std::string* mutable_pici();
  std::string* release_pici();
  void set_allocated_pici(std::string* pici);
  private:
  const std::string& _internal_pici() const;
  void _internal_set_pici(const std::string& value);
  std::string* _internal_mutable_pici();
  public:

  // string xueli = 6;
  void clear_xueli();
  const std::string& xueli() const;
  void set_xueli(const std::string& value);
  void set_xueli(std::string&& value);
  void set_xueli(const char* value);
  void set_xueli(const char* value, size_t size);
  std::string* mutable_xueli();
  std::string* release_xueli();
  void set_allocated_xueli(std::string* xueli);
  private:
  const std::string& _internal_xueli() const;
  void _internal_set_xueli(const std::string& value);
  std::string* _internal_mutable_xueli();
  public:

  // string kemu = 7;
  void clear_kemu();
  const std::string& kemu() const;
  void set_kemu(const std::string& value);
  void set_kemu(std::string&& value);
  void set_kemu(const char* value);
  void set_kemu(const char* value, size_t size);
  std::string* mutable_kemu();
  std::string* release_kemu();
  void set_allocated_kemu(std::string* kemu);
  private:
  const std::string& _internal_kemu() const;
  void _internal_set_kemu(const std::string& value);
  std::string* _internal_mutable_kemu();
  public:

  // string sortFile = 13;
  void clear_sortfile();
  const std::string& sortfile() const;
  void set_sortfile(const std::string& value);
  void set_sortfile(std::string&& value);
  void set_sortfile(const char* value);
  void set_sortfile(const char* value, size_t size);
  std::string* mutable_sortfile();
  std::string* release_sortfile();
  void set_allocated_sortfile(std::string* sortfile);
  private:
  const std::string& _internal_sortfile() const;
  void _internal_set_sortfile(const std::string& value);
  std::string* _internal_mutable_sortfile();
  public:

  // int32 schoolIsAll = 8;
  void clear_schoolisall();
  ::PROTOBUF_NAMESPACE_ID::int32 schoolisall() const;
  void set_schoolisall(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_schoolisall() const;
  void _internal_set_schoolisall(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 startScore = 9;
  void clear_startscore();
  ::PROTOBUF_NAMESPACE_ID::int32 startscore() const;
  void set_startscore(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_startscore() const;
  void _internal_set_startscore(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 endScore = 10;
  void clear_endscore();
  ::PROTOBUF_NAMESPACE_ID::int32 endscore() const;
  void set_endscore(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_endscore() const;
  void _internal_set_endscore(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 page = 11;
  void clear_page();
  ::PROTOBUF_NAMESPACE_ID::int32 page() const;
  void set_page(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_page() const;
  void _internal_set_page(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 limit = 12;
  void clear_limit();
  ::PROTOBUF_NAMESPACE_ID::int32 limit() const;
  void set_limit(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_limit() const;
  void _internal_set_limit(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:C_GetSeachFSXZYList_3012)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr kelei_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr zyname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr province_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr type_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pici_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr xueli_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr kemu_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sortfile_;
  ::PROTOBUF_NAMESPACE_ID::int32 schoolisall_;
  ::PROTOBUF_NAMESPACE_ID::int32 startscore_;
  ::PROTOBUF_NAMESPACE_ID::int32 endscore_;
  ::PROTOBUF_NAMESPACE_ID::int32 page_;
  ::PROTOBUF_NAMESPACE_ID::int32 limit_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class S_GetSeachFSXZYList_3013 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:S_GetSeachFSXZYList_3013) */ {
 public:
  S_GetSeachFSXZYList_3013();
  virtual ~S_GetSeachFSXZYList_3013();

  S_GetSeachFSXZYList_3013(const S_GetSeachFSXZYList_3013& from);
  S_GetSeachFSXZYList_3013(S_GetSeachFSXZYList_3013&& from) noexcept
    : S_GetSeachFSXZYList_3013() {
    *this = ::std::move(from);
  }

  inline S_GetSeachFSXZYList_3013& operator=(const S_GetSeachFSXZYList_3013& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_GetSeachFSXZYList_3013& operator=(S_GetSeachFSXZYList_3013&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const S_GetSeachFSXZYList_3013& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S_GetSeachFSXZYList_3013* internal_default_instance() {
    return reinterpret_cast<const S_GetSeachFSXZYList_3013*>(
               &_S_GetSeachFSXZYList_3013_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    61;

  friend void swap(S_GetSeachFSXZYList_3013& a, S_GetSeachFSXZYList_3013& b) {
    a.Swap(&b);
  }
  inline void Swap(S_GetSeachFSXZYList_3013* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline S_GetSeachFSXZYList_3013* New() const final {
    return CreateMaybeMessage<S_GetSeachFSXZYList_3013>(nullptr);
  }

  S_GetSeachFSXZYList_3013* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<S_GetSeachFSXZYList_3013>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const S_GetSeachFSXZYList_3013& from);
  void MergeFrom(const S_GetSeachFSXZYList_3013& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S_GetSeachFSXZYList_3013* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "S_GetSeachFSXZYList_3013";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFSXZYFieldNumber = 1,
    kPagingInfoFieldNumber = 2,
  };
  // repeated .FSXZY fSXZY = 1;
  int fsxzy_size() const;
  private:
  int _internal_fsxzy_size() const;
  public:
  void clear_fsxzy();
  ::FSXZY* mutable_fsxzy(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::FSXZY >*
      mutable_fsxzy();
  private:
  const ::FSXZY& _internal_fsxzy(int index) const;
  ::FSXZY* _internal_add_fsxzy();
  public:
  const ::FSXZY& fsxzy(int index) const;
  ::FSXZY* add_fsxzy();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::FSXZY >&
      fsxzy() const;

  // .PagingInfo pagingInfo = 2;
  bool has_paginginfo() const;
  private:
  bool _internal_has_paginginfo() const;
  public:
  void clear_paginginfo();
  const ::PagingInfo& paginginfo() const;
  ::PagingInfo* release_paginginfo();
  ::PagingInfo* mutable_paginginfo();
  void set_allocated_paginginfo(::PagingInfo* paginginfo);
  private:
  const ::PagingInfo& _internal_paginginfo() const;
  ::PagingInfo* _internal_mutable_paginginfo();
  public:

  // @@protoc_insertion_point(class_scope:S_GetSeachFSXZYList_3013)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::FSXZY > fsxzy_;
  ::PagingInfo* paginginfo_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class C_GetZyzdxList_3014 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:C_GetZyzdxList_3014) */ {
 public:
  C_GetZyzdxList_3014();
  virtual ~C_GetZyzdxList_3014();

  C_GetZyzdxList_3014(const C_GetZyzdxList_3014& from);
  C_GetZyzdxList_3014(C_GetZyzdxList_3014&& from) noexcept
    : C_GetZyzdxList_3014() {
    *this = ::std::move(from);
  }

  inline C_GetZyzdxList_3014& operator=(const C_GetZyzdxList_3014& from) {
    CopyFrom(from);
    return *this;
  }
  inline C_GetZyzdxList_3014& operator=(C_GetZyzdxList_3014&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const C_GetZyzdxList_3014& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_GetZyzdxList_3014* internal_default_instance() {
    return reinterpret_cast<const C_GetZyzdxList_3014*>(
               &_C_GetZyzdxList_3014_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    62;

  friend void swap(C_GetZyzdxList_3014& a, C_GetZyzdxList_3014& b) {
    a.Swap(&b);
  }
  inline void Swap(C_GetZyzdxList_3014* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline C_GetZyzdxList_3014* New() const final {
    return CreateMaybeMessage<C_GetZyzdxList_3014>(nullptr);
  }

  C_GetZyzdxList_3014* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<C_GetZyzdxList_3014>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const C_GetZyzdxList_3014& from);
  void MergeFrom(const C_GetZyzdxList_3014& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(C_GetZyzdxList_3014* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "C_GetZyzdxList_3014";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kZyNameFieldNumber = 1,
    kProvinceFieldNumber = 2,
    kTypeFieldNumber = 3,
    kXueliFieldNumber = 4,
    kPiciFieldNumber = 5,
    kKemuFieldNumber = 6,
    kSortFileFieldNumber = 13,
    kSchoolIsAllFieldNumber = 7,
    kStartScoreFieldNumber = 8,
    kEndScoreFieldNumber = 9,
    kPageFieldNumber = 10,
    kLimitFieldNumber = 12,
  };
  // string zyName = 1;
  void clear_zyname();
  const std::string& zyname() const;
  void set_zyname(const std::string& value);
  void set_zyname(std::string&& value);
  void set_zyname(const char* value);
  void set_zyname(const char* value, size_t size);
  std::string* mutable_zyname();
  std::string* release_zyname();
  void set_allocated_zyname(std::string* zyname);
  private:
  const std::string& _internal_zyname() const;
  void _internal_set_zyname(const std::string& value);
  std::string* _internal_mutable_zyname();
  public:

  // string province = 2;
  void clear_province();
  const std::string& province() const;
  void set_province(const std::string& value);
  void set_province(std::string&& value);
  void set_province(const char* value);
  void set_province(const char* value, size_t size);
  std::string* mutable_province();
  std::string* release_province();
  void set_allocated_province(std::string* province);
  private:
  const std::string& _internal_province() const;
  void _internal_set_province(const std::string& value);
  std::string* _internal_mutable_province();
  public:

  // string type = 3;
  void clear_type();
  const std::string& type() const;
  void set_type(const std::string& value);
  void set_type(std::string&& value);
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  std::string* mutable_type();
  std::string* release_type();
  void set_allocated_type(std::string* type);
  private:
  const std::string& _internal_type() const;
  void _internal_set_type(const std::string& value);
  std::string* _internal_mutable_type();
  public:

  // string xueli = 4;
  void clear_xueli();
  const std::string& xueli() const;
  void set_xueli(const std::string& value);
  void set_xueli(std::string&& value);
  void set_xueli(const char* value);
  void set_xueli(const char* value, size_t size);
  std::string* mutable_xueli();
  std::string* release_xueli();
  void set_allocated_xueli(std::string* xueli);
  private:
  const std::string& _internal_xueli() const;
  void _internal_set_xueli(const std::string& value);
  std::string* _internal_mutable_xueli();
  public:

  // string pici = 5;
  void clear_pici();
  const std::string& pici() const;
  void set_pici(const std::string& value);
  void set_pici(std::string&& value);
  void set_pici(const char* value);
  void set_pici(const char* value, size_t size);
  std::string* mutable_pici();
  std::string* release_pici();
  void set_allocated_pici(std::string* pici);
  private:
  const std::string& _internal_pici() const;
  void _internal_set_pici(const std::string& value);
  std::string* _internal_mutable_pici();
  public:

  // string kemu = 6;
  void clear_kemu();
  const std::string& kemu() const;
  void set_kemu(const std::string& value);
  void set_kemu(std::string&& value);
  void set_kemu(const char* value);
  void set_kemu(const char* value, size_t size);
  std::string* mutable_kemu();
  std::string* release_kemu();
  void set_allocated_kemu(std::string* kemu);
  private:
  const std::string& _internal_kemu() const;
  void _internal_set_kemu(const std::string& value);
  std::string* _internal_mutable_kemu();
  public:

  // string sortFile = 13;
  void clear_sortfile();
  const std::string& sortfile() const;
  void set_sortfile(const std::string& value);
  void set_sortfile(std::string&& value);
  void set_sortfile(const char* value);
  void set_sortfile(const char* value, size_t size);
  std::string* mutable_sortfile();
  std::string* release_sortfile();
  void set_allocated_sortfile(std::string* sortfile);
  private:
  const std::string& _internal_sortfile() const;
  void _internal_set_sortfile(const std::string& value);
  std::string* _internal_mutable_sortfile();
  public:

  // int32 schoolIsAll = 7;
  void clear_schoolisall();
  ::PROTOBUF_NAMESPACE_ID::int32 schoolisall() const;
  void set_schoolisall(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_schoolisall() const;
  void _internal_set_schoolisall(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 startScore = 8;
  void clear_startscore();
  ::PROTOBUF_NAMESPACE_ID::int32 startscore() const;
  void set_startscore(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_startscore() const;
  void _internal_set_startscore(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 endScore = 9;
  void clear_endscore();
  ::PROTOBUF_NAMESPACE_ID::int32 endscore() const;
  void set_endscore(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_endscore() const;
  void _internal_set_endscore(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 page = 10;
  void clear_page();
  ::PROTOBUF_NAMESPACE_ID::int32 page() const;
  void set_page(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_page() const;
  void _internal_set_page(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 limit = 12;
  void clear_limit();
  ::PROTOBUF_NAMESPACE_ID::int32 limit() const;
  void set_limit(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_limit() const;
  void _internal_set_limit(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:C_GetZyzdxList_3014)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr zyname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr province_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr type_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr xueli_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pici_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr kemu_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sortfile_;
  ::PROTOBUF_NAMESPACE_ID::int32 schoolisall_;
  ::PROTOBUF_NAMESPACE_ID::int32 startscore_;
  ::PROTOBUF_NAMESPACE_ID::int32 endscore_;
  ::PROTOBUF_NAMESPACE_ID::int32 page_;
  ::PROTOBUF_NAMESPACE_ID::int32 limit_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class S_GetZyzdxList_3015 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:S_GetZyzdxList_3015) */ {
 public:
  S_GetZyzdxList_3015();
  virtual ~S_GetZyzdxList_3015();

  S_GetZyzdxList_3015(const S_GetZyzdxList_3015& from);
  S_GetZyzdxList_3015(S_GetZyzdxList_3015&& from) noexcept
    : S_GetZyzdxList_3015() {
    *this = ::std::move(from);
  }

  inline S_GetZyzdxList_3015& operator=(const S_GetZyzdxList_3015& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_GetZyzdxList_3015& operator=(S_GetZyzdxList_3015&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const S_GetZyzdxList_3015& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S_GetZyzdxList_3015* internal_default_instance() {
    return reinterpret_cast<const S_GetZyzdxList_3015*>(
               &_S_GetZyzdxList_3015_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    63;

  friend void swap(S_GetZyzdxList_3015& a, S_GetZyzdxList_3015& b) {
    a.Swap(&b);
  }
  inline void Swap(S_GetZyzdxList_3015* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline S_GetZyzdxList_3015* New() const final {
    return CreateMaybeMessage<S_GetZyzdxList_3015>(nullptr);
  }

  S_GetZyzdxList_3015* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<S_GetZyzdxList_3015>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const S_GetZyzdxList_3015& from);
  void MergeFrom(const S_GetZyzdxList_3015& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S_GetZyzdxList_3015* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "S_GetZyzdxList_3015";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kZyzdxFieldNumber = 1,
    kPagingInfoFieldNumber = 9,
  };
  // repeated .Zyzdx zyzdx = 1;
  int zyzdx_size() const;
  private:
  int _internal_zyzdx_size() const;
  public:
  void clear_zyzdx();
  ::Zyzdx* mutable_zyzdx(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Zyzdx >*
      mutable_zyzdx();
  private:
  const ::Zyzdx& _internal_zyzdx(int index) const;
  ::Zyzdx* _internal_add_zyzdx();
  public:
  const ::Zyzdx& zyzdx(int index) const;
  ::Zyzdx* add_zyzdx();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Zyzdx >&
      zyzdx() const;

  // .PagingInfo pagingInfo = 9;
  bool has_paginginfo() const;
  private:
  bool _internal_has_paginginfo() const;
  public:
  void clear_paginginfo();
  const ::PagingInfo& paginginfo() const;
  ::PagingInfo* release_paginginfo();
  ::PagingInfo* mutable_paginginfo();
  void set_allocated_paginginfo(::PagingInfo* paginginfo);
  private:
  const ::PagingInfo& _internal_paginginfo() const;
  ::PagingInfo* _internal_mutable_paginginfo();
  public:

  // @@protoc_insertion_point(class_scope:S_GetZyzdxList_3015)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Zyzdx > zyzdx_;
  ::PagingInfo* paginginfo_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class ZntjInfo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ZntjInfo) */ {
 public:
  ZntjInfo();
  virtual ~ZntjInfo();

  ZntjInfo(const ZntjInfo& from);
  ZntjInfo(ZntjInfo&& from) noexcept
    : ZntjInfo() {
    *this = ::std::move(from);
  }

  inline ZntjInfo& operator=(const ZntjInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline ZntjInfo& operator=(ZntjInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ZntjInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ZntjInfo* internal_default_instance() {
    return reinterpret_cast<const ZntjInfo*>(
               &_ZntjInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    64;

  friend void swap(ZntjInfo& a, ZntjInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(ZntjInfo* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ZntjInfo* New() const final {
    return CreateMaybeMessage<ZntjInfo>(nullptr);
  }

  ZntjInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ZntjInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ZntjInfo& from);
  void MergeFrom(const ZntjInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ZntjInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ZntjInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLogoPathFieldNumber = 2,
    kNameFieldNumber = 3,
    kLqglFieldNumber = 4,
    kLqpcFieldNumber = 5,
    kTdxFieldNumber = 6,
    kRmzyFieldNumber = 7,
    kXxpmFieldNumber = 8,
    kTypeFieldNumber = 9,
    kLevelFieldNumber = 10,
    kIdFieldNumber = 1,
  };
  // string logoPath = 2;
  void clear_logopath();
  const std::string& logopath() const;
  void set_logopath(const std::string& value);
  void set_logopath(std::string&& value);
  void set_logopath(const char* value);
  void set_logopath(const char* value, size_t size);
  std::string* mutable_logopath();
  std::string* release_logopath();
  void set_allocated_logopath(std::string* logopath);
  private:
  const std::string& _internal_logopath() const;
  void _internal_set_logopath(const std::string& value);
  std::string* _internal_mutable_logopath();
  public:

  // string name = 3;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string lqgl = 4;
  void clear_lqgl();
  const std::string& lqgl() const;
  void set_lqgl(const std::string& value);
  void set_lqgl(std::string&& value);
  void set_lqgl(const char* value);
  void set_lqgl(const char* value, size_t size);
  std::string* mutable_lqgl();
  std::string* release_lqgl();
  void set_allocated_lqgl(std::string* lqgl);
  private:
  const std::string& _internal_lqgl() const;
  void _internal_set_lqgl(const std::string& value);
  std::string* _internal_mutable_lqgl();
  public:

  // string lqpc = 5;
  void clear_lqpc();
  const std::string& lqpc() const;
  void set_lqpc(const std::string& value);
  void set_lqpc(std::string&& value);
  void set_lqpc(const char* value);
  void set_lqpc(const char* value, size_t size);
  std::string* mutable_lqpc();
  std::string* release_lqpc();
  void set_allocated_lqpc(std::string* lqpc);
  private:
  const std::string& _internal_lqpc() const;
  void _internal_set_lqpc(const std::string& value);
  std::string* _internal_mutable_lqpc();
  public:

  // string tdx = 6;
  void clear_tdx();
  const std::string& tdx() const;
  void set_tdx(const std::string& value);
  void set_tdx(std::string&& value);
  void set_tdx(const char* value);
  void set_tdx(const char* value, size_t size);
  std::string* mutable_tdx();
  std::string* release_tdx();
  void set_allocated_tdx(std::string* tdx);
  private:
  const std::string& _internal_tdx() const;
  void _internal_set_tdx(const std::string& value);
  std::string* _internal_mutable_tdx();
  public:

  // string rmzy = 7;
  void clear_rmzy();
  const std::string& rmzy() const;
  void set_rmzy(const std::string& value);
  void set_rmzy(std::string&& value);
  void set_rmzy(const char* value);
  void set_rmzy(const char* value, size_t size);
  std::string* mutable_rmzy();
  std::string* release_rmzy();
  void set_allocated_rmzy(std::string* rmzy);
  private:
  const std::string& _internal_rmzy() const;
  void _internal_set_rmzy(const std::string& value);
  std::string* _internal_mutable_rmzy();
  public:

  // string xxpm = 8;
  void clear_xxpm();
  const std::string& xxpm() const;
  void set_xxpm(const std::string& value);
  void set_xxpm(std::string&& value);
  void set_xxpm(const char* value);
  void set_xxpm(const char* value, size_t size);
  std::string* mutable_xxpm();
  std::string* release_xxpm();
  void set_allocated_xxpm(std::string* xxpm);
  private:
  const std::string& _internal_xxpm() const;
  void _internal_set_xxpm(const std::string& value);
  std::string* _internal_mutable_xxpm();
  public:

  // string type = 9;
  void clear_type();
  const std::string& type() const;
  void set_type(const std::string& value);
  void set_type(std::string&& value);
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  std::string* mutable_type();
  std::string* release_type();
  void set_allocated_type(std::string* type);
  private:
  const std::string& _internal_type() const;
  void _internal_set_type(const std::string& value);
  std::string* _internal_mutable_type();
  public:

  // string level = 10;
  void clear_level();
  const std::string& level() const;
  void set_level(const std::string& value);
  void set_level(std::string&& value);
  void set_level(const char* value);
  void set_level(const char* value, size_t size);
  std::string* mutable_level();
  std::string* release_level();
  void set_allocated_level(std::string* level);
  private:
  const std::string& _internal_level() const;
  void _internal_set_level(const std::string& value);
  std::string* _internal_mutable_level();
  public:

  // fixed64 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:ZntjInfo)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr logopath_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr lqgl_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr lqpc_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tdx_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr rmzy_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr xxpm_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr type_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr level_;
  ::PROTOBUF_NAMESPACE_ID::uint64 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class PagingInfo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PagingInfo) */ {
 public:
  PagingInfo();
  virtual ~PagingInfo();

  PagingInfo(const PagingInfo& from);
  PagingInfo(PagingInfo&& from) noexcept
    : PagingInfo() {
    *this = ::std::move(from);
  }

  inline PagingInfo& operator=(const PagingInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline PagingInfo& operator=(PagingInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PagingInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PagingInfo* internal_default_instance() {
    return reinterpret_cast<const PagingInfo*>(
               &_PagingInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    65;

  friend void swap(PagingInfo& a, PagingInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(PagingInfo* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PagingInfo* New() const final {
    return CreateMaybeMessage<PagingInfo>(nullptr);
  }

  PagingInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PagingInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PagingInfo& from);
  void MergeFrom(const PagingInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PagingInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PagingInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRowcountFieldNumber = 1,
    kPageCountFieldNumber = 2,
    kPageNoFieldNumber = 3,
    kPageSizeFieldNumber = 4,
    kStartLimtFieldNumber = 5,
  };
  // fixed64 rowcount = 1;
  void clear_rowcount();
  ::PROTOBUF_NAMESPACE_ID::uint64 rowcount() const;
  void set_rowcount(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_rowcount() const;
  void _internal_set_rowcount(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // fixed64 pageCount = 2;
  void clear_pagecount();
  ::PROTOBUF_NAMESPACE_ID::uint64 pagecount() const;
  void set_pagecount(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_pagecount() const;
  void _internal_set_pagecount(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // fixed64 pageNo = 3;
  void clear_pageno();
  ::PROTOBUF_NAMESPACE_ID::uint64 pageno() const;
  void set_pageno(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_pageno() const;
  void _internal_set_pageno(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // fixed64 pageSize = 4;
  void clear_pagesize();
  ::PROTOBUF_NAMESPACE_ID::uint64 pagesize() const;
  void set_pagesize(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_pagesize() const;
  void _internal_set_pagesize(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // fixed64 startLimt = 5;
  void clear_startlimt();
  ::PROTOBUF_NAMESPACE_ID::uint64 startlimt() const;
  void set_startlimt(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_startlimt() const;
  void _internal_set_startlimt(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:PagingInfo)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 rowcount_;
  ::PROTOBUF_NAMESPACE_ID::uint64 pagecount_;
  ::PROTOBUF_NAMESPACE_ID::uint64 pageno_;
  ::PROTOBUF_NAMESPACE_ID::uint64 pagesize_;
  ::PROTOBUF_NAMESPACE_ID::uint64 startlimt_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class SeachSchool :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SeachSchool) */ {
 public:
  SeachSchool();
  virtual ~SeachSchool();

  SeachSchool(const SeachSchool& from);
  SeachSchool(SeachSchool&& from) noexcept
    : SeachSchool() {
    *this = ::std::move(from);
  }

  inline SeachSchool& operator=(const SeachSchool& from) {
    CopyFrom(from);
    return *this;
  }
  inline SeachSchool& operator=(SeachSchool&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SeachSchool& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SeachSchool* internal_default_instance() {
    return reinterpret_cast<const SeachSchool*>(
               &_SeachSchool_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    66;

  friend void swap(SeachSchool& a, SeachSchool& b) {
    a.Swap(&b);
  }
  inline void Swap(SeachSchool* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SeachSchool* New() const final {
    return CreateMaybeMessage<SeachSchool>(nullptr);
  }

  SeachSchool* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SeachSchool>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SeachSchool& from);
  void MergeFrom(const SeachSchool& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SeachSchool* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SeachSchool";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kLogoPathFieldNumber = 3,
    kLqglFieldNumber = 4,
    kLqpcFieldNumber = 5,
    kTdxFieldNumber = 6,
    kRmzyFieldNumber = 7,
    kTypeFieldNumber = 8,
    kLevelFieldNumber = 9,
    kIdFieldNumber = 1,
  };
  // string name = 2;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string logoPath = 3;
  void clear_logopath();
  const std::string& logopath() const;
  void set_logopath(const std::string& value);
  void set_logopath(std::string&& value);
  void set_logopath(const char* value);
  void set_logopath(const char* value, size_t size);
  std::string* mutable_logopath();
  std::string* release_logopath();
  void set_allocated_logopath(std::string* logopath);
  private:
  const std::string& _internal_logopath() const;
  void _internal_set_logopath(const std::string& value);
  std::string* _internal_mutable_logopath();
  public:

  // string lqgl = 4;
  void clear_lqgl();
  const std::string& lqgl() const;
  void set_lqgl(const std::string& value);
  void set_lqgl(std::string&& value);
  void set_lqgl(const char* value);
  void set_lqgl(const char* value, size_t size);
  std::string* mutable_lqgl();
  std::string* release_lqgl();
  void set_allocated_lqgl(std::string* lqgl);
  private:
  const std::string& _internal_lqgl() const;
  void _internal_set_lqgl(const std::string& value);
  std::string* _internal_mutable_lqgl();
  public:

  // string lqpc = 5;
  void clear_lqpc();
  const std::string& lqpc() const;
  void set_lqpc(const std::string& value);
  void set_lqpc(std::string&& value);
  void set_lqpc(const char* value);
  void set_lqpc(const char* value, size_t size);
  std::string* mutable_lqpc();
  std::string* release_lqpc();
  void set_allocated_lqpc(std::string* lqpc);
  private:
  const std::string& _internal_lqpc() const;
  void _internal_set_lqpc(const std::string& value);
  std::string* _internal_mutable_lqpc();
  public:

  // string tdx = 6;
  void clear_tdx();
  const std::string& tdx() const;
  void set_tdx(const std::string& value);
  void set_tdx(std::string&& value);
  void set_tdx(const char* value);
  void set_tdx(const char* value, size_t size);
  std::string* mutable_tdx();
  std::string* release_tdx();
  void set_allocated_tdx(std::string* tdx);
  private:
  const std::string& _internal_tdx() const;
  void _internal_set_tdx(const std::string& value);
  std::string* _internal_mutable_tdx();
  public:

  // string rmzy = 7;
  void clear_rmzy();
  const std::string& rmzy() const;
  void set_rmzy(const std::string& value);
  void set_rmzy(std::string&& value);
  void set_rmzy(const char* value);
  void set_rmzy(const char* value, size_t size);
  std::string* mutable_rmzy();
  std::string* release_rmzy();
  void set_allocated_rmzy(std::string* rmzy);
  private:
  const std::string& _internal_rmzy() const;
  void _internal_set_rmzy(const std::string& value);
  std::string* _internal_mutable_rmzy();
  public:

  // string type = 8;
  void clear_type();
  const std::string& type() const;
  void set_type(const std::string& value);
  void set_type(std::string&& value);
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  std::string* mutable_type();
  std::string* release_type();
  void set_allocated_type(std::string* type);
  private:
  const std::string& _internal_type() const;
  void _internal_set_type(const std::string& value);
  std::string* _internal_mutable_type();
  public:

  // string level = 9;
  void clear_level();
  const std::string& level() const;
  void set_level(const std::string& value);
  void set_level(std::string&& value);
  void set_level(const char* value);
  void set_level(const char* value, size_t size);
  std::string* mutable_level();
  std::string* release_level();
  void set_allocated_level(std::string* level);
  private:
  const std::string& _internal_level() const;
  void _internal_set_level(const std::string& value);
  std::string* _internal_mutable_level();
  public:

  // fixed64 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:SeachSchool)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr logopath_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr lqgl_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr lqpc_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tdx_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr rmzy_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr type_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr level_;
  ::PROTOBUF_NAMESPACE_ID::uint64 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class SeachScore :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SeachScore) */ {
 public:
  SeachScore();
  virtual ~SeachScore();

  SeachScore(const SeachScore& from);
  SeachScore(SeachScore&& from) noexcept
    : SeachScore() {
    *this = ::std::move(from);
  }

  inline SeachScore& operator=(const SeachScore& from) {
    CopyFrom(from);
    return *this;
  }
  inline SeachScore& operator=(SeachScore&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SeachScore& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SeachScore* internal_default_instance() {
    return reinterpret_cast<const SeachScore*>(
               &_SeachScore_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    67;

  friend void swap(SeachScore& a, SeachScore& b) {
    a.Swap(&b);
  }
  inline void Swap(SeachScore* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SeachScore* New() const final {
    return CreateMaybeMessage<SeachScore>(nullptr);
  }

  SeachScore* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SeachScore>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SeachScore& from);
  void MergeFrom(const SeachScore& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SeachScore* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SeachScore";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kLogoPathFieldNumber = 3,
    kTypeFieldNumber = 4,
    kLevelFieldNumber = 5,
    kStFsx1FieldNumber = 6,
    kNdFsx2FieldNumber = 7,
    kRdFsx3FieldNumber = 8,
    kIdFieldNumber = 1,
  };
  // string name = 2;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string logoPath = 3;
  void clear_logopath();
  const std::string& logopath() const;
  void set_logopath(const std::string& value);
  void set_logopath(std::string&& value);
  void set_logopath(const char* value);
  void set_logopath(const char* value, size_t size);
  std::string* mutable_logopath();
  std::string* release_logopath();
  void set_allocated_logopath(std::string* logopath);
  private:
  const std::string& _internal_logopath() const;
  void _internal_set_logopath(const std::string& value);
  std::string* _internal_mutable_logopath();
  public:

  // string type = 4;
  void clear_type();
  const std::string& type() const;
  void set_type(const std::string& value);
  void set_type(std::string&& value);
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  std::string* mutable_type();
  std::string* release_type();
  void set_allocated_type(std::string* type);
  private:
  const std::string& _internal_type() const;
  void _internal_set_type(const std::string& value);
  std::string* _internal_mutable_type();
  public:

  // string level = 5;
  void clear_level();
  const std::string& level() const;
  void set_level(const std::string& value);
  void set_level(std::string&& value);
  void set_level(const char* value);
  void set_level(const char* value, size_t size);
  std::string* mutable_level();
  std::string* release_level();
  void set_allocated_level(std::string* level);
  private:
  const std::string& _internal_level() const;
  void _internal_set_level(const std::string& value);
  std::string* _internal_mutable_level();
  public:

  // string stFsx1 = 6;
  void clear_stfsx1();
  const std::string& stfsx1() const;
  void set_stfsx1(const std::string& value);
  void set_stfsx1(std::string&& value);
  void set_stfsx1(const char* value);
  void set_stfsx1(const char* value, size_t size);
  std::string* mutable_stfsx1();
  std::string* release_stfsx1();
  void set_allocated_stfsx1(std::string* stfsx1);
  private:
  const std::string& _internal_stfsx1() const;
  void _internal_set_stfsx1(const std::string& value);
  std::string* _internal_mutable_stfsx1();
  public:

  // string ndFsx2 = 7;
  void clear_ndfsx2();
  const std::string& ndfsx2() const;
  void set_ndfsx2(const std::string& value);
  void set_ndfsx2(std::string&& value);
  void set_ndfsx2(const char* value);
  void set_ndfsx2(const char* value, size_t size);
  std::string* mutable_ndfsx2();
  std::string* release_ndfsx2();
  void set_allocated_ndfsx2(std::string* ndfsx2);
  private:
  const std::string& _internal_ndfsx2() const;
  void _internal_set_ndfsx2(const std::string& value);
  std::string* _internal_mutable_ndfsx2();
  public:

  // string rdFsx3 = 8;
  void clear_rdfsx3();
  const std::string& rdfsx3() const;
  void set_rdfsx3(const std::string& value);
  void set_rdfsx3(std::string&& value);
  void set_rdfsx3(const char* value);
  void set_rdfsx3(const char* value, size_t size);
  std::string* mutable_rdfsx3();
  std::string* release_rdfsx3();
  void set_allocated_rdfsx3(std::string* rdfsx3);
  private:
  const std::string& _internal_rdfsx3() const;
  void _internal_set_rdfsx3(const std::string& value);
  std::string* _internal_mutable_rdfsx3();
  public:

  // fixed64 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:SeachScore)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr logopath_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr type_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr level_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr stfsx1_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr ndfsx2_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr rdfsx3_;
  ::PROTOBUF_NAMESPACE_ID::uint64 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class SeachSKYX :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SeachSKYX) */ {
 public:
  SeachSKYX();
  virtual ~SeachSKYX();

  SeachSKYX(const SeachSKYX& from);
  SeachSKYX(SeachSKYX&& from) noexcept
    : SeachSKYX() {
    *this = ::std::move(from);
  }

  inline SeachSKYX& operator=(const SeachSKYX& from) {
    CopyFrom(from);
    return *this;
  }
  inline SeachSKYX& operator=(SeachSKYX&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SeachSKYX& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SeachSKYX* internal_default_instance() {
    return reinterpret_cast<const SeachSKYX*>(
               &_SeachSKYX_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    68;

  friend void swap(SeachSKYX& a, SeachSKYX& b) {
    a.Swap(&b);
  }
  inline void Swap(SeachSKYX* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SeachSKYX* New() const final {
    return CreateMaybeMessage<SeachSKYX>(nullptr);
  }

  SeachSKYX* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SeachSKYX>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SeachSKYX& from);
  void MergeFrom(const SeachSKYX& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SeachSKYX* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SeachSKYX";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLqyearsFieldNumber = 1,
    kProvinceFieldNumber = 2,
    kKeleiFieldNumber = 3,
    kPiciFieldNumber = 4,
    kZdScroeFieldNumber = 5,
  };
  // string lqyears = 1;
  void clear_lqyears();
  const std::string& lqyears() const;
  void set_lqyears(const std::string& value);
  void set_lqyears(std::string&& value);
  void set_lqyears(const char* value);
  void set_lqyears(const char* value, size_t size);
  std::string* mutable_lqyears();
  std::string* release_lqyears();
  void set_allocated_lqyears(std::string* lqyears);
  private:
  const std::string& _internal_lqyears() const;
  void _internal_set_lqyears(const std::string& value);
  std::string* _internal_mutable_lqyears();
  public:

  // string province = 2;
  void clear_province();
  const std::string& province() const;
  void set_province(const std::string& value);
  void set_province(std::string&& value);
  void set_province(const char* value);
  void set_province(const char* value, size_t size);
  std::string* mutable_province();
  std::string* release_province();
  void set_allocated_province(std::string* province);
  private:
  const std::string& _internal_province() const;
  void _internal_set_province(const std::string& value);
  std::string* _internal_mutable_province();
  public:

  // string kelei = 3;
  void clear_kelei();
  const std::string& kelei() const;
  void set_kelei(const std::string& value);
  void set_kelei(std::string&& value);
  void set_kelei(const char* value);
  void set_kelei(const char* value, size_t size);
  std::string* mutable_kelei();
  std::string* release_kelei();
  void set_allocated_kelei(std::string* kelei);
  private:
  const std::string& _internal_kelei() const;
  void _internal_set_kelei(const std::string& value);
  std::string* _internal_mutable_kelei();
  public:

  // string pici = 4;
  void clear_pici();
  const std::string& pici() const;
  void set_pici(const std::string& value);
  void set_pici(std::string&& value);
  void set_pici(const char* value);
  void set_pici(const char* value, size_t size);
  std::string* mutable_pici();
  std::string* release_pici();
  void set_allocated_pici(std::string* pici);
  private:
  const std::string& _internal_pici() const;
  void _internal_set_pici(const std::string& value);
  std::string* _internal_mutable_pici();
  public:

  // int64 zdScroe = 5;
  void clear_zdscroe();
  ::PROTOBUF_NAMESPACE_ID::int64 zdscroe() const;
  void set_zdscroe(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_zdscroe() const;
  void _internal_set_zdscroe(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:SeachSKYX)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr lqyears_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr province_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr kelei_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pici_;
  ::PROTOBUF_NAMESPACE_ID::int64 zdscroe_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class SeachYYPM :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SeachYYPM) */ {
 public:
  SeachYYPM();
  virtual ~SeachYYPM();

  SeachYYPM(const SeachYYPM& from);
  SeachYYPM(SeachYYPM&& from) noexcept
    : SeachYYPM() {
    *this = ::std::move(from);
  }

  inline SeachYYPM& operator=(const SeachYYPM& from) {
    CopyFrom(from);
    return *this;
  }
  inline SeachYYPM& operator=(SeachYYPM&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SeachYYPM& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SeachYYPM* internal_default_instance() {
    return reinterpret_cast<const SeachYYPM*>(
               &_SeachYYPM_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    69;

  friend void swap(SeachYYPM& a, SeachYYPM& b) {
    a.Swap(&b);
  }
  inline void Swap(SeachYYPM* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SeachYYPM* New() const final {
    return CreateMaybeMessage<SeachYYPM>(nullptr);
  }

  SeachYYPM* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SeachYYPM>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SeachYYPM& from);
  void MergeFrom(const SeachYYPM& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SeachYYPM* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SeachYYPM";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kLogoPathFieldNumber = 3,
    kTypeFieldNumber = 4,
    kLevelFieldNumber = 5,
    kTlgxSortFieldNumber = 6,
    kProvinceSortFieldNumber = 7,
    kQsSortFieldNumber = 8,
    kWslSortFieldNumber = 9,
    kXyhSortFieldNumber = 10,
    kHotFieldNumber = 11,
    kTdxFieldNumber = 12,
    kDiquFieldNumber = 13,
    kIdFieldNumber = 1,
  };
  // string name = 2;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string logoPath = 3;
  void clear_logopath();
  const std::string& logopath() const;
  void set_logopath(const std::string& value);
  void set_logopath(std::string&& value);
  void set_logopath(const char* value);
  void set_logopath(const char* value, size_t size);
  std::string* mutable_logopath();
  std::string* release_logopath();
  void set_allocated_logopath(std::string* logopath);
  private:
  const std::string& _internal_logopath() const;
  void _internal_set_logopath(const std::string& value);
  std::string* _internal_mutable_logopath();
  public:

  // string type = 4;
  void clear_type();
  const std::string& type() const;
  void set_type(const std::string& value);
  void set_type(std::string&& value);
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  std::string* mutable_type();
  std::string* release_type();
  void set_allocated_type(std::string* type);
  private:
  const std::string& _internal_type() const;
  void _internal_set_type(const std::string& value);
  std::string* _internal_mutable_type();
  public:

  // string level = 5;
  void clear_level();
  const std::string& level() const;
  void set_level(const std::string& value);
  void set_level(std::string&& value);
  void set_level(const char* value);
  void set_level(const char* value, size_t size);
  std::string* mutable_level();
  std::string* release_level();
  void set_allocated_level(std::string* level);
  private:
  const std::string& _internal_level() const;
  void _internal_set_level(const std::string& value);
  std::string* _internal_mutable_level();
  public:

  // string tlgxSort = 6;
  void clear_tlgxsort();
  const std::string& tlgxsort() const;
  void set_tlgxsort(const std::string& value);
  void set_tlgxsort(std::string&& value);
  void set_tlgxsort(const char* value);
  void set_tlgxsort(const char* value, size_t size);
  std::string* mutable_tlgxsort();
  std::string* release_tlgxsort();
  void set_allocated_tlgxsort(std::string* tlgxsort);
  private:
  const std::string& _internal_tlgxsort() const;
  void _internal_set_tlgxsort(const std::string& value);
  std::string* _internal_mutable_tlgxsort();
  public:

  // string provinceSort = 7;
  void clear_provincesort();
  const std::string& provincesort() const;
  void set_provincesort(const std::string& value);
  void set_provincesort(std::string&& value);
  void set_provincesort(const char* value);
  void set_provincesort(const char* value, size_t size);
  std::string* mutable_provincesort();
  std::string* release_provincesort();
  void set_allocated_provincesort(std::string* provincesort);
  private:
  const std::string& _internal_provincesort() const;
  void _internal_set_provincesort(const std::string& value);
  std::string* _internal_mutable_provincesort();
  public:

  // string qsSort = 8;
  void clear_qssort();
  const std::string& qssort() const;
  void set_qssort(const std::string& value);
  void set_qssort(std::string&& value);
  void set_qssort(const char* value);
  void set_qssort(const char* value, size_t size);
  std::string* mutable_qssort();
  std::string* release_qssort();
  void set_allocated_qssort(std::string* qssort);
  private:
  const std::string& _internal_qssort() const;
  void _internal_set_qssort(const std::string& value);
  std::string* _internal_mutable_qssort();
  public:

  // string wslSort = 9;
  void clear_wslsort();
  const std::string& wslsort() const;
  void set_wslsort(const std::string& value);
  void set_wslsort(std::string&& value);
  void set_wslsort(const char* value);
  void set_wslsort(const char* value, size_t size);
  std::string* mutable_wslsort();
  std::string* release_wslsort();
  void set_allocated_wslsort(std::string* wslsort);
  private:
  const std::string& _internal_wslsort() const;
  void _internal_set_wslsort(const std::string& value);
  std::string* _internal_mutable_wslsort();
  public:

  // string xyhSort = 10;
  void clear_xyhsort();
  const std::string& xyhsort() const;
  void set_xyhsort(const std::string& value);
  void set_xyhsort(std::string&& value);
  void set_xyhsort(const char* value);
  void set_xyhsort(const char* value, size_t size);
  std::string* mutable_xyhsort();
  std::string* release_xyhsort();
  void set_allocated_xyhsort(std::string* xyhsort);
  private:
  const std::string& _internal_xyhsort() const;
  void _internal_set_xyhsort(const std::string& value);
  std::string* _internal_mutable_xyhsort();
  public:

  // string hot = 11;
  void clear_hot();
  const std::string& hot() const;
  void set_hot(const std::string& value);
  void set_hot(std::string&& value);
  void set_hot(const char* value);
  void set_hot(const char* value, size_t size);
  std::string* mutable_hot();
  std::string* release_hot();
  void set_allocated_hot(std::string* hot);
  private:
  const std::string& _internal_hot() const;
  void _internal_set_hot(const std::string& value);
  std::string* _internal_mutable_hot();
  public:

  // string tdx = 12;
  void clear_tdx();
  const std::string& tdx() const;
  void set_tdx(const std::string& value);
  void set_tdx(std::string&& value);
  void set_tdx(const char* value);
  void set_tdx(const char* value, size_t size);
  std::string* mutable_tdx();
  std::string* release_tdx();
  void set_allocated_tdx(std::string* tdx);
  private:
  const std::string& _internal_tdx() const;
  void _internal_set_tdx(const std::string& value);
  std::string* _internal_mutable_tdx();
  public:

  // string diqu = 13;
  void clear_diqu();
  const std::string& diqu() const;
  void set_diqu(const std::string& value);
  void set_diqu(std::string&& value);
  void set_diqu(const char* value);
  void set_diqu(const char* value, size_t size);
  std::string* mutable_diqu();
  std::string* release_diqu();
  void set_allocated_diqu(std::string* diqu);
  private:
  const std::string& _internal_diqu() const;
  void _internal_set_diqu(const std::string& value);
  std::string* _internal_mutable_diqu();
  public:

  // fixed64 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:SeachYYPM)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr logopath_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr type_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr level_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tlgxsort_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr provincesort_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr qssort_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr wslsort_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr xyhsort_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr hot_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tdx_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr diqu_;
  ::PROTOBUF_NAMESPACE_ID::uint64 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class Xkml :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Xkml) */ {
 public:
  Xkml();
  virtual ~Xkml();

  Xkml(const Xkml& from);
  Xkml(Xkml&& from) noexcept
    : Xkml() {
    *this = ::std::move(from);
  }

  inline Xkml& operator=(const Xkml& from) {
    CopyFrom(from);
    return *this;
  }
  inline Xkml& operator=(Xkml&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Xkml& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Xkml* internal_default_instance() {
    return reinterpret_cast<const Xkml*>(
               &_Xkml_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    70;

  friend void swap(Xkml& a, Xkml& b) {
    a.Swap(&b);
  }
  inline void Swap(Xkml* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Xkml* New() const final {
    return CreateMaybeMessage<Xkml>(nullptr);
  }

  Xkml* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Xkml>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Xkml& from);
  void MergeFrom(const Xkml& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Xkml* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Xkml";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kYjxkFieldNumber = 3,
    kXKmlNameFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // repeated .Yjxk yjxk = 3;
  int yjxk_size() const;
  private:
  int _internal_yjxk_size() const;
  public:
  void clear_yjxk();
  ::Yjxk* mutable_yjxk(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Yjxk >*
      mutable_yjxk();
  private:
  const ::Yjxk& _internal_yjxk(int index) const;
  ::Yjxk* _internal_add_yjxk();
  public:
  const ::Yjxk& yjxk(int index) const;
  ::Yjxk* add_yjxk();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Yjxk >&
      yjxk() const;

  // string XKmlName = 2;
  void clear_xkmlname();
  const std::string& xkmlname() const;
  void set_xkmlname(const std::string& value);
  void set_xkmlname(std::string&& value);
  void set_xkmlname(const char* value);
  void set_xkmlname(const char* value, size_t size);
  std::string* mutable_xkmlname();
  std::string* release_xkmlname();
  void set_allocated_xkmlname(std::string* xkmlname);
  private:
  const std::string& _internal_xkmlname() const;
  void _internal_set_xkmlname(const std::string& value);
  std::string* _internal_mutable_xkmlname();
  public:

  // fixed64 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:Xkml)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Yjxk > yjxk_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr xkmlname_;
  ::PROTOBUF_NAMESPACE_ID::uint64 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class Yjxk :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Yjxk) */ {
 public:
  Yjxk();
  virtual ~Yjxk();

  Yjxk(const Yjxk& from);
  Yjxk(Yjxk&& from) noexcept
    : Yjxk() {
    *this = ::std::move(from);
  }

  inline Yjxk& operator=(const Yjxk& from) {
    CopyFrom(from);
    return *this;
  }
  inline Yjxk& operator=(Yjxk&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Yjxk& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Yjxk* internal_default_instance() {
    return reinterpret_cast<const Yjxk*>(
               &_Yjxk_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    71;

  friend void swap(Yjxk& a, Yjxk& b) {
    a.Swap(&b);
  }
  inline void Swap(Yjxk* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Yjxk* New() const final {
    return CreateMaybeMessage<Yjxk>(nullptr);
  }

  Yjxk* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Yjxk>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Yjxk& from);
  void MergeFrom(const Yjxk& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Yjxk* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Yjxk";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kZyInfoFieldNumber = 3,
    kXkyqFieldNumber = 4,
    kYjxkNameFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // repeated .ZyInfo zyInfo = 3;
  int zyinfo_size() const;
  private:
  int _internal_zyinfo_size() const;
  public:
  void clear_zyinfo();
  ::ZyInfo* mutable_zyinfo(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ZyInfo >*
      mutable_zyinfo();
  private:
  const ::ZyInfo& _internal_zyinfo(int index) const;
  ::ZyInfo* _internal_add_zyinfo();
  public:
  const ::ZyInfo& zyinfo(int index) const;
  ::ZyInfo* add_zyinfo();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ZyInfo >&
      zyinfo() const;

  // repeated .Xkyq xkyq = 4;
  int xkyq_size() const;
  private:
  int _internal_xkyq_size() const;
  public:
  void clear_xkyq();
  ::Xkyq* mutable_xkyq(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Xkyq >*
      mutable_xkyq();
  private:
  const ::Xkyq& _internal_xkyq(int index) const;
  ::Xkyq* _internal_add_xkyq();
  public:
  const ::Xkyq& xkyq(int index) const;
  ::Xkyq* add_xkyq();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Xkyq >&
      xkyq() const;

  // string yjxkName = 2;
  void clear_yjxkname();
  const std::string& yjxkname() const;
  void set_yjxkname(const std::string& value);
  void set_yjxkname(std::string&& value);
  void set_yjxkname(const char* value);
  void set_yjxkname(const char* value, size_t size);
  std::string* mutable_yjxkname();
  std::string* release_yjxkname();
  void set_allocated_yjxkname(std::string* yjxkname);
  private:
  const std::string& _internal_yjxkname() const;
  void _internal_set_yjxkname(const std::string& value);
  std::string* _internal_mutable_yjxkname();
  public:

  // fixed64 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:Yjxk)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ZyInfo > zyinfo_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Xkyq > xkyq_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr yjxkname_;
  ::PROTOBUF_NAMESPACE_ID::uint64 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class Xkyq :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Xkyq) */ {
 public:
  Xkyq();
  virtual ~Xkyq();

  Xkyq(const Xkyq& from);
  Xkyq(Xkyq&& from) noexcept
    : Xkyq() {
    *this = ::std::move(from);
  }

  inline Xkyq& operator=(const Xkyq& from) {
    CopyFrom(from);
    return *this;
  }
  inline Xkyq& operator=(Xkyq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Xkyq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Xkyq* internal_default_instance() {
    return reinterpret_cast<const Xkyq*>(
               &_Xkyq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    72;

  friend void swap(Xkyq& a, Xkyq& b) {
    a.Swap(&b);
  }
  inline void Swap(Xkyq* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Xkyq* New() const final {
    return CreateMaybeMessage<Xkyq>(nullptr);
  }

  Xkyq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Xkyq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Xkyq& from);
  void MergeFrom(const Xkyq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Xkyq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Xkyq";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXkyqNameFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // string xkyqName = 2;
  void clear_xkyqname();
  const std::string& xkyqname() const;
  void set_xkyqname(const std::string& value);
  void set_xkyqname(std::string&& value);
  void set_xkyqname(const char* value);
  void set_xkyqname(const char* value, size_t size);
  std::string* mutable_xkyqname();
  std::string* release_xkyqname();
  void set_allocated_xkyqname(std::string* xkyqname);
  private:
  const std::string& _internal_xkyqname() const;
  void _internal_set_xkyqname(const std::string& value);
  std::string* _internal_mutable_xkyqname();
  public:

  // fixed64 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:Xkyq)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr xkyqname_;
  ::PROTOBUF_NAMESPACE_ID::uint64 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class FSXZY :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:FSXZY) */ {
 public:
  FSXZY();
  virtual ~FSXZY();

  FSXZY(const FSXZY& from);
  FSXZY(FSXZY&& from) noexcept
    : FSXZY() {
    *this = ::std::move(from);
  }

  inline FSXZY& operator=(const FSXZY& from) {
    CopyFrom(from);
    return *this;
  }
  inline FSXZY& operator=(FSXZY&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FSXZY& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FSXZY* internal_default_instance() {
    return reinterpret_cast<const FSXZY*>(
               &_FSXZY_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    73;

  friend void swap(FSXZY& a, FSXZY& b) {
    a.Swap(&b);
  }
  inline void Swap(FSXZY* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FSXZY* New() const final {
    return CreateMaybeMessage<FSXZY>(nullptr);
  }

  FSXZY* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FSXZY>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FSXZY& from);
  void MergeFrom(const FSXZY& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FSXZY* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "FSXZY";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kZyNameFieldNumber = 2,
    kZyTeSeFieldNumber = 3,
    kZyLqglFieldNumber = 4,
    kLqpcFieldNumber = 5,
    kProvinceFieldNumber = 6,
    kXkyqFieldNumber = 7,
    kStYearLine1FieldNumber = 8,
    kIdFieldNumber = 1,
  };
  // string zyName = 2;
  void clear_zyname();
  const std::string& zyname() const;
  void set_zyname(const std::string& value);
  void set_zyname(std::string&& value);
  void set_zyname(const char* value);
  void set_zyname(const char* value, size_t size);
  std::string* mutable_zyname();
  std::string* release_zyname();
  void set_allocated_zyname(std::string* zyname);
  private:
  const std::string& _internal_zyname() const;
  void _internal_set_zyname(const std::string& value);
  std::string* _internal_mutable_zyname();
  public:

  // string zyTeSe = 3;
  void clear_zytese();
  const std::string& zytese() const;
  void set_zytese(const std::string& value);
  void set_zytese(std::string&& value);
  void set_zytese(const char* value);
  void set_zytese(const char* value, size_t size);
  std::string* mutable_zytese();
  std::string* release_zytese();
  void set_allocated_zytese(std::string* zytese);
  private:
  const std::string& _internal_zytese() const;
  void _internal_set_zytese(const std::string& value);
  std::string* _internal_mutable_zytese();
  public:

  // string zyLqgl = 4;
  void clear_zylqgl();
  const std::string& zylqgl() const;
  void set_zylqgl(const std::string& value);
  void set_zylqgl(std::string&& value);
  void set_zylqgl(const char* value);
  void set_zylqgl(const char* value, size_t size);
  std::string* mutable_zylqgl();
  std::string* release_zylqgl();
  void set_allocated_zylqgl(std::string* zylqgl);
  private:
  const std::string& _internal_zylqgl() const;
  void _internal_set_zylqgl(const std::string& value);
  std::string* _internal_mutable_zylqgl();
  public:

  // string lqpc = 5;
  void clear_lqpc();
  const std::string& lqpc() const;
  void set_lqpc(const std::string& value);
  void set_lqpc(std::string&& value);
  void set_lqpc(const char* value);
  void set_lqpc(const char* value, size_t size);
  std::string* mutable_lqpc();
  std::string* release_lqpc();
  void set_allocated_lqpc(std::string* lqpc);
  private:
  const std::string& _internal_lqpc() const;
  void _internal_set_lqpc(const std::string& value);
  std::string* _internal_mutable_lqpc();
  public:

  // string province = 6;
  void clear_province();
  const std::string& province() const;
  void set_province(const std::string& value);
  void set_province(std::string&& value);
  void set_province(const char* value);
  void set_province(const char* value, size_t size);
  std::string* mutable_province();
  std::string* release_province();
  void set_allocated_province(std::string* province);
  private:
  const std::string& _internal_province() const;
  void _internal_set_province(const std::string& value);
  std::string* _internal_mutable_province();
  public:

  // string xkyq = 7;
  void clear_xkyq();
  const std::string& xkyq() const;
  void set_xkyq(const std::string& value);
  void set_xkyq(std::string&& value);
  void set_xkyq(const char* value);
  void set_xkyq(const char* value, size_t size);
  std::string* mutable_xkyq();
  std::string* release_xkyq();
  void set_allocated_xkyq(std::string* xkyq);
  private:
  const std::string& _internal_xkyq() const;
  void _internal_set_xkyq(const std::string& value);
  std::string* _internal_mutable_xkyq();
  public:

  // string stYearLine1 = 8;
  void clear_styearline1();
  const std::string& styearline1() const;
  void set_styearline1(const std::string& value);
  void set_styearline1(std::string&& value);
  void set_styearline1(const char* value);
  void set_styearline1(const char* value, size_t size);
  std::string* mutable_styearline1();
  std::string* release_styearline1();
  void set_allocated_styearline1(std::string* styearline1);
  private:
  const std::string& _internal_styearline1() const;
  void _internal_set_styearline1(const std::string& value);
  std::string* _internal_mutable_styearline1();
  public:

  // fixed64 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:FSXZY)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr zyname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr zytese_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr zylqgl_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr lqpc_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr province_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr xkyq_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr styearline1_;
  ::PROTOBUF_NAMESPACE_ID::uint64 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// -------------------------------------------------------------------

class Zyzdx :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Zyzdx) */ {
 public:
  Zyzdx();
  virtual ~Zyzdx();

  Zyzdx(const Zyzdx& from);
  Zyzdx(Zyzdx&& from) noexcept
    : Zyzdx() {
    *this = ::std::move(from);
  }

  inline Zyzdx& operator=(const Zyzdx& from) {
    CopyFrom(from);
    return *this;
  }
  inline Zyzdx& operator=(Zyzdx&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Zyzdx& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Zyzdx* internal_default_instance() {
    return reinterpret_cast<const Zyzdx*>(
               &_Zyzdx_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    74;

  friend void swap(Zyzdx& a, Zyzdx& b) {
    a.Swap(&b);
  }
  inline void Swap(Zyzdx* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Zyzdx* New() const final {
    return CreateMaybeMessage<Zyzdx>(nullptr);
  }

  Zyzdx* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Zyzdx>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Zyzdx& from);
  void MergeFrom(const Zyzdx& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Zyzdx* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Zyzdx";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yzpm_2eproto);
    return ::descriptor_table_yzpm_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kLogoPathFieldNumber = 3,
    kTypeFieldNumber = 4,
    kLevelFieldNumber = 5,
    kStYearLine1FieldNumber = 6,
    kZyLqglFieldNumber = 7,
    kZyNameFieldNumber = 8,
    kZyLevFieldNumber = 9,
    kXkyqFieldNumber = 11,
    kIdFieldNumber = 1,
    kZyIdFieldNumber = 10,
  };
  // string name = 2;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string logoPath = 3;
  void clear_logopath();
  const std::string& logopath() const;
  void set_logopath(const std::string& value);
  void set_logopath(std::string&& value);
  void set_logopath(const char* value);
  void set_logopath(const char* value, size_t size);
  std::string* mutable_logopath();
  std::string* release_logopath();
  void set_allocated_logopath(std::string* logopath);
  private:
  const std::string& _internal_logopath() const;
  void _internal_set_logopath(const std::string& value);
  std::string* _internal_mutable_logopath();
  public:

  // string type = 4;
  void clear_type();
  const std::string& type() const;
  void set_type(const std::string& value);
  void set_type(std::string&& value);
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  std::string* mutable_type();
  std::string* release_type();
  void set_allocated_type(std::string* type);
  private:
  const std::string& _internal_type() const;
  void _internal_set_type(const std::string& value);
  std::string* _internal_mutable_type();
  public:

  // string level = 5;
  void clear_level();
  const std::string& level() const;
  void set_level(const std::string& value);
  void set_level(std::string&& value);
  void set_level(const char* value);
  void set_level(const char* value, size_t size);
  std::string* mutable_level();
  std::string* release_level();
  void set_allocated_level(std::string* level);
  private:
  const std::string& _internal_level() const;
  void _internal_set_level(const std::string& value);
  std::string* _internal_mutable_level();
  public:

  // string stYearLine1 = 6;
  void clear_styearline1();
  const std::string& styearline1() const;
  void set_styearline1(const std::string& value);
  void set_styearline1(std::string&& value);
  void set_styearline1(const char* value);
  void set_styearline1(const char* value, size_t size);
  std::string* mutable_styearline1();
  std::string* release_styearline1();
  void set_allocated_styearline1(std::string* styearline1);
  private:
  const std::string& _internal_styearline1() const;
  void _internal_set_styearline1(const std::string& value);
  std::string* _internal_mutable_styearline1();
  public:

  // string zyLqgl = 7;
  void clear_zylqgl();
  const std::string& zylqgl() const;
  void set_zylqgl(const std::string& value);
  void set_zylqgl(std::string&& value);
  void set_zylqgl(const char* value);
  void set_zylqgl(const char* value, size_t size);
  std::string* mutable_zylqgl();
  std::string* release_zylqgl();
  void set_allocated_zylqgl(std::string* zylqgl);
  private:
  const std::string& _internal_zylqgl() const;
  void _internal_set_zylqgl(const std::string& value);
  std::string* _internal_mutable_zylqgl();
  public:

  // string zyName = 8;
  void clear_zyname();
  const std::string& zyname() const;
  void set_zyname(const std::string& value);
  void set_zyname(std::string&& value);
  void set_zyname(const char* value);
  void set_zyname(const char* value, size_t size);
  std::string* mutable_zyname();
  std::string* release_zyname();
  void set_allocated_zyname(std::string* zyname);
  private:
  const std::string& _internal_zyname() const;
  void _internal_set_zyname(const std::string& value);
  std::string* _internal_mutable_zyname();
  public:

  // string zyLev = 9;
  void clear_zylev();
  const std::string& zylev() const;
  void set_zylev(const std::string& value);
  void set_zylev(std::string&& value);
  void set_zylev(const char* value);
  void set_zylev(const char* value, size_t size);
  std::string* mutable_zylev();
  std::string* release_zylev();
  void set_allocated_zylev(std::string* zylev);
  private:
  const std::string& _internal_zylev() const;
  void _internal_set_zylev(const std::string& value);
  std::string* _internal_mutable_zylev();
  public:

  // string xkyq = 11;
  void clear_xkyq();
  const std::string& xkyq() const;
  void set_xkyq(const std::string& value);
  void set_xkyq(std::string&& value);
  void set_xkyq(const char* value);
  void set_xkyq(const char* value, size_t size);
  std::string* mutable_xkyq();
  std::string* release_xkyq();
  void set_allocated_xkyq(std::string* xkyq);
  private:
  const std::string& _internal_xkyq() const;
  void _internal_set_xkyq(const std::string& value);
  std::string* _internal_mutable_xkyq();
  public:

  // fixed64 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // fixed64 zyId = 10;
  void clear_zyid();
  ::PROTOBUF_NAMESPACE_ID::uint64 zyid() const;
  void set_zyid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_zyid() const;
  void _internal_set_zyid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:Zyzdx)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr logopath_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr type_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr level_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr styearline1_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr zylqgl_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr zyname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr zylev_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr xkyq_;
  ::PROTOBUF_NAMESPACE_ID::uint64 id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 zyid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yzpm_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// C_LoginResByUser_1000

// string tel = 1;
inline void C_LoginResByUser_1000::clear_tel() {
  tel_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_LoginResByUser_1000::tel() const {
  // @@protoc_insertion_point(field_get:C_LoginResByUser_1000.tel)
  return _internal_tel();
}
inline void C_LoginResByUser_1000::set_tel(const std::string& value) {
  _internal_set_tel(value);
  // @@protoc_insertion_point(field_set:C_LoginResByUser_1000.tel)
}
inline std::string* C_LoginResByUser_1000::mutable_tel() {
  // @@protoc_insertion_point(field_mutable:C_LoginResByUser_1000.tel)
  return _internal_mutable_tel();
}
inline const std::string& C_LoginResByUser_1000::_internal_tel() const {
  return tel_.GetNoArena();
}
inline void C_LoginResByUser_1000::_internal_set_tel(const std::string& value) {
  
  tel_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_LoginResByUser_1000::set_tel(std::string&& value) {
  
  tel_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_LoginResByUser_1000.tel)
}
inline void C_LoginResByUser_1000::set_tel(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  tel_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_LoginResByUser_1000.tel)
}
inline void C_LoginResByUser_1000::set_tel(const char* value, size_t size) {
  
  tel_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_LoginResByUser_1000.tel)
}
inline std::string* C_LoginResByUser_1000::_internal_mutable_tel() {
  
  return tel_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_LoginResByUser_1000::release_tel() {
  // @@protoc_insertion_point(field_release:C_LoginResByUser_1000.tel)
  
  return tel_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_LoginResByUser_1000::set_allocated_tel(std::string* tel) {
  if (tel != nullptr) {
    
  } else {
    
  }
  tel_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tel);
  // @@protoc_insertion_point(field_set_allocated:C_LoginResByUser_1000.tel)
}

// string yzm = 2;
inline void C_LoginResByUser_1000::clear_yzm() {
  yzm_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_LoginResByUser_1000::yzm() const {
  // @@protoc_insertion_point(field_get:C_LoginResByUser_1000.yzm)
  return _internal_yzm();
}
inline void C_LoginResByUser_1000::set_yzm(const std::string& value) {
  _internal_set_yzm(value);
  // @@protoc_insertion_point(field_set:C_LoginResByUser_1000.yzm)
}
inline std::string* C_LoginResByUser_1000::mutable_yzm() {
  // @@protoc_insertion_point(field_mutable:C_LoginResByUser_1000.yzm)
  return _internal_mutable_yzm();
}
inline const std::string& C_LoginResByUser_1000::_internal_yzm() const {
  return yzm_.GetNoArena();
}
inline void C_LoginResByUser_1000::_internal_set_yzm(const std::string& value) {
  
  yzm_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_LoginResByUser_1000::set_yzm(std::string&& value) {
  
  yzm_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_LoginResByUser_1000.yzm)
}
inline void C_LoginResByUser_1000::set_yzm(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  yzm_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_LoginResByUser_1000.yzm)
}
inline void C_LoginResByUser_1000::set_yzm(const char* value, size_t size) {
  
  yzm_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_LoginResByUser_1000.yzm)
}
inline std::string* C_LoginResByUser_1000::_internal_mutable_yzm() {
  
  return yzm_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_LoginResByUser_1000::release_yzm() {
  // @@protoc_insertion_point(field_release:C_LoginResByUser_1000.yzm)
  
  return yzm_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_LoginResByUser_1000::set_allocated_yzm(std::string* yzm) {
  if (yzm != nullptr) {
    
  } else {
    
  }
  yzm_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), yzm);
  // @@protoc_insertion_point(field_set_allocated:C_LoginResByUser_1000.yzm)
}

// -------------------------------------------------------------------

// S_LoginResByUser_1001

// .UsersRes usersRes = 1;
inline bool S_LoginResByUser_1001::_internal_has_usersres() const {
  return this != internal_default_instance() && usersres_ != nullptr;
}
inline bool S_LoginResByUser_1001::has_usersres() const {
  return _internal_has_usersres();
}
inline void S_LoginResByUser_1001::clear_usersres() {
  if (GetArenaNoVirtual() == nullptr && usersres_ != nullptr) {
    delete usersres_;
  }
  usersres_ = nullptr;
}
inline const ::UsersRes& S_LoginResByUser_1001::_internal_usersres() const {
  const ::UsersRes* p = usersres_;
  return p != nullptr ? *p : *reinterpret_cast<const ::UsersRes*>(
      &::_UsersRes_default_instance_);
}
inline const ::UsersRes& S_LoginResByUser_1001::usersres() const {
  // @@protoc_insertion_point(field_get:S_LoginResByUser_1001.usersRes)
  return _internal_usersres();
}
inline ::UsersRes* S_LoginResByUser_1001::release_usersres() {
  // @@protoc_insertion_point(field_release:S_LoginResByUser_1001.usersRes)
  
  ::UsersRes* temp = usersres_;
  usersres_ = nullptr;
  return temp;
}
inline ::UsersRes* S_LoginResByUser_1001::_internal_mutable_usersres() {
  
  if (usersres_ == nullptr) {
    auto* p = CreateMaybeMessage<::UsersRes>(GetArenaNoVirtual());
    usersres_ = p;
  }
  return usersres_;
}
inline ::UsersRes* S_LoginResByUser_1001::mutable_usersres() {
  // @@protoc_insertion_point(field_mutable:S_LoginResByUser_1001.usersRes)
  return _internal_mutable_usersres();
}
inline void S_LoginResByUser_1001::set_allocated_usersres(::UsersRes* usersres) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete usersres_;
  }
  if (usersres) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      usersres = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, usersres, submessage_arena);
    }
    
  } else {
    
  }
  usersres_ = usersres;
  // @@protoc_insertion_point(field_set_allocated:S_LoginResByUser_1001.usersRes)
}

// -------------------------------------------------------------------

// C_LoginResByPhone_1002

// string tel = 1;
inline void C_LoginResByPhone_1002::clear_tel() {
  tel_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_LoginResByPhone_1002::tel() const {
  // @@protoc_insertion_point(field_get:C_LoginResByPhone_1002.tel)
  return _internal_tel();
}
inline void C_LoginResByPhone_1002::set_tel(const std::string& value) {
  _internal_set_tel(value);
  // @@protoc_insertion_point(field_set:C_LoginResByPhone_1002.tel)
}
inline std::string* C_LoginResByPhone_1002::mutable_tel() {
  // @@protoc_insertion_point(field_mutable:C_LoginResByPhone_1002.tel)
  return _internal_mutable_tel();
}
inline const std::string& C_LoginResByPhone_1002::_internal_tel() const {
  return tel_.GetNoArena();
}
inline void C_LoginResByPhone_1002::_internal_set_tel(const std::string& value) {
  
  tel_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_LoginResByPhone_1002::set_tel(std::string&& value) {
  
  tel_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_LoginResByPhone_1002.tel)
}
inline void C_LoginResByPhone_1002::set_tel(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  tel_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_LoginResByPhone_1002.tel)
}
inline void C_LoginResByPhone_1002::set_tel(const char* value, size_t size) {
  
  tel_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_LoginResByPhone_1002.tel)
}
inline std::string* C_LoginResByPhone_1002::_internal_mutable_tel() {
  
  return tel_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_LoginResByPhone_1002::release_tel() {
  // @@protoc_insertion_point(field_release:C_LoginResByPhone_1002.tel)
  
  return tel_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_LoginResByPhone_1002::set_allocated_tel(std::string* tel) {
  if (tel != nullptr) {
    
  } else {
    
  }
  tel_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tel);
  // @@protoc_insertion_point(field_set_allocated:C_LoginResByPhone_1002.tel)
}

// string pwd = 2;
inline void C_LoginResByPhone_1002::clear_pwd() {
  pwd_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_LoginResByPhone_1002::pwd() const {
  // @@protoc_insertion_point(field_get:C_LoginResByPhone_1002.pwd)
  return _internal_pwd();
}
inline void C_LoginResByPhone_1002::set_pwd(const std::string& value) {
  _internal_set_pwd(value);
  // @@protoc_insertion_point(field_set:C_LoginResByPhone_1002.pwd)
}
inline std::string* C_LoginResByPhone_1002::mutable_pwd() {
  // @@protoc_insertion_point(field_mutable:C_LoginResByPhone_1002.pwd)
  return _internal_mutable_pwd();
}
inline const std::string& C_LoginResByPhone_1002::_internal_pwd() const {
  return pwd_.GetNoArena();
}
inline void C_LoginResByPhone_1002::_internal_set_pwd(const std::string& value) {
  
  pwd_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_LoginResByPhone_1002::set_pwd(std::string&& value) {
  
  pwd_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_LoginResByPhone_1002.pwd)
}
inline void C_LoginResByPhone_1002::set_pwd(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pwd_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_LoginResByPhone_1002.pwd)
}
inline void C_LoginResByPhone_1002::set_pwd(const char* value, size_t size) {
  
  pwd_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_LoginResByPhone_1002.pwd)
}
inline std::string* C_LoginResByPhone_1002::_internal_mutable_pwd() {
  
  return pwd_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_LoginResByPhone_1002::release_pwd() {
  // @@protoc_insertion_point(field_release:C_LoginResByPhone_1002.pwd)
  
  return pwd_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_LoginResByPhone_1002::set_allocated_pwd(std::string* pwd) {
  if (pwd != nullptr) {
    
  } else {
    
  }
  pwd_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pwd);
  // @@protoc_insertion_point(field_set_allocated:C_LoginResByPhone_1002.pwd)
}

// -------------------------------------------------------------------

// S_LoginResByPhone_1003

// .UsersRes usersRes = 1;
inline bool S_LoginResByPhone_1003::_internal_has_usersres() const {
  return this != internal_default_instance() && usersres_ != nullptr;
}
inline bool S_LoginResByPhone_1003::has_usersres() const {
  return _internal_has_usersres();
}
inline void S_LoginResByPhone_1003::clear_usersres() {
  if (GetArenaNoVirtual() == nullptr && usersres_ != nullptr) {
    delete usersres_;
  }
  usersres_ = nullptr;
}
inline const ::UsersRes& S_LoginResByPhone_1003::_internal_usersres() const {
  const ::UsersRes* p = usersres_;
  return p != nullptr ? *p : *reinterpret_cast<const ::UsersRes*>(
      &::_UsersRes_default_instance_);
}
inline const ::UsersRes& S_LoginResByPhone_1003::usersres() const {
  // @@protoc_insertion_point(field_get:S_LoginResByPhone_1003.usersRes)
  return _internal_usersres();
}
inline ::UsersRes* S_LoginResByPhone_1003::release_usersres() {
  // @@protoc_insertion_point(field_release:S_LoginResByPhone_1003.usersRes)
  
  ::UsersRes* temp = usersres_;
  usersres_ = nullptr;
  return temp;
}
inline ::UsersRes* S_LoginResByPhone_1003::_internal_mutable_usersres() {
  
  if (usersres_ == nullptr) {
    auto* p = CreateMaybeMessage<::UsersRes>(GetArenaNoVirtual());
    usersres_ = p;
  }
  return usersres_;
}
inline ::UsersRes* S_LoginResByPhone_1003::mutable_usersres() {
  // @@protoc_insertion_point(field_mutable:S_LoginResByPhone_1003.usersRes)
  return _internal_mutable_usersres();
}
inline void S_LoginResByPhone_1003::set_allocated_usersres(::UsersRes* usersres) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete usersres_;
  }
  if (usersres) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      usersres = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, usersres, submessage_arena);
    }
    
  } else {
    
  }
  usersres_ = usersres;
  // @@protoc_insertion_point(field_set_allocated:S_LoginResByPhone_1003.usersRes)
}

// .RetObj retObj = 2;
inline bool S_LoginResByPhone_1003::_internal_has_retobj() const {
  return this != internal_default_instance() && retobj_ != nullptr;
}
inline bool S_LoginResByPhone_1003::has_retobj() const {
  return _internal_has_retobj();
}
inline void S_LoginResByPhone_1003::clear_retobj() {
  if (GetArenaNoVirtual() == nullptr && retobj_ != nullptr) {
    delete retobj_;
  }
  retobj_ = nullptr;
}
inline const ::RetObj& S_LoginResByPhone_1003::_internal_retobj() const {
  const ::RetObj* p = retobj_;
  return p != nullptr ? *p : *reinterpret_cast<const ::RetObj*>(
      &::_RetObj_default_instance_);
}
inline const ::RetObj& S_LoginResByPhone_1003::retobj() const {
  // @@protoc_insertion_point(field_get:S_LoginResByPhone_1003.retObj)
  return _internal_retobj();
}
inline ::RetObj* S_LoginResByPhone_1003::release_retobj() {
  // @@protoc_insertion_point(field_release:S_LoginResByPhone_1003.retObj)
  
  ::RetObj* temp = retobj_;
  retobj_ = nullptr;
  return temp;
}
inline ::RetObj* S_LoginResByPhone_1003::_internal_mutable_retobj() {
  
  if (retobj_ == nullptr) {
    auto* p = CreateMaybeMessage<::RetObj>(GetArenaNoVirtual());
    retobj_ = p;
  }
  return retobj_;
}
inline ::RetObj* S_LoginResByPhone_1003::mutable_retobj() {
  // @@protoc_insertion_point(field_mutable:S_LoginResByPhone_1003.retObj)
  return _internal_mutable_retobj();
}
inline void S_LoginResByPhone_1003::set_allocated_retobj(::RetObj* retobj) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete retobj_;
  }
  if (retobj) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      retobj = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, retobj, submessage_arena);
    }
    
  } else {
    
  }
  retobj_ = retobj;
  // @@protoc_insertion_point(field_set_allocated:S_LoginResByPhone_1003.retObj)
}

// -------------------------------------------------------------------

// C_ChangePwd_1004

// string tel = 1;
inline void C_ChangePwd_1004::clear_tel() {
  tel_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_ChangePwd_1004::tel() const {
  // @@protoc_insertion_point(field_get:C_ChangePwd_1004.tel)
  return _internal_tel();
}
inline void C_ChangePwd_1004::set_tel(const std::string& value) {
  _internal_set_tel(value);
  // @@protoc_insertion_point(field_set:C_ChangePwd_1004.tel)
}
inline std::string* C_ChangePwd_1004::mutable_tel() {
  // @@protoc_insertion_point(field_mutable:C_ChangePwd_1004.tel)
  return _internal_mutable_tel();
}
inline const std::string& C_ChangePwd_1004::_internal_tel() const {
  return tel_.GetNoArena();
}
inline void C_ChangePwd_1004::_internal_set_tel(const std::string& value) {
  
  tel_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_ChangePwd_1004::set_tel(std::string&& value) {
  
  tel_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_ChangePwd_1004.tel)
}
inline void C_ChangePwd_1004::set_tel(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  tel_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_ChangePwd_1004.tel)
}
inline void C_ChangePwd_1004::set_tel(const char* value, size_t size) {
  
  tel_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_ChangePwd_1004.tel)
}
inline std::string* C_ChangePwd_1004::_internal_mutable_tel() {
  
  return tel_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_ChangePwd_1004::release_tel() {
  // @@protoc_insertion_point(field_release:C_ChangePwd_1004.tel)
  
  return tel_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_ChangePwd_1004::set_allocated_tel(std::string* tel) {
  if (tel != nullptr) {
    
  } else {
    
  }
  tel_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tel);
  // @@protoc_insertion_point(field_set_allocated:C_ChangePwd_1004.tel)
}

// string yzm = 2;
inline void C_ChangePwd_1004::clear_yzm() {
  yzm_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_ChangePwd_1004::yzm() const {
  // @@protoc_insertion_point(field_get:C_ChangePwd_1004.yzm)
  return _internal_yzm();
}
inline void C_ChangePwd_1004::set_yzm(const std::string& value) {
  _internal_set_yzm(value);
  // @@protoc_insertion_point(field_set:C_ChangePwd_1004.yzm)
}
inline std::string* C_ChangePwd_1004::mutable_yzm() {
  // @@protoc_insertion_point(field_mutable:C_ChangePwd_1004.yzm)
  return _internal_mutable_yzm();
}
inline const std::string& C_ChangePwd_1004::_internal_yzm() const {
  return yzm_.GetNoArena();
}
inline void C_ChangePwd_1004::_internal_set_yzm(const std::string& value) {
  
  yzm_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_ChangePwd_1004::set_yzm(std::string&& value) {
  
  yzm_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_ChangePwd_1004.yzm)
}
inline void C_ChangePwd_1004::set_yzm(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  yzm_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_ChangePwd_1004.yzm)
}
inline void C_ChangePwd_1004::set_yzm(const char* value, size_t size) {
  
  yzm_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_ChangePwd_1004.yzm)
}
inline std::string* C_ChangePwd_1004::_internal_mutable_yzm() {
  
  return yzm_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_ChangePwd_1004::release_yzm() {
  // @@protoc_insertion_point(field_release:C_ChangePwd_1004.yzm)
  
  return yzm_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_ChangePwd_1004::set_allocated_yzm(std::string* yzm) {
  if (yzm != nullptr) {
    
  } else {
    
  }
  yzm_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), yzm);
  // @@protoc_insertion_point(field_set_allocated:C_ChangePwd_1004.yzm)
}

// string newPwd = 3;
inline void C_ChangePwd_1004::clear_newpwd() {
  newpwd_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_ChangePwd_1004::newpwd() const {
  // @@protoc_insertion_point(field_get:C_ChangePwd_1004.newPwd)
  return _internal_newpwd();
}
inline void C_ChangePwd_1004::set_newpwd(const std::string& value) {
  _internal_set_newpwd(value);
  // @@protoc_insertion_point(field_set:C_ChangePwd_1004.newPwd)
}
inline std::string* C_ChangePwd_1004::mutable_newpwd() {
  // @@protoc_insertion_point(field_mutable:C_ChangePwd_1004.newPwd)
  return _internal_mutable_newpwd();
}
inline const std::string& C_ChangePwd_1004::_internal_newpwd() const {
  return newpwd_.GetNoArena();
}
inline void C_ChangePwd_1004::_internal_set_newpwd(const std::string& value) {
  
  newpwd_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_ChangePwd_1004::set_newpwd(std::string&& value) {
  
  newpwd_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_ChangePwd_1004.newPwd)
}
inline void C_ChangePwd_1004::set_newpwd(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  newpwd_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_ChangePwd_1004.newPwd)
}
inline void C_ChangePwd_1004::set_newpwd(const char* value, size_t size) {
  
  newpwd_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_ChangePwd_1004.newPwd)
}
inline std::string* C_ChangePwd_1004::_internal_mutable_newpwd() {
  
  return newpwd_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_ChangePwd_1004::release_newpwd() {
  // @@protoc_insertion_point(field_release:C_ChangePwd_1004.newPwd)
  
  return newpwd_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_ChangePwd_1004::set_allocated_newpwd(std::string* newpwd) {
  if (newpwd != nullptr) {
    
  } else {
    
  }
  newpwd_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), newpwd);
  // @@protoc_insertion_point(field_set_allocated:C_ChangePwd_1004.newPwd)
}

// -------------------------------------------------------------------

// S_ChangePwd_1005

// .RetObj retObj = 1;
inline bool S_ChangePwd_1005::_internal_has_retobj() const {
  return this != internal_default_instance() && retobj_ != nullptr;
}
inline bool S_ChangePwd_1005::has_retobj() const {
  return _internal_has_retobj();
}
inline void S_ChangePwd_1005::clear_retobj() {
  if (GetArenaNoVirtual() == nullptr && retobj_ != nullptr) {
    delete retobj_;
  }
  retobj_ = nullptr;
}
inline const ::RetObj& S_ChangePwd_1005::_internal_retobj() const {
  const ::RetObj* p = retobj_;
  return p != nullptr ? *p : *reinterpret_cast<const ::RetObj*>(
      &::_RetObj_default_instance_);
}
inline const ::RetObj& S_ChangePwd_1005::retobj() const {
  // @@protoc_insertion_point(field_get:S_ChangePwd_1005.retObj)
  return _internal_retobj();
}
inline ::RetObj* S_ChangePwd_1005::release_retobj() {
  // @@protoc_insertion_point(field_release:S_ChangePwd_1005.retObj)
  
  ::RetObj* temp = retobj_;
  retobj_ = nullptr;
  return temp;
}
inline ::RetObj* S_ChangePwd_1005::_internal_mutable_retobj() {
  
  if (retobj_ == nullptr) {
    auto* p = CreateMaybeMessage<::RetObj>(GetArenaNoVirtual());
    retobj_ = p;
  }
  return retobj_;
}
inline ::RetObj* S_ChangePwd_1005::mutable_retobj() {
  // @@protoc_insertion_point(field_mutable:S_ChangePwd_1005.retObj)
  return _internal_mutable_retobj();
}
inline void S_ChangePwd_1005::set_allocated_retobj(::RetObj* retobj) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete retobj_;
  }
  if (retobj) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      retobj = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, retobj, submessage_arena);
    }
    
  } else {
    
  }
  retobj_ = retobj;
  // @@protoc_insertion_point(field_set_allocated:S_ChangePwd_1005.retObj)
}

// -------------------------------------------------------------------

// C_SaveUserInfo_1006

// fixed64 id = 1;
inline void C_SaveUserInfo_1006::clear_id() {
  id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 C_SaveUserInfo_1006::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 C_SaveUserInfo_1006::id() const {
  // @@protoc_insertion_point(field_get:C_SaveUserInfo_1006.id)
  return _internal_id();
}
inline void C_SaveUserInfo_1006::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  id_ = value;
}
inline void C_SaveUserInfo_1006::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:C_SaveUserInfo_1006.id)
}

// string ssp = 5;
inline void C_SaveUserInfo_1006::clear_ssp() {
  ssp_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_SaveUserInfo_1006::ssp() const {
  // @@protoc_insertion_point(field_get:C_SaveUserInfo_1006.ssp)
  return _internal_ssp();
}
inline void C_SaveUserInfo_1006::set_ssp(const std::string& value) {
  _internal_set_ssp(value);
  // @@protoc_insertion_point(field_set:C_SaveUserInfo_1006.ssp)
}
inline std::string* C_SaveUserInfo_1006::mutable_ssp() {
  // @@protoc_insertion_point(field_mutable:C_SaveUserInfo_1006.ssp)
  return _internal_mutable_ssp();
}
inline const std::string& C_SaveUserInfo_1006::_internal_ssp() const {
  return ssp_.GetNoArena();
}
inline void C_SaveUserInfo_1006::_internal_set_ssp(const std::string& value) {
  
  ssp_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_SaveUserInfo_1006::set_ssp(std::string&& value) {
  
  ssp_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_SaveUserInfo_1006.ssp)
}
inline void C_SaveUserInfo_1006::set_ssp(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  ssp_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_SaveUserInfo_1006.ssp)
}
inline void C_SaveUserInfo_1006::set_ssp(const char* value, size_t size) {
  
  ssp_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_SaveUserInfo_1006.ssp)
}
inline std::string* C_SaveUserInfo_1006::_internal_mutable_ssp() {
  
  return ssp_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_SaveUserInfo_1006::release_ssp() {
  // @@protoc_insertion_point(field_release:C_SaveUserInfo_1006.ssp)
  
  return ssp_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_SaveUserInfo_1006::set_allocated_ssp(std::string* ssp) {
  if (ssp != nullptr) {
    
  } else {
    
  }
  ssp_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ssp);
  // @@protoc_insertion_point(field_set_allocated:C_SaveUserInfo_1006.ssp)
}

// string examYear = 6;
inline void C_SaveUserInfo_1006::clear_examyear() {
  examyear_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_SaveUserInfo_1006::examyear() const {
  // @@protoc_insertion_point(field_get:C_SaveUserInfo_1006.examYear)
  return _internal_examyear();
}
inline void C_SaveUserInfo_1006::set_examyear(const std::string& value) {
  _internal_set_examyear(value);
  // @@protoc_insertion_point(field_set:C_SaveUserInfo_1006.examYear)
}
inline std::string* C_SaveUserInfo_1006::mutable_examyear() {
  // @@protoc_insertion_point(field_mutable:C_SaveUserInfo_1006.examYear)
  return _internal_mutable_examyear();
}
inline const std::string& C_SaveUserInfo_1006::_internal_examyear() const {
  return examyear_.GetNoArena();
}
inline void C_SaveUserInfo_1006::_internal_set_examyear(const std::string& value) {
  
  examyear_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_SaveUserInfo_1006::set_examyear(std::string&& value) {
  
  examyear_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_SaveUserInfo_1006.examYear)
}
inline void C_SaveUserInfo_1006::set_examyear(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  examyear_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_SaveUserInfo_1006.examYear)
}
inline void C_SaveUserInfo_1006::set_examyear(const char* value, size_t size) {
  
  examyear_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_SaveUserInfo_1006.examYear)
}
inline std::string* C_SaveUserInfo_1006::_internal_mutable_examyear() {
  
  return examyear_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_SaveUserInfo_1006::release_examyear() {
  // @@protoc_insertion_point(field_release:C_SaveUserInfo_1006.examYear)
  
  return examyear_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_SaveUserInfo_1006::set_allocated_examyear(std::string* examyear) {
  if (examyear != nullptr) {
    
  } else {
    
  }
  examyear_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), examyear);
  // @@protoc_insertion_point(field_set_allocated:C_SaveUserInfo_1006.examYear)
}

// string examPreScore = 7;
inline void C_SaveUserInfo_1006::clear_examprescore() {
  examprescore_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_SaveUserInfo_1006::examprescore() const {
  // @@protoc_insertion_point(field_get:C_SaveUserInfo_1006.examPreScore)
  return _internal_examprescore();
}
inline void C_SaveUserInfo_1006::set_examprescore(const std::string& value) {
  _internal_set_examprescore(value);
  // @@protoc_insertion_point(field_set:C_SaveUserInfo_1006.examPreScore)
}
inline std::string* C_SaveUserInfo_1006::mutable_examprescore() {
  // @@protoc_insertion_point(field_mutable:C_SaveUserInfo_1006.examPreScore)
  return _internal_mutable_examprescore();
}
inline const std::string& C_SaveUserInfo_1006::_internal_examprescore() const {
  return examprescore_.GetNoArena();
}
inline void C_SaveUserInfo_1006::_internal_set_examprescore(const std::string& value) {
  
  examprescore_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_SaveUserInfo_1006::set_examprescore(std::string&& value) {
  
  examprescore_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_SaveUserInfo_1006.examPreScore)
}
inline void C_SaveUserInfo_1006::set_examprescore(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  examprescore_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_SaveUserInfo_1006.examPreScore)
}
inline void C_SaveUserInfo_1006::set_examprescore(const char* value, size_t size) {
  
  examprescore_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_SaveUserInfo_1006.examPreScore)
}
inline std::string* C_SaveUserInfo_1006::_internal_mutable_examprescore() {
  
  return examprescore_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_SaveUserInfo_1006::release_examprescore() {
  // @@protoc_insertion_point(field_release:C_SaveUserInfo_1006.examPreScore)
  
  return examprescore_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_SaveUserInfo_1006::set_allocated_examprescore(std::string* examprescore) {
  if (examprescore != nullptr) {
    
  } else {
    
  }
  examprescore_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), examprescore);
  // @@protoc_insertion_point(field_set_allocated:C_SaveUserInfo_1006.examPreScore)
}

// string role = 8;
inline void C_SaveUserInfo_1006::clear_role() {
  role_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_SaveUserInfo_1006::role() const {
  // @@protoc_insertion_point(field_get:C_SaveUserInfo_1006.role)
  return _internal_role();
}
inline void C_SaveUserInfo_1006::set_role(const std::string& value) {
  _internal_set_role(value);
  // @@protoc_insertion_point(field_set:C_SaveUserInfo_1006.role)
}
inline std::string* C_SaveUserInfo_1006::mutable_role() {
  // @@protoc_insertion_point(field_mutable:C_SaveUserInfo_1006.role)
  return _internal_mutable_role();
}
inline const std::string& C_SaveUserInfo_1006::_internal_role() const {
  return role_.GetNoArena();
}
inline void C_SaveUserInfo_1006::_internal_set_role(const std::string& value) {
  
  role_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_SaveUserInfo_1006::set_role(std::string&& value) {
  
  role_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_SaveUserInfo_1006.role)
}
inline void C_SaveUserInfo_1006::set_role(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  role_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_SaveUserInfo_1006.role)
}
inline void C_SaveUserInfo_1006::set_role(const char* value, size_t size) {
  
  role_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_SaveUserInfo_1006.role)
}
inline std::string* C_SaveUserInfo_1006::_internal_mutable_role() {
  
  return role_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_SaveUserInfo_1006::release_role() {
  // @@protoc_insertion_point(field_release:C_SaveUserInfo_1006.role)
  
  return role_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_SaveUserInfo_1006::set_allocated_role(std::string* role) {
  if (role != nullptr) {
    
  } else {
    
  }
  role_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), role);
  // @@protoc_insertion_point(field_set_allocated:C_SaveUserInfo_1006.role)
}

// string examSubject = 9;
inline void C_SaveUserInfo_1006::clear_examsubject() {
  examsubject_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_SaveUserInfo_1006::examsubject() const {
  // @@protoc_insertion_point(field_get:C_SaveUserInfo_1006.examSubject)
  return _internal_examsubject();
}
inline void C_SaveUserInfo_1006::set_examsubject(const std::string& value) {
  _internal_set_examsubject(value);
  // @@protoc_insertion_point(field_set:C_SaveUserInfo_1006.examSubject)
}
inline std::string* C_SaveUserInfo_1006::mutable_examsubject() {
  // @@protoc_insertion_point(field_mutable:C_SaveUserInfo_1006.examSubject)
  return _internal_mutable_examsubject();
}
inline const std::string& C_SaveUserInfo_1006::_internal_examsubject() const {
  return examsubject_.GetNoArena();
}
inline void C_SaveUserInfo_1006::_internal_set_examsubject(const std::string& value) {
  
  examsubject_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_SaveUserInfo_1006::set_examsubject(std::string&& value) {
  
  examsubject_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_SaveUserInfo_1006.examSubject)
}
inline void C_SaveUserInfo_1006::set_examsubject(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  examsubject_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_SaveUserInfo_1006.examSubject)
}
inline void C_SaveUserInfo_1006::set_examsubject(const char* value, size_t size) {
  
  examsubject_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_SaveUserInfo_1006.examSubject)
}
inline std::string* C_SaveUserInfo_1006::_internal_mutable_examsubject() {
  
  return examsubject_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_SaveUserInfo_1006::release_examsubject() {
  // @@protoc_insertion_point(field_release:C_SaveUserInfo_1006.examSubject)
  
  return examsubject_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_SaveUserInfo_1006::set_allocated_examsubject(std::string* examsubject) {
  if (examsubject != nullptr) {
    
  } else {
    
  }
  examsubject_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), examsubject);
  // @@protoc_insertion_point(field_set_allocated:C_SaveUserInfo_1006.examSubject)
}

// -------------------------------------------------------------------

// S_SaveUserInfo_1007

// .RetObj retObj = 1;
inline bool S_SaveUserInfo_1007::_internal_has_retobj() const {
  return this != internal_default_instance() && retobj_ != nullptr;
}
inline bool S_SaveUserInfo_1007::has_retobj() const {
  return _internal_has_retobj();
}
inline void S_SaveUserInfo_1007::clear_retobj() {
  if (GetArenaNoVirtual() == nullptr && retobj_ != nullptr) {
    delete retobj_;
  }
  retobj_ = nullptr;
}
inline const ::RetObj& S_SaveUserInfo_1007::_internal_retobj() const {
  const ::RetObj* p = retobj_;
  return p != nullptr ? *p : *reinterpret_cast<const ::RetObj*>(
      &::_RetObj_default_instance_);
}
inline const ::RetObj& S_SaveUserInfo_1007::retobj() const {
  // @@protoc_insertion_point(field_get:S_SaveUserInfo_1007.retObj)
  return _internal_retobj();
}
inline ::RetObj* S_SaveUserInfo_1007::release_retobj() {
  // @@protoc_insertion_point(field_release:S_SaveUserInfo_1007.retObj)
  
  ::RetObj* temp = retobj_;
  retobj_ = nullptr;
  return temp;
}
inline ::RetObj* S_SaveUserInfo_1007::_internal_mutable_retobj() {
  
  if (retobj_ == nullptr) {
    auto* p = CreateMaybeMessage<::RetObj>(GetArenaNoVirtual());
    retobj_ = p;
  }
  return retobj_;
}
inline ::RetObj* S_SaveUserInfo_1007::mutable_retobj() {
  // @@protoc_insertion_point(field_mutable:S_SaveUserInfo_1007.retObj)
  return _internal_mutable_retobj();
}
inline void S_SaveUserInfo_1007::set_allocated_retobj(::RetObj* retobj) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete retobj_;
  }
  if (retobj) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      retobj = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, retobj, submessage_arena);
    }
    
  } else {
    
  }
  retobj_ = retobj;
  // @@protoc_insertion_point(field_set_allocated:S_SaveUserInfo_1007.retObj)
}

// .UsersRes usersRes = 2;
inline bool S_SaveUserInfo_1007::_internal_has_usersres() const {
  return this != internal_default_instance() && usersres_ != nullptr;
}
inline bool S_SaveUserInfo_1007::has_usersres() const {
  return _internal_has_usersres();
}
inline void S_SaveUserInfo_1007::clear_usersres() {
  if (GetArenaNoVirtual() == nullptr && usersres_ != nullptr) {
    delete usersres_;
  }
  usersres_ = nullptr;
}
inline const ::UsersRes& S_SaveUserInfo_1007::_internal_usersres() const {
  const ::UsersRes* p = usersres_;
  return p != nullptr ? *p : *reinterpret_cast<const ::UsersRes*>(
      &::_UsersRes_default_instance_);
}
inline const ::UsersRes& S_SaveUserInfo_1007::usersres() const {
  // @@protoc_insertion_point(field_get:S_SaveUserInfo_1007.usersRes)
  return _internal_usersres();
}
inline ::UsersRes* S_SaveUserInfo_1007::release_usersres() {
  // @@protoc_insertion_point(field_release:S_SaveUserInfo_1007.usersRes)
  
  ::UsersRes* temp = usersres_;
  usersres_ = nullptr;
  return temp;
}
inline ::UsersRes* S_SaveUserInfo_1007::_internal_mutable_usersres() {
  
  if (usersres_ == nullptr) {
    auto* p = CreateMaybeMessage<::UsersRes>(GetArenaNoVirtual());
    usersres_ = p;
  }
  return usersres_;
}
inline ::UsersRes* S_SaveUserInfo_1007::mutable_usersres() {
  // @@protoc_insertion_point(field_mutable:S_SaveUserInfo_1007.usersRes)
  return _internal_mutable_usersres();
}
inline void S_SaveUserInfo_1007::set_allocated_usersres(::UsersRes* usersres) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete usersres_;
  }
  if (usersres) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      usersres = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, usersres, submessage_arena);
    }
    
  } else {
    
  }
  usersres_ = usersres;
  // @@protoc_insertion_point(field_set_allocated:S_SaveUserInfo_1007.usersRes)
}

// -------------------------------------------------------------------

// C_GetSchoolStoreUpResList_1008

// fixed64 userID = 1;
inline void C_GetSchoolStoreUpResList_1008::clear_userid() {
  userid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 C_GetSchoolStoreUpResList_1008::_internal_userid() const {
  return userid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 C_GetSchoolStoreUpResList_1008::userid() const {
  // @@protoc_insertion_point(field_get:C_GetSchoolStoreUpResList_1008.userID)
  return _internal_userid();
}
inline void C_GetSchoolStoreUpResList_1008::_internal_set_userid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  userid_ = value;
}
inline void C_GetSchoolStoreUpResList_1008::set_userid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_userid(value);
  // @@protoc_insertion_point(field_set:C_GetSchoolStoreUpResList_1008.userID)
}

// -------------------------------------------------------------------

// S_GetSchoolStoreUpResList_1009

// repeated .SchoolStoreUpRes schoolStoreUpResList = 1;
inline int S_GetSchoolStoreUpResList_1009::_internal_schoolstoreupreslist_size() const {
  return schoolstoreupreslist_.size();
}
inline int S_GetSchoolStoreUpResList_1009::schoolstoreupreslist_size() const {
  return _internal_schoolstoreupreslist_size();
}
inline void S_GetSchoolStoreUpResList_1009::clear_schoolstoreupreslist() {
  schoolstoreupreslist_.Clear();
}
inline ::SchoolStoreUpRes* S_GetSchoolStoreUpResList_1009::mutable_schoolstoreupreslist(int index) {
  // @@protoc_insertion_point(field_mutable:S_GetSchoolStoreUpResList_1009.schoolStoreUpResList)
  return schoolstoreupreslist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SchoolStoreUpRes >*
S_GetSchoolStoreUpResList_1009::mutable_schoolstoreupreslist() {
  // @@protoc_insertion_point(field_mutable_list:S_GetSchoolStoreUpResList_1009.schoolStoreUpResList)
  return &schoolstoreupreslist_;
}
inline const ::SchoolStoreUpRes& S_GetSchoolStoreUpResList_1009::_internal_schoolstoreupreslist(int index) const {
  return schoolstoreupreslist_.Get(index);
}
inline const ::SchoolStoreUpRes& S_GetSchoolStoreUpResList_1009::schoolstoreupreslist(int index) const {
  // @@protoc_insertion_point(field_get:S_GetSchoolStoreUpResList_1009.schoolStoreUpResList)
  return _internal_schoolstoreupreslist(index);
}
inline ::SchoolStoreUpRes* S_GetSchoolStoreUpResList_1009::_internal_add_schoolstoreupreslist() {
  return schoolstoreupreslist_.Add();
}
inline ::SchoolStoreUpRes* S_GetSchoolStoreUpResList_1009::add_schoolstoreupreslist() {
  // @@protoc_insertion_point(field_add:S_GetSchoolStoreUpResList_1009.schoolStoreUpResList)
  return _internal_add_schoolstoreupreslist();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SchoolStoreUpRes >&
S_GetSchoolStoreUpResList_1009::schoolstoreupreslist() const {
  // @@protoc_insertion_point(field_list:S_GetSchoolStoreUpResList_1009.schoolStoreUpResList)
  return schoolstoreupreslist_;
}

// -------------------------------------------------------------------

// C_GetDisciplineStoreUpResList_1020

// fixed64 userID = 1;
inline void C_GetDisciplineStoreUpResList_1020::clear_userid() {
  userid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 C_GetDisciplineStoreUpResList_1020::_internal_userid() const {
  return userid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 C_GetDisciplineStoreUpResList_1020::userid() const {
  // @@protoc_insertion_point(field_get:C_GetDisciplineStoreUpResList_1020.userID)
  return _internal_userid();
}
inline void C_GetDisciplineStoreUpResList_1020::_internal_set_userid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  userid_ = value;
}
inline void C_GetDisciplineStoreUpResList_1020::set_userid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_userid(value);
  // @@protoc_insertion_point(field_set:C_GetDisciplineStoreUpResList_1020.userID)
}

// -------------------------------------------------------------------

// S_GetDisciplineStoreUpResList_1021

// repeated .DisciplineStoreUpRes disciplineStoreUpResLis = 1;
inline int S_GetDisciplineStoreUpResList_1021::_internal_disciplinestoreupreslis_size() const {
  return disciplinestoreupreslis_.size();
}
inline int S_GetDisciplineStoreUpResList_1021::disciplinestoreupreslis_size() const {
  return _internal_disciplinestoreupreslis_size();
}
inline void S_GetDisciplineStoreUpResList_1021::clear_disciplinestoreupreslis() {
  disciplinestoreupreslis_.Clear();
}
inline ::DisciplineStoreUpRes* S_GetDisciplineStoreUpResList_1021::mutable_disciplinestoreupreslis(int index) {
  // @@protoc_insertion_point(field_mutable:S_GetDisciplineStoreUpResList_1021.disciplineStoreUpResLis)
  return disciplinestoreupreslis_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DisciplineStoreUpRes >*
S_GetDisciplineStoreUpResList_1021::mutable_disciplinestoreupreslis() {
  // @@protoc_insertion_point(field_mutable_list:S_GetDisciplineStoreUpResList_1021.disciplineStoreUpResLis)
  return &disciplinestoreupreslis_;
}
inline const ::DisciplineStoreUpRes& S_GetDisciplineStoreUpResList_1021::_internal_disciplinestoreupreslis(int index) const {
  return disciplinestoreupreslis_.Get(index);
}
inline const ::DisciplineStoreUpRes& S_GetDisciplineStoreUpResList_1021::disciplinestoreupreslis(int index) const {
  // @@protoc_insertion_point(field_get:S_GetDisciplineStoreUpResList_1021.disciplineStoreUpResLis)
  return _internal_disciplinestoreupreslis(index);
}
inline ::DisciplineStoreUpRes* S_GetDisciplineStoreUpResList_1021::_internal_add_disciplinestoreupreslis() {
  return disciplinestoreupreslis_.Add();
}
inline ::DisciplineStoreUpRes* S_GetDisciplineStoreUpResList_1021::add_disciplinestoreupreslis() {
  // @@protoc_insertion_point(field_add:S_GetDisciplineStoreUpResList_1021.disciplineStoreUpResLis)
  return _internal_add_disciplinestoreupreslis();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DisciplineStoreUpRes >&
S_GetDisciplineStoreUpResList_1021::disciplinestoreupreslis() const {
  // @@protoc_insertion_point(field_list:S_GetDisciplineStoreUpResList_1021.disciplineStoreUpResLis)
  return disciplinestoreupreslis_;
}

// -------------------------------------------------------------------

// C_GetSchoolContrastResList_1022

// fixed64 userID = 1;
inline void C_GetSchoolContrastResList_1022::clear_userid() {
  userid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 C_GetSchoolContrastResList_1022::_internal_userid() const {
  return userid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 C_GetSchoolContrastResList_1022::userid() const {
  // @@protoc_insertion_point(field_get:C_GetSchoolContrastResList_1022.userID)
  return _internal_userid();
}
inline void C_GetSchoolContrastResList_1022::_internal_set_userid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  userid_ = value;
}
inline void C_GetSchoolContrastResList_1022::set_userid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_userid(value);
  // @@protoc_insertion_point(field_set:C_GetSchoolContrastResList_1022.userID)
}

// -------------------------------------------------------------------

// S_GetSchoolContrastResList_1023

// repeated .SchoolContrastRes schoolContrastResList = 1;
inline int S_GetSchoolContrastResList_1023::_internal_schoolcontrastreslist_size() const {
  return schoolcontrastreslist_.size();
}
inline int S_GetSchoolContrastResList_1023::schoolcontrastreslist_size() const {
  return _internal_schoolcontrastreslist_size();
}
inline void S_GetSchoolContrastResList_1023::clear_schoolcontrastreslist() {
  schoolcontrastreslist_.Clear();
}
inline ::SchoolContrastRes* S_GetSchoolContrastResList_1023::mutable_schoolcontrastreslist(int index) {
  // @@protoc_insertion_point(field_mutable:S_GetSchoolContrastResList_1023.schoolContrastResList)
  return schoolcontrastreslist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SchoolContrastRes >*
S_GetSchoolContrastResList_1023::mutable_schoolcontrastreslist() {
  // @@protoc_insertion_point(field_mutable_list:S_GetSchoolContrastResList_1023.schoolContrastResList)
  return &schoolcontrastreslist_;
}
inline const ::SchoolContrastRes& S_GetSchoolContrastResList_1023::_internal_schoolcontrastreslist(int index) const {
  return schoolcontrastreslist_.Get(index);
}
inline const ::SchoolContrastRes& S_GetSchoolContrastResList_1023::schoolcontrastreslist(int index) const {
  // @@protoc_insertion_point(field_get:S_GetSchoolContrastResList_1023.schoolContrastResList)
  return _internal_schoolcontrastreslist(index);
}
inline ::SchoolContrastRes* S_GetSchoolContrastResList_1023::_internal_add_schoolcontrastreslist() {
  return schoolcontrastreslist_.Add();
}
inline ::SchoolContrastRes* S_GetSchoolContrastResList_1023::add_schoolcontrastreslist() {
  // @@protoc_insertion_point(field_add:S_GetSchoolContrastResList_1023.schoolContrastResList)
  return _internal_add_schoolcontrastreslist();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SchoolContrastRes >&
S_GetSchoolContrastResList_1023::schoolcontrastreslist() const {
  // @@protoc_insertion_point(field_list:S_GetSchoolContrastResList_1023.schoolContrastResList)
  return schoolcontrastreslist_;
}

// -------------------------------------------------------------------

// C_GetDisciplineContrastResList_1024

// fixed64 userID = 1;
inline void C_GetDisciplineContrastResList_1024::clear_userid() {
  userid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 C_GetDisciplineContrastResList_1024::_internal_userid() const {
  return userid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 C_GetDisciplineContrastResList_1024::userid() const {
  // @@protoc_insertion_point(field_get:C_GetDisciplineContrastResList_1024.userID)
  return _internal_userid();
}
inline void C_GetDisciplineContrastResList_1024::_internal_set_userid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  userid_ = value;
}
inline void C_GetDisciplineContrastResList_1024::set_userid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_userid(value);
  // @@protoc_insertion_point(field_set:C_GetDisciplineContrastResList_1024.userID)
}

// -------------------------------------------------------------------

// S_GetDisciplineContrastResList_1025

// repeated .DisciplineContrastRes disciplineContrastRes = 1;
inline int S_GetDisciplineContrastResList_1025::_internal_disciplinecontrastres_size() const {
  return disciplinecontrastres_.size();
}
inline int S_GetDisciplineContrastResList_1025::disciplinecontrastres_size() const {
  return _internal_disciplinecontrastres_size();
}
inline void S_GetDisciplineContrastResList_1025::clear_disciplinecontrastres() {
  disciplinecontrastres_.Clear();
}
inline ::DisciplineContrastRes* S_GetDisciplineContrastResList_1025::mutable_disciplinecontrastres(int index) {
  // @@protoc_insertion_point(field_mutable:S_GetDisciplineContrastResList_1025.disciplineContrastRes)
  return disciplinecontrastres_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DisciplineContrastRes >*
S_GetDisciplineContrastResList_1025::mutable_disciplinecontrastres() {
  // @@protoc_insertion_point(field_mutable_list:S_GetDisciplineContrastResList_1025.disciplineContrastRes)
  return &disciplinecontrastres_;
}
inline const ::DisciplineContrastRes& S_GetDisciplineContrastResList_1025::_internal_disciplinecontrastres(int index) const {
  return disciplinecontrastres_.Get(index);
}
inline const ::DisciplineContrastRes& S_GetDisciplineContrastResList_1025::disciplinecontrastres(int index) const {
  // @@protoc_insertion_point(field_get:S_GetDisciplineContrastResList_1025.disciplineContrastRes)
  return _internal_disciplinecontrastres(index);
}
inline ::DisciplineContrastRes* S_GetDisciplineContrastResList_1025::_internal_add_disciplinecontrastres() {
  return disciplinecontrastres_.Add();
}
inline ::DisciplineContrastRes* S_GetDisciplineContrastResList_1025::add_disciplinecontrastres() {
  // @@protoc_insertion_point(field_add:S_GetDisciplineContrastResList_1025.disciplineContrastRes)
  return _internal_add_disciplinecontrastres();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DisciplineContrastRes >&
S_GetDisciplineContrastResList_1025::disciplinecontrastres() const {
  // @@protoc_insertion_point(field_list:S_GetDisciplineContrastResList_1025.disciplineContrastRes)
  return disciplinecontrastres_;
}

// -------------------------------------------------------------------

// C_SaveAssessment_1026

// fixed64 id = 1;
inline void C_SaveAssessment_1026::clear_id() {
  id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 C_SaveAssessment_1026::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 C_SaveAssessment_1026::id() const {
  // @@protoc_insertion_point(field_get:C_SaveAssessment_1026.id)
  return _internal_id();
}
inline void C_SaveAssessment_1026::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  id_ = value;
}
inline void C_SaveAssessment_1026::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:C_SaveAssessment_1026.id)
}

// string examPreScore = 7;
inline void C_SaveAssessment_1026::clear_examprescore() {
  examprescore_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_SaveAssessment_1026::examprescore() const {
  // @@protoc_insertion_point(field_get:C_SaveAssessment_1026.examPreScore)
  return _internal_examprescore();
}
inline void C_SaveAssessment_1026::set_examprescore(const std::string& value) {
  _internal_set_examprescore(value);
  // @@protoc_insertion_point(field_set:C_SaveAssessment_1026.examPreScore)
}
inline std::string* C_SaveAssessment_1026::mutable_examprescore() {
  // @@protoc_insertion_point(field_mutable:C_SaveAssessment_1026.examPreScore)
  return _internal_mutable_examprescore();
}
inline const std::string& C_SaveAssessment_1026::_internal_examprescore() const {
  return examprescore_.GetNoArena();
}
inline void C_SaveAssessment_1026::_internal_set_examprescore(const std::string& value) {
  
  examprescore_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_SaveAssessment_1026::set_examprescore(std::string&& value) {
  
  examprescore_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_SaveAssessment_1026.examPreScore)
}
inline void C_SaveAssessment_1026::set_examprescore(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  examprescore_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_SaveAssessment_1026.examPreScore)
}
inline void C_SaveAssessment_1026::set_examprescore(const char* value, size_t size) {
  
  examprescore_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_SaveAssessment_1026.examPreScore)
}
inline std::string* C_SaveAssessment_1026::_internal_mutable_examprescore() {
  
  return examprescore_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_SaveAssessment_1026::release_examprescore() {
  // @@protoc_insertion_point(field_release:C_SaveAssessment_1026.examPreScore)
  
  return examprescore_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_SaveAssessment_1026::set_allocated_examprescore(std::string* examprescore) {
  if (examprescore != nullptr) {
    
  } else {
    
  }
  examprescore_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), examprescore);
  // @@protoc_insertion_point(field_set_allocated:C_SaveAssessment_1026.examPreScore)
}

// -------------------------------------------------------------------

// S_SaveAssessment_1027

// .RetObj retObj = 7;
inline bool S_SaveAssessment_1027::_internal_has_retobj() const {
  return this != internal_default_instance() && retobj_ != nullptr;
}
inline bool S_SaveAssessment_1027::has_retobj() const {
  return _internal_has_retobj();
}
inline void S_SaveAssessment_1027::clear_retobj() {
  if (GetArenaNoVirtual() == nullptr && retobj_ != nullptr) {
    delete retobj_;
  }
  retobj_ = nullptr;
}
inline const ::RetObj& S_SaveAssessment_1027::_internal_retobj() const {
  const ::RetObj* p = retobj_;
  return p != nullptr ? *p : *reinterpret_cast<const ::RetObj*>(
      &::_RetObj_default_instance_);
}
inline const ::RetObj& S_SaveAssessment_1027::retobj() const {
  // @@protoc_insertion_point(field_get:S_SaveAssessment_1027.retObj)
  return _internal_retobj();
}
inline ::RetObj* S_SaveAssessment_1027::release_retobj() {
  // @@protoc_insertion_point(field_release:S_SaveAssessment_1027.retObj)
  
  ::RetObj* temp = retobj_;
  retobj_ = nullptr;
  return temp;
}
inline ::RetObj* S_SaveAssessment_1027::_internal_mutable_retobj() {
  
  if (retobj_ == nullptr) {
    auto* p = CreateMaybeMessage<::RetObj>(GetArenaNoVirtual());
    retobj_ = p;
  }
  return retobj_;
}
inline ::RetObj* S_SaveAssessment_1027::mutable_retobj() {
  // @@protoc_insertion_point(field_mutable:S_SaveAssessment_1027.retObj)
  return _internal_mutable_retobj();
}
inline void S_SaveAssessment_1027::set_allocated_retobj(::RetObj* retobj) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete retobj_;
  }
  if (retobj) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      retobj = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, retobj, submessage_arena);
    }
    
  } else {
    
  }
  retobj_ = retobj;
  // @@protoc_insertion_point(field_set_allocated:S_SaveAssessment_1027.retObj)
}

// -------------------------------------------------------------------

// C_SaveUserInfo_1028

// fixed64 id = 1;
inline void C_SaveUserInfo_1028::clear_id() {
  id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 C_SaveUserInfo_1028::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 C_SaveUserInfo_1028::id() const {
  // @@protoc_insertion_point(field_get:C_SaveUserInfo_1028.id)
  return _internal_id();
}
inline void C_SaveUserInfo_1028::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  id_ = value;
}
inline void C_SaveUserInfo_1028::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:C_SaveUserInfo_1028.id)
}

// string examSubject = 7;
inline void C_SaveUserInfo_1028::clear_examsubject() {
  examsubject_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_SaveUserInfo_1028::examsubject() const {
  // @@protoc_insertion_point(field_get:C_SaveUserInfo_1028.examSubject)
  return _internal_examsubject();
}
inline void C_SaveUserInfo_1028::set_examsubject(const std::string& value) {
  _internal_set_examsubject(value);
  // @@protoc_insertion_point(field_set:C_SaveUserInfo_1028.examSubject)
}
inline std::string* C_SaveUserInfo_1028::mutable_examsubject() {
  // @@protoc_insertion_point(field_mutable:C_SaveUserInfo_1028.examSubject)
  return _internal_mutable_examsubject();
}
inline const std::string& C_SaveUserInfo_1028::_internal_examsubject() const {
  return examsubject_.GetNoArena();
}
inline void C_SaveUserInfo_1028::_internal_set_examsubject(const std::string& value) {
  
  examsubject_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_SaveUserInfo_1028::set_examsubject(std::string&& value) {
  
  examsubject_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_SaveUserInfo_1028.examSubject)
}
inline void C_SaveUserInfo_1028::set_examsubject(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  examsubject_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_SaveUserInfo_1028.examSubject)
}
inline void C_SaveUserInfo_1028::set_examsubject(const char* value, size_t size) {
  
  examsubject_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_SaveUserInfo_1028.examSubject)
}
inline std::string* C_SaveUserInfo_1028::_internal_mutable_examsubject() {
  
  return examsubject_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_SaveUserInfo_1028::release_examsubject() {
  // @@protoc_insertion_point(field_release:C_SaveUserInfo_1028.examSubject)
  
  return examsubject_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_SaveUserInfo_1028::set_allocated_examsubject(std::string* examsubject) {
  if (examsubject != nullptr) {
    
  } else {
    
  }
  examsubject_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), examsubject);
  // @@protoc_insertion_point(field_set_allocated:C_SaveUserInfo_1028.examSubject)
}

// -------------------------------------------------------------------

// S_SaveUserInfo_1029

// .RetObj retObj = 7;
inline bool S_SaveUserInfo_1029::_internal_has_retobj() const {
  return this != internal_default_instance() && retobj_ != nullptr;
}
inline bool S_SaveUserInfo_1029::has_retobj() const {
  return _internal_has_retobj();
}
inline void S_SaveUserInfo_1029::clear_retobj() {
  if (GetArenaNoVirtual() == nullptr && retobj_ != nullptr) {
    delete retobj_;
  }
  retobj_ = nullptr;
}
inline const ::RetObj& S_SaveUserInfo_1029::_internal_retobj() const {
  const ::RetObj* p = retobj_;
  return p != nullptr ? *p : *reinterpret_cast<const ::RetObj*>(
      &::_RetObj_default_instance_);
}
inline const ::RetObj& S_SaveUserInfo_1029::retobj() const {
  // @@protoc_insertion_point(field_get:S_SaveUserInfo_1029.retObj)
  return _internal_retobj();
}
inline ::RetObj* S_SaveUserInfo_1029::release_retobj() {
  // @@protoc_insertion_point(field_release:S_SaveUserInfo_1029.retObj)
  
  ::RetObj* temp = retobj_;
  retobj_ = nullptr;
  return temp;
}
inline ::RetObj* S_SaveUserInfo_1029::_internal_mutable_retobj() {
  
  if (retobj_ == nullptr) {
    auto* p = CreateMaybeMessage<::RetObj>(GetArenaNoVirtual());
    retobj_ = p;
  }
  return retobj_;
}
inline ::RetObj* S_SaveUserInfo_1029::mutable_retobj() {
  // @@protoc_insertion_point(field_mutable:S_SaveUserInfo_1029.retObj)
  return _internal_mutable_retobj();
}
inline void S_SaveUserInfo_1029::set_allocated_retobj(::RetObj* retobj) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete retobj_;
  }
  if (retobj) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      retobj = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, retobj, submessage_arena);
    }
    
  } else {
    
  }
  retobj_ = retobj;
  // @@protoc_insertion_point(field_set_allocated:S_SaveUserInfo_1029.retObj)
}

// -------------------------------------------------------------------

// RetObj

// fixed64 resCode = 1;
inline void RetObj::clear_rescode() {
  rescode_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 RetObj::_internal_rescode() const {
  return rescode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 RetObj::rescode() const {
  // @@protoc_insertion_point(field_get:RetObj.resCode)
  return _internal_rescode();
}
inline void RetObj::_internal_set_rescode(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  rescode_ = value;
}
inline void RetObj::set_rescode(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_rescode(value);
  // @@protoc_insertion_point(field_set:RetObj.resCode)
}

// fixed64 resInfo = 2;
inline void RetObj::clear_resinfo() {
  resinfo_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 RetObj::_internal_resinfo() const {
  return resinfo_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 RetObj::resinfo() const {
  // @@protoc_insertion_point(field_get:RetObj.resInfo)
  return _internal_resinfo();
}
inline void RetObj::_internal_set_resinfo(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  resinfo_ = value;
}
inline void RetObj::set_resinfo(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_resinfo(value);
  // @@protoc_insertion_point(field_set:RetObj.resInfo)
}

// -------------------------------------------------------------------

// UsersRes

// fixed64 id = 1;
inline void UsersRes::clear_id() {
  id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 UsersRes::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 UsersRes::id() const {
  // @@protoc_insertion_point(field_get:UsersRes.id)
  return _internal_id();
}
inline void UsersRes::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  id_ = value;
}
inline void UsersRes::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:UsersRes.id)
}

// string tel = 2;
inline void UsersRes::clear_tel() {
  tel_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& UsersRes::tel() const {
  // @@protoc_insertion_point(field_get:UsersRes.tel)
  return _internal_tel();
}
inline void UsersRes::set_tel(const std::string& value) {
  _internal_set_tel(value);
  // @@protoc_insertion_point(field_set:UsersRes.tel)
}
inline std::string* UsersRes::mutable_tel() {
  // @@protoc_insertion_point(field_mutable:UsersRes.tel)
  return _internal_mutable_tel();
}
inline const std::string& UsersRes::_internal_tel() const {
  return tel_.GetNoArena();
}
inline void UsersRes::_internal_set_tel(const std::string& value) {
  
  tel_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void UsersRes::set_tel(std::string&& value) {
  
  tel_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UsersRes.tel)
}
inline void UsersRes::set_tel(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  tel_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UsersRes.tel)
}
inline void UsersRes::set_tel(const char* value, size_t size) {
  
  tel_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UsersRes.tel)
}
inline std::string* UsersRes::_internal_mutable_tel() {
  
  return tel_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* UsersRes::release_tel() {
  // @@protoc_insertion_point(field_release:UsersRes.tel)
  
  return tel_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void UsersRes::set_allocated_tel(std::string* tel) {
  if (tel != nullptr) {
    
  } else {
    
  }
  tel_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tel);
  // @@protoc_insertion_point(field_set_allocated:UsersRes.tel)
}

// string picPath1 = 3;
inline void UsersRes::clear_picpath1() {
  picpath1_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& UsersRes::picpath1() const {
  // @@protoc_insertion_point(field_get:UsersRes.picPath1)
  return _internal_picpath1();
}
inline void UsersRes::set_picpath1(const std::string& value) {
  _internal_set_picpath1(value);
  // @@protoc_insertion_point(field_set:UsersRes.picPath1)
}
inline std::string* UsersRes::mutable_picpath1() {
  // @@protoc_insertion_point(field_mutable:UsersRes.picPath1)
  return _internal_mutable_picpath1();
}
inline const std::string& UsersRes::_internal_picpath1() const {
  return picpath1_.GetNoArena();
}
inline void UsersRes::_internal_set_picpath1(const std::string& value) {
  
  picpath1_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void UsersRes::set_picpath1(std::string&& value) {
  
  picpath1_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UsersRes.picPath1)
}
inline void UsersRes::set_picpath1(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  picpath1_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UsersRes.picPath1)
}
inline void UsersRes::set_picpath1(const char* value, size_t size) {
  
  picpath1_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UsersRes.picPath1)
}
inline std::string* UsersRes::_internal_mutable_picpath1() {
  
  return picpath1_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* UsersRes::release_picpath1() {
  // @@protoc_insertion_point(field_release:UsersRes.picPath1)
  
  return picpath1_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void UsersRes::set_allocated_picpath1(std::string* picpath1) {
  if (picpath1 != nullptr) {
    
  } else {
    
  }
  picpath1_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), picpath1);
  // @@protoc_insertion_point(field_set_allocated:UsersRes.picPath1)
}

// string pwd = 4;
inline void UsersRes::clear_pwd() {
  pwd_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& UsersRes::pwd() const {
  // @@protoc_insertion_point(field_get:UsersRes.pwd)
  return _internal_pwd();
}
inline void UsersRes::set_pwd(const std::string& value) {
  _internal_set_pwd(value);
  // @@protoc_insertion_point(field_set:UsersRes.pwd)
}
inline std::string* UsersRes::mutable_pwd() {
  // @@protoc_insertion_point(field_mutable:UsersRes.pwd)
  return _internal_mutable_pwd();
}
inline const std::string& UsersRes::_internal_pwd() const {
  return pwd_.GetNoArena();
}
inline void UsersRes::_internal_set_pwd(const std::string& value) {
  
  pwd_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void UsersRes::set_pwd(std::string&& value) {
  
  pwd_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UsersRes.pwd)
}
inline void UsersRes::set_pwd(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pwd_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UsersRes.pwd)
}
inline void UsersRes::set_pwd(const char* value, size_t size) {
  
  pwd_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UsersRes.pwd)
}
inline std::string* UsersRes::_internal_mutable_pwd() {
  
  return pwd_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* UsersRes::release_pwd() {
  // @@protoc_insertion_point(field_release:UsersRes.pwd)
  
  return pwd_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void UsersRes::set_allocated_pwd(std::string* pwd) {
  if (pwd != nullptr) {
    
  } else {
    
  }
  pwd_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pwd);
  // @@protoc_insertion_point(field_set_allocated:UsersRes.pwd)
}

// string ssp = 5;
inline void UsersRes::clear_ssp() {
  ssp_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& UsersRes::ssp() const {
  // @@protoc_insertion_point(field_get:UsersRes.ssp)
  return _internal_ssp();
}
inline void UsersRes::set_ssp(const std::string& value) {
  _internal_set_ssp(value);
  // @@protoc_insertion_point(field_set:UsersRes.ssp)
}
inline std::string* UsersRes::mutable_ssp() {
  // @@protoc_insertion_point(field_mutable:UsersRes.ssp)
  return _internal_mutable_ssp();
}
inline const std::string& UsersRes::_internal_ssp() const {
  return ssp_.GetNoArena();
}
inline void UsersRes::_internal_set_ssp(const std::string& value) {
  
  ssp_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void UsersRes::set_ssp(std::string&& value) {
  
  ssp_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UsersRes.ssp)
}
inline void UsersRes::set_ssp(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  ssp_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UsersRes.ssp)
}
inline void UsersRes::set_ssp(const char* value, size_t size) {
  
  ssp_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UsersRes.ssp)
}
inline std::string* UsersRes::_internal_mutable_ssp() {
  
  return ssp_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* UsersRes::release_ssp() {
  // @@protoc_insertion_point(field_release:UsersRes.ssp)
  
  return ssp_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void UsersRes::set_allocated_ssp(std::string* ssp) {
  if (ssp != nullptr) {
    
  } else {
    
  }
  ssp_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ssp);
  // @@protoc_insertion_point(field_set_allocated:UsersRes.ssp)
}

// string examYear = 6;
inline void UsersRes::clear_examyear() {
  examyear_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& UsersRes::examyear() const {
  // @@protoc_insertion_point(field_get:UsersRes.examYear)
  return _internal_examyear();
}
inline void UsersRes::set_examyear(const std::string& value) {
  _internal_set_examyear(value);
  // @@protoc_insertion_point(field_set:UsersRes.examYear)
}
inline std::string* UsersRes::mutable_examyear() {
  // @@protoc_insertion_point(field_mutable:UsersRes.examYear)
  return _internal_mutable_examyear();
}
inline const std::string& UsersRes::_internal_examyear() const {
  return examyear_.GetNoArena();
}
inline void UsersRes::_internal_set_examyear(const std::string& value) {
  
  examyear_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void UsersRes::set_examyear(std::string&& value) {
  
  examyear_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UsersRes.examYear)
}
inline void UsersRes::set_examyear(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  examyear_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UsersRes.examYear)
}
inline void UsersRes::set_examyear(const char* value, size_t size) {
  
  examyear_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UsersRes.examYear)
}
inline std::string* UsersRes::_internal_mutable_examyear() {
  
  return examyear_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* UsersRes::release_examyear() {
  // @@protoc_insertion_point(field_release:UsersRes.examYear)
  
  return examyear_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void UsersRes::set_allocated_examyear(std::string* examyear) {
  if (examyear != nullptr) {
    
  } else {
    
  }
  examyear_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), examyear);
  // @@protoc_insertion_point(field_set_allocated:UsersRes.examYear)
}

// string examPreScore = 7;
inline void UsersRes::clear_examprescore() {
  examprescore_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& UsersRes::examprescore() const {
  // @@protoc_insertion_point(field_get:UsersRes.examPreScore)
  return _internal_examprescore();
}
inline void UsersRes::set_examprescore(const std::string& value) {
  _internal_set_examprescore(value);
  // @@protoc_insertion_point(field_set:UsersRes.examPreScore)
}
inline std::string* UsersRes::mutable_examprescore() {
  // @@protoc_insertion_point(field_mutable:UsersRes.examPreScore)
  return _internal_mutable_examprescore();
}
inline const std::string& UsersRes::_internal_examprescore() const {
  return examprescore_.GetNoArena();
}
inline void UsersRes::_internal_set_examprescore(const std::string& value) {
  
  examprescore_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void UsersRes::set_examprescore(std::string&& value) {
  
  examprescore_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UsersRes.examPreScore)
}
inline void UsersRes::set_examprescore(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  examprescore_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UsersRes.examPreScore)
}
inline void UsersRes::set_examprescore(const char* value, size_t size) {
  
  examprescore_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UsersRes.examPreScore)
}
inline std::string* UsersRes::_internal_mutable_examprescore() {
  
  return examprescore_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* UsersRes::release_examprescore() {
  // @@protoc_insertion_point(field_release:UsersRes.examPreScore)
  
  return examprescore_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void UsersRes::set_allocated_examprescore(std::string* examprescore) {
  if (examprescore != nullptr) {
    
  } else {
    
  }
  examprescore_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), examprescore);
  // @@protoc_insertion_point(field_set_allocated:UsersRes.examPreScore)
}

// string role = 8;
inline void UsersRes::clear_role() {
  role_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& UsersRes::role() const {
  // @@protoc_insertion_point(field_get:UsersRes.role)
  return _internal_role();
}
inline void UsersRes::set_role(const std::string& value) {
  _internal_set_role(value);
  // @@protoc_insertion_point(field_set:UsersRes.role)
}
inline std::string* UsersRes::mutable_role() {
  // @@protoc_insertion_point(field_mutable:UsersRes.role)
  return _internal_mutable_role();
}
inline const std::string& UsersRes::_internal_role() const {
  return role_.GetNoArena();
}
inline void UsersRes::_internal_set_role(const std::string& value) {
  
  role_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void UsersRes::set_role(std::string&& value) {
  
  role_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UsersRes.role)
}
inline void UsersRes::set_role(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  role_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UsersRes.role)
}
inline void UsersRes::set_role(const char* value, size_t size) {
  
  role_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UsersRes.role)
}
inline std::string* UsersRes::_internal_mutable_role() {
  
  return role_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* UsersRes::release_role() {
  // @@protoc_insertion_point(field_release:UsersRes.role)
  
  return role_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void UsersRes::set_allocated_role(std::string* role) {
  if (role != nullptr) {
    
  } else {
    
  }
  role_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), role);
  // @@protoc_insertion_point(field_set_allocated:UsersRes.role)
}

// string examSubject = 9;
inline void UsersRes::clear_examsubject() {
  examsubject_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& UsersRes::examsubject() const {
  // @@protoc_insertion_point(field_get:UsersRes.examSubject)
  return _internal_examsubject();
}
inline void UsersRes::set_examsubject(const std::string& value) {
  _internal_set_examsubject(value);
  // @@protoc_insertion_point(field_set:UsersRes.examSubject)
}
inline std::string* UsersRes::mutable_examsubject() {
  // @@protoc_insertion_point(field_mutable:UsersRes.examSubject)
  return _internal_mutable_examsubject();
}
inline const std::string& UsersRes::_internal_examsubject() const {
  return examsubject_.GetNoArena();
}
inline void UsersRes::_internal_set_examsubject(const std::string& value) {
  
  examsubject_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void UsersRes::set_examsubject(std::string&& value) {
  
  examsubject_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UsersRes.examSubject)
}
inline void UsersRes::set_examsubject(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  examsubject_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UsersRes.examSubject)
}
inline void UsersRes::set_examsubject(const char* value, size_t size) {
  
  examsubject_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UsersRes.examSubject)
}
inline std::string* UsersRes::_internal_mutable_examsubject() {
  
  return examsubject_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* UsersRes::release_examsubject() {
  // @@protoc_insertion_point(field_release:UsersRes.examSubject)
  
  return examsubject_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void UsersRes::set_allocated_examsubject(std::string* examsubject) {
  if (examsubject != nullptr) {
    
  } else {
    
  }
  examsubject_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), examsubject);
  // @@protoc_insertion_point(field_set_allocated:UsersRes.examSubject)
}

// -------------------------------------------------------------------

// SchoolContrastRes

// fixed64 schoolId = 1;
inline void SchoolContrastRes::clear_schoolid() {
  schoolid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SchoolContrastRes::_internal_schoolid() const {
  return schoolid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SchoolContrastRes::schoolid() const {
  // @@protoc_insertion_point(field_get:SchoolContrastRes.schoolId)
  return _internal_schoolid();
}
inline void SchoolContrastRes::_internal_set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  schoolid_ = value;
}
inline void SchoolContrastRes::set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_schoolid(value);
  // @@protoc_insertion_point(field_set:SchoolContrastRes.schoolId)
}

// string schoolName = 2;
inline void SchoolContrastRes::clear_schoolname() {
  schoolname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SchoolContrastRes::schoolname() const {
  // @@protoc_insertion_point(field_get:SchoolContrastRes.schoolName)
  return _internal_schoolname();
}
inline void SchoolContrastRes::set_schoolname(const std::string& value) {
  _internal_set_schoolname(value);
  // @@protoc_insertion_point(field_set:SchoolContrastRes.schoolName)
}
inline std::string* SchoolContrastRes::mutable_schoolname() {
  // @@protoc_insertion_point(field_mutable:SchoolContrastRes.schoolName)
  return _internal_mutable_schoolname();
}
inline const std::string& SchoolContrastRes::_internal_schoolname() const {
  return schoolname_.GetNoArena();
}
inline void SchoolContrastRes::_internal_set_schoolname(const std::string& value) {
  
  schoolname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SchoolContrastRes::set_schoolname(std::string&& value) {
  
  schoolname_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SchoolContrastRes.schoolName)
}
inline void SchoolContrastRes::set_schoolname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  schoolname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SchoolContrastRes.schoolName)
}
inline void SchoolContrastRes::set_schoolname(const char* value, size_t size) {
  
  schoolname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SchoolContrastRes.schoolName)
}
inline std::string* SchoolContrastRes::_internal_mutable_schoolname() {
  
  return schoolname_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SchoolContrastRes::release_schoolname() {
  // @@protoc_insertion_point(field_release:SchoolContrastRes.schoolName)
  
  return schoolname_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SchoolContrastRes::set_allocated_schoolname(std::string* schoolname) {
  if (schoolname != nullptr) {
    
  } else {
    
  }
  schoolname_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), schoolname);
  // @@protoc_insertion_point(field_set_allocated:SchoolContrastRes.schoolName)
}

// string addTime = 3;
inline void SchoolContrastRes::clear_addtime() {
  addtime_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SchoolContrastRes::addtime() const {
  // @@protoc_insertion_point(field_get:SchoolContrastRes.addTime)
  return _internal_addtime();
}
inline void SchoolContrastRes::set_addtime(const std::string& value) {
  _internal_set_addtime(value);
  // @@protoc_insertion_point(field_set:SchoolContrastRes.addTime)
}
inline std::string* SchoolContrastRes::mutable_addtime() {
  // @@protoc_insertion_point(field_mutable:SchoolContrastRes.addTime)
  return _internal_mutable_addtime();
}
inline const std::string& SchoolContrastRes::_internal_addtime() const {
  return addtime_.GetNoArena();
}
inline void SchoolContrastRes::_internal_set_addtime(const std::string& value) {
  
  addtime_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SchoolContrastRes::set_addtime(std::string&& value) {
  
  addtime_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SchoolContrastRes.addTime)
}
inline void SchoolContrastRes::set_addtime(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  addtime_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SchoolContrastRes.addTime)
}
inline void SchoolContrastRes::set_addtime(const char* value, size_t size) {
  
  addtime_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SchoolContrastRes.addTime)
}
inline std::string* SchoolContrastRes::_internal_mutable_addtime() {
  
  return addtime_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SchoolContrastRes::release_addtime() {
  // @@protoc_insertion_point(field_release:SchoolContrastRes.addTime)
  
  return addtime_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SchoolContrastRes::set_allocated_addtime(std::string* addtime) {
  if (addtime != nullptr) {
    
  } else {
    
  }
  addtime_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), addtime);
  // @@protoc_insertion_point(field_set_allocated:SchoolContrastRes.addTime)
}

// string userID = 4;
inline void SchoolContrastRes::clear_userid() {
  userid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SchoolContrastRes::userid() const {
  // @@protoc_insertion_point(field_get:SchoolContrastRes.userID)
  return _internal_userid();
}
inline void SchoolContrastRes::set_userid(const std::string& value) {
  _internal_set_userid(value);
  // @@protoc_insertion_point(field_set:SchoolContrastRes.userID)
}
inline std::string* SchoolContrastRes::mutable_userid() {
  // @@protoc_insertion_point(field_mutable:SchoolContrastRes.userID)
  return _internal_mutable_userid();
}
inline const std::string& SchoolContrastRes::_internal_userid() const {
  return userid_.GetNoArena();
}
inline void SchoolContrastRes::_internal_set_userid(const std::string& value) {
  
  userid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SchoolContrastRes::set_userid(std::string&& value) {
  
  userid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SchoolContrastRes.userID)
}
inline void SchoolContrastRes::set_userid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  userid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SchoolContrastRes.userID)
}
inline void SchoolContrastRes::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SchoolContrastRes.userID)
}
inline std::string* SchoolContrastRes::_internal_mutable_userid() {
  
  return userid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SchoolContrastRes::release_userid() {
  // @@protoc_insertion_point(field_release:SchoolContrastRes.userID)
  
  return userid_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SchoolContrastRes::set_allocated_userid(std::string* userid) {
  if (userid != nullptr) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:SchoolContrastRes.userID)
}

// -------------------------------------------------------------------

// DisciplineContrastRes

// fixed64 zylId = 1;
inline void DisciplineContrastRes::clear_zylid() {
  zylid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DisciplineContrastRes::_internal_zylid() const {
  return zylid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DisciplineContrastRes::zylid() const {
  // @@protoc_insertion_point(field_get:DisciplineContrastRes.zylId)
  return _internal_zylid();
}
inline void DisciplineContrastRes::_internal_set_zylid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  zylid_ = value;
}
inline void DisciplineContrastRes::set_zylid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_zylid(value);
  // @@protoc_insertion_point(field_set:DisciplineContrastRes.zylId)
}

// string zyName = 2;
inline void DisciplineContrastRes::clear_zyname() {
  zyname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& DisciplineContrastRes::zyname() const {
  // @@protoc_insertion_point(field_get:DisciplineContrastRes.zyName)
  return _internal_zyname();
}
inline void DisciplineContrastRes::set_zyname(const std::string& value) {
  _internal_set_zyname(value);
  // @@protoc_insertion_point(field_set:DisciplineContrastRes.zyName)
}
inline std::string* DisciplineContrastRes::mutable_zyname() {
  // @@protoc_insertion_point(field_mutable:DisciplineContrastRes.zyName)
  return _internal_mutable_zyname();
}
inline const std::string& DisciplineContrastRes::_internal_zyname() const {
  return zyname_.GetNoArena();
}
inline void DisciplineContrastRes::_internal_set_zyname(const std::string& value) {
  
  zyname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void DisciplineContrastRes::set_zyname(std::string&& value) {
  
  zyname_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DisciplineContrastRes.zyName)
}
inline void DisciplineContrastRes::set_zyname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  zyname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DisciplineContrastRes.zyName)
}
inline void DisciplineContrastRes::set_zyname(const char* value, size_t size) {
  
  zyname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DisciplineContrastRes.zyName)
}
inline std::string* DisciplineContrastRes::_internal_mutable_zyname() {
  
  return zyname_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* DisciplineContrastRes::release_zyname() {
  // @@protoc_insertion_point(field_release:DisciplineContrastRes.zyName)
  
  return zyname_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void DisciplineContrastRes::set_allocated_zyname(std::string* zyname) {
  if (zyname != nullptr) {
    
  } else {
    
  }
  zyname_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), zyname);
  // @@protoc_insertion_point(field_set_allocated:DisciplineContrastRes.zyName)
}

// string addTime = 3;
inline void DisciplineContrastRes::clear_addtime() {
  addtime_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& DisciplineContrastRes::addtime() const {
  // @@protoc_insertion_point(field_get:DisciplineContrastRes.addTime)
  return _internal_addtime();
}
inline void DisciplineContrastRes::set_addtime(const std::string& value) {
  _internal_set_addtime(value);
  // @@protoc_insertion_point(field_set:DisciplineContrastRes.addTime)
}
inline std::string* DisciplineContrastRes::mutable_addtime() {
  // @@protoc_insertion_point(field_mutable:DisciplineContrastRes.addTime)
  return _internal_mutable_addtime();
}
inline const std::string& DisciplineContrastRes::_internal_addtime() const {
  return addtime_.GetNoArena();
}
inline void DisciplineContrastRes::_internal_set_addtime(const std::string& value) {
  
  addtime_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void DisciplineContrastRes::set_addtime(std::string&& value) {
  
  addtime_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DisciplineContrastRes.addTime)
}
inline void DisciplineContrastRes::set_addtime(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  addtime_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DisciplineContrastRes.addTime)
}
inline void DisciplineContrastRes::set_addtime(const char* value, size_t size) {
  
  addtime_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DisciplineContrastRes.addTime)
}
inline std::string* DisciplineContrastRes::_internal_mutable_addtime() {
  
  return addtime_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* DisciplineContrastRes::release_addtime() {
  // @@protoc_insertion_point(field_release:DisciplineContrastRes.addTime)
  
  return addtime_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void DisciplineContrastRes::set_allocated_addtime(std::string* addtime) {
  if (addtime != nullptr) {
    
  } else {
    
  }
  addtime_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), addtime);
  // @@protoc_insertion_point(field_set_allocated:DisciplineContrastRes.addTime)
}

// string userID = 4;
inline void DisciplineContrastRes::clear_userid() {
  userid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& DisciplineContrastRes::userid() const {
  // @@protoc_insertion_point(field_get:DisciplineContrastRes.userID)
  return _internal_userid();
}
inline void DisciplineContrastRes::set_userid(const std::string& value) {
  _internal_set_userid(value);
  // @@protoc_insertion_point(field_set:DisciplineContrastRes.userID)
}
inline std::string* DisciplineContrastRes::mutable_userid() {
  // @@protoc_insertion_point(field_mutable:DisciplineContrastRes.userID)
  return _internal_mutable_userid();
}
inline const std::string& DisciplineContrastRes::_internal_userid() const {
  return userid_.GetNoArena();
}
inline void DisciplineContrastRes::_internal_set_userid(const std::string& value) {
  
  userid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void DisciplineContrastRes::set_userid(std::string&& value) {
  
  userid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DisciplineContrastRes.userID)
}
inline void DisciplineContrastRes::set_userid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  userid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DisciplineContrastRes.userID)
}
inline void DisciplineContrastRes::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DisciplineContrastRes.userID)
}
inline std::string* DisciplineContrastRes::_internal_mutable_userid() {
  
  return userid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* DisciplineContrastRes::release_userid() {
  // @@protoc_insertion_point(field_release:DisciplineContrastRes.userID)
  
  return userid_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void DisciplineContrastRes::set_allocated_userid(std::string* userid) {
  if (userid != nullptr) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:DisciplineContrastRes.userID)
}

// -------------------------------------------------------------------

// SchoolStoreUpRes

// fixed64 id = 1;
inline void SchoolStoreUpRes::clear_id() {
  id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SchoolStoreUpRes::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SchoolStoreUpRes::id() const {
  // @@protoc_insertion_point(field_get:SchoolStoreUpRes.id)
  return _internal_id();
}
inline void SchoolStoreUpRes::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  id_ = value;
}
inline void SchoolStoreUpRes::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:SchoolStoreUpRes.id)
}

// string schoolName = 2;
inline void SchoolStoreUpRes::clear_schoolname() {
  schoolname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SchoolStoreUpRes::schoolname() const {
  // @@protoc_insertion_point(field_get:SchoolStoreUpRes.schoolName)
  return _internal_schoolname();
}
inline void SchoolStoreUpRes::set_schoolname(const std::string& value) {
  _internal_set_schoolname(value);
  // @@protoc_insertion_point(field_set:SchoolStoreUpRes.schoolName)
}
inline std::string* SchoolStoreUpRes::mutable_schoolname() {
  // @@protoc_insertion_point(field_mutable:SchoolStoreUpRes.schoolName)
  return _internal_mutable_schoolname();
}
inline const std::string& SchoolStoreUpRes::_internal_schoolname() const {
  return schoolname_.GetNoArena();
}
inline void SchoolStoreUpRes::_internal_set_schoolname(const std::string& value) {
  
  schoolname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SchoolStoreUpRes::set_schoolname(std::string&& value) {
  
  schoolname_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SchoolStoreUpRes.schoolName)
}
inline void SchoolStoreUpRes::set_schoolname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  schoolname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SchoolStoreUpRes.schoolName)
}
inline void SchoolStoreUpRes::set_schoolname(const char* value, size_t size) {
  
  schoolname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SchoolStoreUpRes.schoolName)
}
inline std::string* SchoolStoreUpRes::_internal_mutable_schoolname() {
  
  return schoolname_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SchoolStoreUpRes::release_schoolname() {
  // @@protoc_insertion_point(field_release:SchoolStoreUpRes.schoolName)
  
  return schoolname_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SchoolStoreUpRes::set_allocated_schoolname(std::string* schoolname) {
  if (schoolname != nullptr) {
    
  } else {
    
  }
  schoolname_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), schoolname);
  // @@protoc_insertion_point(field_set_allocated:SchoolStoreUpRes.schoolName)
}

// string addTime = 3;
inline void SchoolStoreUpRes::clear_addtime() {
  addtime_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SchoolStoreUpRes::addtime() const {
  // @@protoc_insertion_point(field_get:SchoolStoreUpRes.addTime)
  return _internal_addtime();
}
inline void SchoolStoreUpRes::set_addtime(const std::string& value) {
  _internal_set_addtime(value);
  // @@protoc_insertion_point(field_set:SchoolStoreUpRes.addTime)
}
inline std::string* SchoolStoreUpRes::mutable_addtime() {
  // @@protoc_insertion_point(field_mutable:SchoolStoreUpRes.addTime)
  return _internal_mutable_addtime();
}
inline const std::string& SchoolStoreUpRes::_internal_addtime() const {
  return addtime_.GetNoArena();
}
inline void SchoolStoreUpRes::_internal_set_addtime(const std::string& value) {
  
  addtime_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SchoolStoreUpRes::set_addtime(std::string&& value) {
  
  addtime_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SchoolStoreUpRes.addTime)
}
inline void SchoolStoreUpRes::set_addtime(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  addtime_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SchoolStoreUpRes.addTime)
}
inline void SchoolStoreUpRes::set_addtime(const char* value, size_t size) {
  
  addtime_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SchoolStoreUpRes.addTime)
}
inline std::string* SchoolStoreUpRes::_internal_mutable_addtime() {
  
  return addtime_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SchoolStoreUpRes::release_addtime() {
  // @@protoc_insertion_point(field_release:SchoolStoreUpRes.addTime)
  
  return addtime_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SchoolStoreUpRes::set_allocated_addtime(std::string* addtime) {
  if (addtime != nullptr) {
    
  } else {
    
  }
  addtime_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), addtime);
  // @@protoc_insertion_point(field_set_allocated:SchoolStoreUpRes.addTime)
}

// string userID = 4;
inline void SchoolStoreUpRes::clear_userid() {
  userid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SchoolStoreUpRes::userid() const {
  // @@protoc_insertion_point(field_get:SchoolStoreUpRes.userID)
  return _internal_userid();
}
inline void SchoolStoreUpRes::set_userid(const std::string& value) {
  _internal_set_userid(value);
  // @@protoc_insertion_point(field_set:SchoolStoreUpRes.userID)
}
inline std::string* SchoolStoreUpRes::mutable_userid() {
  // @@protoc_insertion_point(field_mutable:SchoolStoreUpRes.userID)
  return _internal_mutable_userid();
}
inline const std::string& SchoolStoreUpRes::_internal_userid() const {
  return userid_.GetNoArena();
}
inline void SchoolStoreUpRes::_internal_set_userid(const std::string& value) {
  
  userid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SchoolStoreUpRes::set_userid(std::string&& value) {
  
  userid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SchoolStoreUpRes.userID)
}
inline void SchoolStoreUpRes::set_userid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  userid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SchoolStoreUpRes.userID)
}
inline void SchoolStoreUpRes::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SchoolStoreUpRes.userID)
}
inline std::string* SchoolStoreUpRes::_internal_mutable_userid() {
  
  return userid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SchoolStoreUpRes::release_userid() {
  // @@protoc_insertion_point(field_release:SchoolStoreUpRes.userID)
  
  return userid_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SchoolStoreUpRes::set_allocated_userid(std::string* userid) {
  if (userid != nullptr) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:SchoolStoreUpRes.userID)
}

// -------------------------------------------------------------------

// DisciplineStoreUpRes

// fixed64 id = 1;
inline void DisciplineStoreUpRes::clear_id() {
  id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DisciplineStoreUpRes::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DisciplineStoreUpRes::id() const {
  // @@protoc_insertion_point(field_get:DisciplineStoreUpRes.id)
  return _internal_id();
}
inline void DisciplineStoreUpRes::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  id_ = value;
}
inline void DisciplineStoreUpRes::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:DisciplineStoreUpRes.id)
}

// string disciplineName = 2;
inline void DisciplineStoreUpRes::clear_disciplinename() {
  disciplinename_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& DisciplineStoreUpRes::disciplinename() const {
  // @@protoc_insertion_point(field_get:DisciplineStoreUpRes.disciplineName)
  return _internal_disciplinename();
}
inline void DisciplineStoreUpRes::set_disciplinename(const std::string& value) {
  _internal_set_disciplinename(value);
  // @@protoc_insertion_point(field_set:DisciplineStoreUpRes.disciplineName)
}
inline std::string* DisciplineStoreUpRes::mutable_disciplinename() {
  // @@protoc_insertion_point(field_mutable:DisciplineStoreUpRes.disciplineName)
  return _internal_mutable_disciplinename();
}
inline const std::string& DisciplineStoreUpRes::_internal_disciplinename() const {
  return disciplinename_.GetNoArena();
}
inline void DisciplineStoreUpRes::_internal_set_disciplinename(const std::string& value) {
  
  disciplinename_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void DisciplineStoreUpRes::set_disciplinename(std::string&& value) {
  
  disciplinename_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DisciplineStoreUpRes.disciplineName)
}
inline void DisciplineStoreUpRes::set_disciplinename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  disciplinename_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DisciplineStoreUpRes.disciplineName)
}
inline void DisciplineStoreUpRes::set_disciplinename(const char* value, size_t size) {
  
  disciplinename_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DisciplineStoreUpRes.disciplineName)
}
inline std::string* DisciplineStoreUpRes::_internal_mutable_disciplinename() {
  
  return disciplinename_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* DisciplineStoreUpRes::release_disciplinename() {
  // @@protoc_insertion_point(field_release:DisciplineStoreUpRes.disciplineName)
  
  return disciplinename_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void DisciplineStoreUpRes::set_allocated_disciplinename(std::string* disciplinename) {
  if (disciplinename != nullptr) {
    
  } else {
    
  }
  disciplinename_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), disciplinename);
  // @@protoc_insertion_point(field_set_allocated:DisciplineStoreUpRes.disciplineName)
}

// string addTime = 3;
inline void DisciplineStoreUpRes::clear_addtime() {
  addtime_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& DisciplineStoreUpRes::addtime() const {
  // @@protoc_insertion_point(field_get:DisciplineStoreUpRes.addTime)
  return _internal_addtime();
}
inline void DisciplineStoreUpRes::set_addtime(const std::string& value) {
  _internal_set_addtime(value);
  // @@protoc_insertion_point(field_set:DisciplineStoreUpRes.addTime)
}
inline std::string* DisciplineStoreUpRes::mutable_addtime() {
  // @@protoc_insertion_point(field_mutable:DisciplineStoreUpRes.addTime)
  return _internal_mutable_addtime();
}
inline const std::string& DisciplineStoreUpRes::_internal_addtime() const {
  return addtime_.GetNoArena();
}
inline void DisciplineStoreUpRes::_internal_set_addtime(const std::string& value) {
  
  addtime_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void DisciplineStoreUpRes::set_addtime(std::string&& value) {
  
  addtime_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DisciplineStoreUpRes.addTime)
}
inline void DisciplineStoreUpRes::set_addtime(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  addtime_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DisciplineStoreUpRes.addTime)
}
inline void DisciplineStoreUpRes::set_addtime(const char* value, size_t size) {
  
  addtime_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DisciplineStoreUpRes.addTime)
}
inline std::string* DisciplineStoreUpRes::_internal_mutable_addtime() {
  
  return addtime_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* DisciplineStoreUpRes::release_addtime() {
  // @@protoc_insertion_point(field_release:DisciplineStoreUpRes.addTime)
  
  return addtime_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void DisciplineStoreUpRes::set_allocated_addtime(std::string* addtime) {
  if (addtime != nullptr) {
    
  } else {
    
  }
  addtime_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), addtime);
  // @@protoc_insertion_point(field_set_allocated:DisciplineStoreUpRes.addTime)
}

// string userID = 4;
inline void DisciplineStoreUpRes::clear_userid() {
  userid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& DisciplineStoreUpRes::userid() const {
  // @@protoc_insertion_point(field_get:DisciplineStoreUpRes.userID)
  return _internal_userid();
}
inline void DisciplineStoreUpRes::set_userid(const std::string& value) {
  _internal_set_userid(value);
  // @@protoc_insertion_point(field_set:DisciplineStoreUpRes.userID)
}
inline std::string* DisciplineStoreUpRes::mutable_userid() {
  // @@protoc_insertion_point(field_mutable:DisciplineStoreUpRes.userID)
  return _internal_mutable_userid();
}
inline const std::string& DisciplineStoreUpRes::_internal_userid() const {
  return userid_.GetNoArena();
}
inline void DisciplineStoreUpRes::_internal_set_userid(const std::string& value) {
  
  userid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void DisciplineStoreUpRes::set_userid(std::string&& value) {
  
  userid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DisciplineStoreUpRes.userID)
}
inline void DisciplineStoreUpRes::set_userid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  userid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DisciplineStoreUpRes.userID)
}
inline void DisciplineStoreUpRes::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DisciplineStoreUpRes.userID)
}
inline std::string* DisciplineStoreUpRes::_internal_mutable_userid() {
  
  return userid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* DisciplineStoreUpRes::release_userid() {
  // @@protoc_insertion_point(field_release:DisciplineStoreUpRes.userID)
  
  return userid_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void DisciplineStoreUpRes::set_allocated_userid(std::string* userid) {
  if (userid != nullptr) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:DisciplineStoreUpRes.userID)
}

// -------------------------------------------------------------------

// C_GetSchoolInfoById_2000

// fixed64 schoolId = 1;
inline void C_GetSchoolInfoById_2000::clear_schoolid() {
  schoolid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 C_GetSchoolInfoById_2000::_internal_schoolid() const {
  return schoolid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 C_GetSchoolInfoById_2000::schoolid() const {
  // @@protoc_insertion_point(field_get:C_GetSchoolInfoById_2000.schoolId)
  return _internal_schoolid();
}
inline void C_GetSchoolInfoById_2000::_internal_set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  schoolid_ = value;
}
inline void C_GetSchoolInfoById_2000::set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_schoolid(value);
  // @@protoc_insertion_point(field_set:C_GetSchoolInfoById_2000.schoolId)
}

// -------------------------------------------------------------------

// S_GetSchoolInfoById_2001

// .SchoolInfo schoolInfo = 1;
inline bool S_GetSchoolInfoById_2001::_internal_has_schoolinfo() const {
  return this != internal_default_instance() && schoolinfo_ != nullptr;
}
inline bool S_GetSchoolInfoById_2001::has_schoolinfo() const {
  return _internal_has_schoolinfo();
}
inline void S_GetSchoolInfoById_2001::clear_schoolinfo() {
  if (GetArenaNoVirtual() == nullptr && schoolinfo_ != nullptr) {
    delete schoolinfo_;
  }
  schoolinfo_ = nullptr;
}
inline const ::SchoolInfo& S_GetSchoolInfoById_2001::_internal_schoolinfo() const {
  const ::SchoolInfo* p = schoolinfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::SchoolInfo*>(
      &::_SchoolInfo_default_instance_);
}
inline const ::SchoolInfo& S_GetSchoolInfoById_2001::schoolinfo() const {
  // @@protoc_insertion_point(field_get:S_GetSchoolInfoById_2001.schoolInfo)
  return _internal_schoolinfo();
}
inline ::SchoolInfo* S_GetSchoolInfoById_2001::release_schoolinfo() {
  // @@protoc_insertion_point(field_release:S_GetSchoolInfoById_2001.schoolInfo)
  
  ::SchoolInfo* temp = schoolinfo_;
  schoolinfo_ = nullptr;
  return temp;
}
inline ::SchoolInfo* S_GetSchoolInfoById_2001::_internal_mutable_schoolinfo() {
  
  if (schoolinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::SchoolInfo>(GetArenaNoVirtual());
    schoolinfo_ = p;
  }
  return schoolinfo_;
}
inline ::SchoolInfo* S_GetSchoolInfoById_2001::mutable_schoolinfo() {
  // @@protoc_insertion_point(field_mutable:S_GetSchoolInfoById_2001.schoolInfo)
  return _internal_mutable_schoolinfo();
}
inline void S_GetSchoolInfoById_2001::set_allocated_schoolinfo(::SchoolInfo* schoolinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete schoolinfo_;
  }
  if (schoolinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      schoolinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, schoolinfo, submessage_arena);
    }
    
  } else {
    
  }
  schoolinfo_ = schoolinfo;
  // @@protoc_insertion_point(field_set_allocated:S_GetSchoolInfoById_2001.schoolInfo)
}

// -------------------------------------------------------------------

// C_GetSchoolAdmitInfo_2002

// fixed64 schoolId = 1;
inline void C_GetSchoolAdmitInfo_2002::clear_schoolid() {
  schoolid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 C_GetSchoolAdmitInfo_2002::_internal_schoolid() const {
  return schoolid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 C_GetSchoolAdmitInfo_2002::schoolid() const {
  // @@protoc_insertion_point(field_get:C_GetSchoolAdmitInfo_2002.schoolId)
  return _internal_schoolid();
}
inline void C_GetSchoolAdmitInfo_2002::_internal_set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  schoolid_ = value;
}
inline void C_GetSchoolAdmitInfo_2002::set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_schoolid(value);
  // @@protoc_insertion_point(field_set:C_GetSchoolAdmitInfo_2002.schoolId)
}

// string year = 2;
inline void C_GetSchoolAdmitInfo_2002::clear_year() {
  year_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetSchoolAdmitInfo_2002::year() const {
  // @@protoc_insertion_point(field_get:C_GetSchoolAdmitInfo_2002.year)
  return _internal_year();
}
inline void C_GetSchoolAdmitInfo_2002::set_year(const std::string& value) {
  _internal_set_year(value);
  // @@protoc_insertion_point(field_set:C_GetSchoolAdmitInfo_2002.year)
}
inline std::string* C_GetSchoolAdmitInfo_2002::mutable_year() {
  // @@protoc_insertion_point(field_mutable:C_GetSchoolAdmitInfo_2002.year)
  return _internal_mutable_year();
}
inline const std::string& C_GetSchoolAdmitInfo_2002::_internal_year() const {
  return year_.GetNoArena();
}
inline void C_GetSchoolAdmitInfo_2002::_internal_set_year(const std::string& value) {
  
  year_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetSchoolAdmitInfo_2002::set_year(std::string&& value) {
  
  year_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetSchoolAdmitInfo_2002.year)
}
inline void C_GetSchoolAdmitInfo_2002::set_year(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  year_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetSchoolAdmitInfo_2002.year)
}
inline void C_GetSchoolAdmitInfo_2002::set_year(const char* value, size_t size) {
  
  year_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetSchoolAdmitInfo_2002.year)
}
inline std::string* C_GetSchoolAdmitInfo_2002::_internal_mutable_year() {
  
  return year_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetSchoolAdmitInfo_2002::release_year() {
  // @@protoc_insertion_point(field_release:C_GetSchoolAdmitInfo_2002.year)
  
  return year_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetSchoolAdmitInfo_2002::set_allocated_year(std::string* year) {
  if (year != nullptr) {
    
  } else {
    
  }
  year_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), year);
  // @@protoc_insertion_point(field_set_allocated:C_GetSchoolAdmitInfo_2002.year)
}

// string province = 3;
inline void C_GetSchoolAdmitInfo_2002::clear_province() {
  province_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetSchoolAdmitInfo_2002::province() const {
  // @@protoc_insertion_point(field_get:C_GetSchoolAdmitInfo_2002.province)
  return _internal_province();
}
inline void C_GetSchoolAdmitInfo_2002::set_province(const std::string& value) {
  _internal_set_province(value);
  // @@protoc_insertion_point(field_set:C_GetSchoolAdmitInfo_2002.province)
}
inline std::string* C_GetSchoolAdmitInfo_2002::mutable_province() {
  // @@protoc_insertion_point(field_mutable:C_GetSchoolAdmitInfo_2002.province)
  return _internal_mutable_province();
}
inline const std::string& C_GetSchoolAdmitInfo_2002::_internal_province() const {
  return province_.GetNoArena();
}
inline void C_GetSchoolAdmitInfo_2002::_internal_set_province(const std::string& value) {
  
  province_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetSchoolAdmitInfo_2002::set_province(std::string&& value) {
  
  province_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetSchoolAdmitInfo_2002.province)
}
inline void C_GetSchoolAdmitInfo_2002::set_province(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  province_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetSchoolAdmitInfo_2002.province)
}
inline void C_GetSchoolAdmitInfo_2002::set_province(const char* value, size_t size) {
  
  province_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetSchoolAdmitInfo_2002.province)
}
inline std::string* C_GetSchoolAdmitInfo_2002::_internal_mutable_province() {
  
  return province_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetSchoolAdmitInfo_2002::release_province() {
  // @@protoc_insertion_point(field_release:C_GetSchoolAdmitInfo_2002.province)
  
  return province_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetSchoolAdmitInfo_2002::set_allocated_province(std::string* province) {
  if (province != nullptr) {
    
  } else {
    
  }
  province_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), province);
  // @@protoc_insertion_point(field_set_allocated:C_GetSchoolAdmitInfo_2002.province)
}

// -------------------------------------------------------------------

// S_GetSchoolAdmitInfo_2003

// repeated .SchoolAdmitInfo schoolAdmitInfo = 1;
inline int S_GetSchoolAdmitInfo_2003::_internal_schooladmitinfo_size() const {
  return schooladmitinfo_.size();
}
inline int S_GetSchoolAdmitInfo_2003::schooladmitinfo_size() const {
  return _internal_schooladmitinfo_size();
}
inline void S_GetSchoolAdmitInfo_2003::clear_schooladmitinfo() {
  schooladmitinfo_.Clear();
}
inline ::SchoolAdmitInfo* S_GetSchoolAdmitInfo_2003::mutable_schooladmitinfo(int index) {
  // @@protoc_insertion_point(field_mutable:S_GetSchoolAdmitInfo_2003.schoolAdmitInfo)
  return schooladmitinfo_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SchoolAdmitInfo >*
S_GetSchoolAdmitInfo_2003::mutable_schooladmitinfo() {
  // @@protoc_insertion_point(field_mutable_list:S_GetSchoolAdmitInfo_2003.schoolAdmitInfo)
  return &schooladmitinfo_;
}
inline const ::SchoolAdmitInfo& S_GetSchoolAdmitInfo_2003::_internal_schooladmitinfo(int index) const {
  return schooladmitinfo_.Get(index);
}
inline const ::SchoolAdmitInfo& S_GetSchoolAdmitInfo_2003::schooladmitinfo(int index) const {
  // @@protoc_insertion_point(field_get:S_GetSchoolAdmitInfo_2003.schoolAdmitInfo)
  return _internal_schooladmitinfo(index);
}
inline ::SchoolAdmitInfo* S_GetSchoolAdmitInfo_2003::_internal_add_schooladmitinfo() {
  return schooladmitinfo_.Add();
}
inline ::SchoolAdmitInfo* S_GetSchoolAdmitInfo_2003::add_schooladmitinfo() {
  // @@protoc_insertion_point(field_add:S_GetSchoolAdmitInfo_2003.schoolAdmitInfo)
  return _internal_add_schooladmitinfo();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SchoolAdmitInfo >&
S_GetSchoolAdmitInfo_2003::schooladmitinfo() const {
  // @@protoc_insertion_point(field_list:S_GetSchoolAdmitInfo_2003.schoolAdmitInfo)
  return schooladmitinfo_;
}

// -------------------------------------------------------------------

// C_GetZyAdmitInfo_2004

// fixed64 schoolId = 1;
inline void C_GetZyAdmitInfo_2004::clear_schoolid() {
  schoolid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 C_GetZyAdmitInfo_2004::_internal_schoolid() const {
  return schoolid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 C_GetZyAdmitInfo_2004::schoolid() const {
  // @@protoc_insertion_point(field_get:C_GetZyAdmitInfo_2004.schoolId)
  return _internal_schoolid();
}
inline void C_GetZyAdmitInfo_2004::_internal_set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  schoolid_ = value;
}
inline void C_GetZyAdmitInfo_2004::set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_schoolid(value);
  // @@protoc_insertion_point(field_set:C_GetZyAdmitInfo_2004.schoolId)
}

// string year = 2;
inline void C_GetZyAdmitInfo_2004::clear_year() {
  year_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetZyAdmitInfo_2004::year() const {
  // @@protoc_insertion_point(field_get:C_GetZyAdmitInfo_2004.year)
  return _internal_year();
}
inline void C_GetZyAdmitInfo_2004::set_year(const std::string& value) {
  _internal_set_year(value);
  // @@protoc_insertion_point(field_set:C_GetZyAdmitInfo_2004.year)
}
inline std::string* C_GetZyAdmitInfo_2004::mutable_year() {
  // @@protoc_insertion_point(field_mutable:C_GetZyAdmitInfo_2004.year)
  return _internal_mutable_year();
}
inline const std::string& C_GetZyAdmitInfo_2004::_internal_year() const {
  return year_.GetNoArena();
}
inline void C_GetZyAdmitInfo_2004::_internal_set_year(const std::string& value) {
  
  year_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetZyAdmitInfo_2004::set_year(std::string&& value) {
  
  year_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetZyAdmitInfo_2004.year)
}
inline void C_GetZyAdmitInfo_2004::set_year(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  year_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetZyAdmitInfo_2004.year)
}
inline void C_GetZyAdmitInfo_2004::set_year(const char* value, size_t size) {
  
  year_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetZyAdmitInfo_2004.year)
}
inline std::string* C_GetZyAdmitInfo_2004::_internal_mutable_year() {
  
  return year_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetZyAdmitInfo_2004::release_year() {
  // @@protoc_insertion_point(field_release:C_GetZyAdmitInfo_2004.year)
  
  return year_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetZyAdmitInfo_2004::set_allocated_year(std::string* year) {
  if (year != nullptr) {
    
  } else {
    
  }
  year_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), year);
  // @@protoc_insertion_point(field_set_allocated:C_GetZyAdmitInfo_2004.year)
}

// string province = 3;
inline void C_GetZyAdmitInfo_2004::clear_province() {
  province_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetZyAdmitInfo_2004::province() const {
  // @@protoc_insertion_point(field_get:C_GetZyAdmitInfo_2004.province)
  return _internal_province();
}
inline void C_GetZyAdmitInfo_2004::set_province(const std::string& value) {
  _internal_set_province(value);
  // @@protoc_insertion_point(field_set:C_GetZyAdmitInfo_2004.province)
}
inline std::string* C_GetZyAdmitInfo_2004::mutable_province() {
  // @@protoc_insertion_point(field_mutable:C_GetZyAdmitInfo_2004.province)
  return _internal_mutable_province();
}
inline const std::string& C_GetZyAdmitInfo_2004::_internal_province() const {
  return province_.GetNoArena();
}
inline void C_GetZyAdmitInfo_2004::_internal_set_province(const std::string& value) {
  
  province_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetZyAdmitInfo_2004::set_province(std::string&& value) {
  
  province_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetZyAdmitInfo_2004.province)
}
inline void C_GetZyAdmitInfo_2004::set_province(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  province_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetZyAdmitInfo_2004.province)
}
inline void C_GetZyAdmitInfo_2004::set_province(const char* value, size_t size) {
  
  province_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetZyAdmitInfo_2004.province)
}
inline std::string* C_GetZyAdmitInfo_2004::_internal_mutable_province() {
  
  return province_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetZyAdmitInfo_2004::release_province() {
  // @@protoc_insertion_point(field_release:C_GetZyAdmitInfo_2004.province)
  
  return province_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetZyAdmitInfo_2004::set_allocated_province(std::string* province) {
  if (province != nullptr) {
    
  } else {
    
  }
  province_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), province);
  // @@protoc_insertion_point(field_set_allocated:C_GetZyAdmitInfo_2004.province)
}

// string kelei = 4;
inline void C_GetZyAdmitInfo_2004::clear_kelei() {
  kelei_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetZyAdmitInfo_2004::kelei() const {
  // @@protoc_insertion_point(field_get:C_GetZyAdmitInfo_2004.kelei)
  return _internal_kelei();
}
inline void C_GetZyAdmitInfo_2004::set_kelei(const std::string& value) {
  _internal_set_kelei(value);
  // @@protoc_insertion_point(field_set:C_GetZyAdmitInfo_2004.kelei)
}
inline std::string* C_GetZyAdmitInfo_2004::mutable_kelei() {
  // @@protoc_insertion_point(field_mutable:C_GetZyAdmitInfo_2004.kelei)
  return _internal_mutable_kelei();
}
inline const std::string& C_GetZyAdmitInfo_2004::_internal_kelei() const {
  return kelei_.GetNoArena();
}
inline void C_GetZyAdmitInfo_2004::_internal_set_kelei(const std::string& value) {
  
  kelei_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetZyAdmitInfo_2004::set_kelei(std::string&& value) {
  
  kelei_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetZyAdmitInfo_2004.kelei)
}
inline void C_GetZyAdmitInfo_2004::set_kelei(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  kelei_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetZyAdmitInfo_2004.kelei)
}
inline void C_GetZyAdmitInfo_2004::set_kelei(const char* value, size_t size) {
  
  kelei_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetZyAdmitInfo_2004.kelei)
}
inline std::string* C_GetZyAdmitInfo_2004::_internal_mutable_kelei() {
  
  return kelei_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetZyAdmitInfo_2004::release_kelei() {
  // @@protoc_insertion_point(field_release:C_GetZyAdmitInfo_2004.kelei)
  
  return kelei_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetZyAdmitInfo_2004::set_allocated_kelei(std::string* kelei) {
  if (kelei != nullptr) {
    
  } else {
    
  }
  kelei_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), kelei);
  // @@protoc_insertion_point(field_set_allocated:C_GetZyAdmitInfo_2004.kelei)
}

// -------------------------------------------------------------------

// S_GetZyAdmitInfo_2005

// repeated .ZyAdmitInfo zyAdmitInfo = 1;
inline int S_GetZyAdmitInfo_2005::_internal_zyadmitinfo_size() const {
  return zyadmitinfo_.size();
}
inline int S_GetZyAdmitInfo_2005::zyadmitinfo_size() const {
  return _internal_zyadmitinfo_size();
}
inline void S_GetZyAdmitInfo_2005::clear_zyadmitinfo() {
  zyadmitinfo_.Clear();
}
inline ::ZyAdmitInfo* S_GetZyAdmitInfo_2005::mutable_zyadmitinfo(int index) {
  // @@protoc_insertion_point(field_mutable:S_GetZyAdmitInfo_2005.zyAdmitInfo)
  return zyadmitinfo_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ZyAdmitInfo >*
S_GetZyAdmitInfo_2005::mutable_zyadmitinfo() {
  // @@protoc_insertion_point(field_mutable_list:S_GetZyAdmitInfo_2005.zyAdmitInfo)
  return &zyadmitinfo_;
}
inline const ::ZyAdmitInfo& S_GetZyAdmitInfo_2005::_internal_zyadmitinfo(int index) const {
  return zyadmitinfo_.Get(index);
}
inline const ::ZyAdmitInfo& S_GetZyAdmitInfo_2005::zyadmitinfo(int index) const {
  // @@protoc_insertion_point(field_get:S_GetZyAdmitInfo_2005.zyAdmitInfo)
  return _internal_zyadmitinfo(index);
}
inline ::ZyAdmitInfo* S_GetZyAdmitInfo_2005::_internal_add_zyadmitinfo() {
  return zyadmitinfo_.Add();
}
inline ::ZyAdmitInfo* S_GetZyAdmitInfo_2005::add_zyadmitinfo() {
  // @@protoc_insertion_point(field_add:S_GetZyAdmitInfo_2005.zyAdmitInfo)
  return _internal_add_zyadmitinfo();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ZyAdmitInfo >&
S_GetZyAdmitInfo_2005::zyadmitinfo() const {
  // @@protoc_insertion_point(field_list:S_GetZyAdmitInfo_2005.zyAdmitInfo)
  return zyadmitinfo_;
}

// -------------------------------------------------------------------

// C_GetPlanRecruit_2006

// fixed64 schoolId = 1;
inline void C_GetPlanRecruit_2006::clear_schoolid() {
  schoolid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 C_GetPlanRecruit_2006::_internal_schoolid() const {
  return schoolid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 C_GetPlanRecruit_2006::schoolid() const {
  // @@protoc_insertion_point(field_get:C_GetPlanRecruit_2006.schoolId)
  return _internal_schoolid();
}
inline void C_GetPlanRecruit_2006::_internal_set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  schoolid_ = value;
}
inline void C_GetPlanRecruit_2006::set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_schoolid(value);
  // @@protoc_insertion_point(field_set:C_GetPlanRecruit_2006.schoolId)
}

// string year = 2;
inline void C_GetPlanRecruit_2006::clear_year() {
  year_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetPlanRecruit_2006::year() const {
  // @@protoc_insertion_point(field_get:C_GetPlanRecruit_2006.year)
  return _internal_year();
}
inline void C_GetPlanRecruit_2006::set_year(const std::string& value) {
  _internal_set_year(value);
  // @@protoc_insertion_point(field_set:C_GetPlanRecruit_2006.year)
}
inline std::string* C_GetPlanRecruit_2006::mutable_year() {
  // @@protoc_insertion_point(field_mutable:C_GetPlanRecruit_2006.year)
  return _internal_mutable_year();
}
inline const std::string& C_GetPlanRecruit_2006::_internal_year() const {
  return year_.GetNoArena();
}
inline void C_GetPlanRecruit_2006::_internal_set_year(const std::string& value) {
  
  year_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetPlanRecruit_2006::set_year(std::string&& value) {
  
  year_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetPlanRecruit_2006.year)
}
inline void C_GetPlanRecruit_2006::set_year(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  year_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetPlanRecruit_2006.year)
}
inline void C_GetPlanRecruit_2006::set_year(const char* value, size_t size) {
  
  year_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetPlanRecruit_2006.year)
}
inline std::string* C_GetPlanRecruit_2006::_internal_mutable_year() {
  
  return year_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetPlanRecruit_2006::release_year() {
  // @@protoc_insertion_point(field_release:C_GetPlanRecruit_2006.year)
  
  return year_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetPlanRecruit_2006::set_allocated_year(std::string* year) {
  if (year != nullptr) {
    
  } else {
    
  }
  year_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), year);
  // @@protoc_insertion_point(field_set_allocated:C_GetPlanRecruit_2006.year)
}

// string province = 3;
inline void C_GetPlanRecruit_2006::clear_province() {
  province_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetPlanRecruit_2006::province() const {
  // @@protoc_insertion_point(field_get:C_GetPlanRecruit_2006.province)
  return _internal_province();
}
inline void C_GetPlanRecruit_2006::set_province(const std::string& value) {
  _internal_set_province(value);
  // @@protoc_insertion_point(field_set:C_GetPlanRecruit_2006.province)
}
inline std::string* C_GetPlanRecruit_2006::mutable_province() {
  // @@protoc_insertion_point(field_mutable:C_GetPlanRecruit_2006.province)
  return _internal_mutable_province();
}
inline const std::string& C_GetPlanRecruit_2006::_internal_province() const {
  return province_.GetNoArena();
}
inline void C_GetPlanRecruit_2006::_internal_set_province(const std::string& value) {
  
  province_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetPlanRecruit_2006::set_province(std::string&& value) {
  
  province_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetPlanRecruit_2006.province)
}
inline void C_GetPlanRecruit_2006::set_province(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  province_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetPlanRecruit_2006.province)
}
inline void C_GetPlanRecruit_2006::set_province(const char* value, size_t size) {
  
  province_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetPlanRecruit_2006.province)
}
inline std::string* C_GetPlanRecruit_2006::_internal_mutable_province() {
  
  return province_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetPlanRecruit_2006::release_province() {
  // @@protoc_insertion_point(field_release:C_GetPlanRecruit_2006.province)
  
  return province_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetPlanRecruit_2006::set_allocated_province(std::string* province) {
  if (province != nullptr) {
    
  } else {
    
  }
  province_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), province);
  // @@protoc_insertion_point(field_set_allocated:C_GetPlanRecruit_2006.province)
}

// string kelei = 4;
inline void C_GetPlanRecruit_2006::clear_kelei() {
  kelei_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetPlanRecruit_2006::kelei() const {
  // @@protoc_insertion_point(field_get:C_GetPlanRecruit_2006.kelei)
  return _internal_kelei();
}
inline void C_GetPlanRecruit_2006::set_kelei(const std::string& value) {
  _internal_set_kelei(value);
  // @@protoc_insertion_point(field_set:C_GetPlanRecruit_2006.kelei)
}
inline std::string* C_GetPlanRecruit_2006::mutable_kelei() {
  // @@protoc_insertion_point(field_mutable:C_GetPlanRecruit_2006.kelei)
  return _internal_mutable_kelei();
}
inline const std::string& C_GetPlanRecruit_2006::_internal_kelei() const {
  return kelei_.GetNoArena();
}
inline void C_GetPlanRecruit_2006::_internal_set_kelei(const std::string& value) {
  
  kelei_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetPlanRecruit_2006::set_kelei(std::string&& value) {
  
  kelei_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetPlanRecruit_2006.kelei)
}
inline void C_GetPlanRecruit_2006::set_kelei(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  kelei_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetPlanRecruit_2006.kelei)
}
inline void C_GetPlanRecruit_2006::set_kelei(const char* value, size_t size) {
  
  kelei_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetPlanRecruit_2006.kelei)
}
inline std::string* C_GetPlanRecruit_2006::_internal_mutable_kelei() {
  
  return kelei_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetPlanRecruit_2006::release_kelei() {
  // @@protoc_insertion_point(field_release:C_GetPlanRecruit_2006.kelei)
  
  return kelei_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetPlanRecruit_2006::set_allocated_kelei(std::string* kelei) {
  if (kelei != nullptr) {
    
  } else {
    
  }
  kelei_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), kelei);
  // @@protoc_insertion_point(field_set_allocated:C_GetPlanRecruit_2006.kelei)
}

// string pici = 5;
inline void C_GetPlanRecruit_2006::clear_pici() {
  pici_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetPlanRecruit_2006::pici() const {
  // @@protoc_insertion_point(field_get:C_GetPlanRecruit_2006.pici)
  return _internal_pici();
}
inline void C_GetPlanRecruit_2006::set_pici(const std::string& value) {
  _internal_set_pici(value);
  // @@protoc_insertion_point(field_set:C_GetPlanRecruit_2006.pici)
}
inline std::string* C_GetPlanRecruit_2006::mutable_pici() {
  // @@protoc_insertion_point(field_mutable:C_GetPlanRecruit_2006.pici)
  return _internal_mutable_pici();
}
inline const std::string& C_GetPlanRecruit_2006::_internal_pici() const {
  return pici_.GetNoArena();
}
inline void C_GetPlanRecruit_2006::_internal_set_pici(const std::string& value) {
  
  pici_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetPlanRecruit_2006::set_pici(std::string&& value) {
  
  pici_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetPlanRecruit_2006.pici)
}
inline void C_GetPlanRecruit_2006::set_pici(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pici_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetPlanRecruit_2006.pici)
}
inline void C_GetPlanRecruit_2006::set_pici(const char* value, size_t size) {
  
  pici_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetPlanRecruit_2006.pici)
}
inline std::string* C_GetPlanRecruit_2006::_internal_mutable_pici() {
  
  return pici_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetPlanRecruit_2006::release_pici() {
  // @@protoc_insertion_point(field_release:C_GetPlanRecruit_2006.pici)
  
  return pici_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetPlanRecruit_2006::set_allocated_pici(std::string* pici) {
  if (pici != nullptr) {
    
  } else {
    
  }
  pici_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pici);
  // @@protoc_insertion_point(field_set_allocated:C_GetPlanRecruit_2006.pici)
}

// -------------------------------------------------------------------

// S_GetPlanRecruit_2007

// repeated .PlanRecruit planRecruit = 1;
inline int S_GetPlanRecruit_2007::_internal_planrecruit_size() const {
  return planrecruit_.size();
}
inline int S_GetPlanRecruit_2007::planrecruit_size() const {
  return _internal_planrecruit_size();
}
inline void S_GetPlanRecruit_2007::clear_planrecruit() {
  planrecruit_.Clear();
}
inline ::PlanRecruit* S_GetPlanRecruit_2007::mutable_planrecruit(int index) {
  // @@protoc_insertion_point(field_mutable:S_GetPlanRecruit_2007.planRecruit)
  return planrecruit_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PlanRecruit >*
S_GetPlanRecruit_2007::mutable_planrecruit() {
  // @@protoc_insertion_point(field_mutable_list:S_GetPlanRecruit_2007.planRecruit)
  return &planrecruit_;
}
inline const ::PlanRecruit& S_GetPlanRecruit_2007::_internal_planrecruit(int index) const {
  return planrecruit_.Get(index);
}
inline const ::PlanRecruit& S_GetPlanRecruit_2007::planrecruit(int index) const {
  // @@protoc_insertion_point(field_get:S_GetPlanRecruit_2007.planRecruit)
  return _internal_planrecruit(index);
}
inline ::PlanRecruit* S_GetPlanRecruit_2007::_internal_add_planrecruit() {
  return planrecruit_.Add();
}
inline ::PlanRecruit* S_GetPlanRecruit_2007::add_planrecruit() {
  // @@protoc_insertion_point(field_add:S_GetPlanRecruit_2007.planRecruit)
  return _internal_add_planrecruit();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PlanRecruit >&
S_GetPlanRecruit_2007::planrecruit() const {
  // @@protoc_insertion_point(field_list:S_GetPlanRecruit_2007.planRecruit)
  return planrecruit_;
}

// -------------------------------------------------------------------

// C_GetXkyqInfo_2008

// fixed64 schoolId = 1;
inline void C_GetXkyqInfo_2008::clear_schoolid() {
  schoolid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 C_GetXkyqInfo_2008::_internal_schoolid() const {
  return schoolid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 C_GetXkyqInfo_2008::schoolid() const {
  // @@protoc_insertion_point(field_get:C_GetXkyqInfo_2008.schoolId)
  return _internal_schoolid();
}
inline void C_GetXkyqInfo_2008::_internal_set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  schoolid_ = value;
}
inline void C_GetXkyqInfo_2008::set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_schoolid(value);
  // @@protoc_insertion_point(field_set:C_GetXkyqInfo_2008.schoolId)
}

// -------------------------------------------------------------------

// S_GetXkyqInfo_2009

// repeated .XkyqInfo xkyqInfo = 1;
inline int S_GetXkyqInfo_2009::_internal_xkyqinfo_size() const {
  return xkyqinfo_.size();
}
inline int S_GetXkyqInfo_2009::xkyqinfo_size() const {
  return _internal_xkyqinfo_size();
}
inline void S_GetXkyqInfo_2009::clear_xkyqinfo() {
  xkyqinfo_.Clear();
}
inline ::XkyqInfo* S_GetXkyqInfo_2009::mutable_xkyqinfo(int index) {
  // @@protoc_insertion_point(field_mutable:S_GetXkyqInfo_2009.xkyqInfo)
  return xkyqinfo_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::XkyqInfo >*
S_GetXkyqInfo_2009::mutable_xkyqinfo() {
  // @@protoc_insertion_point(field_mutable_list:S_GetXkyqInfo_2009.xkyqInfo)
  return &xkyqinfo_;
}
inline const ::XkyqInfo& S_GetXkyqInfo_2009::_internal_xkyqinfo(int index) const {
  return xkyqinfo_.Get(index);
}
inline const ::XkyqInfo& S_GetXkyqInfo_2009::xkyqinfo(int index) const {
  // @@protoc_insertion_point(field_get:S_GetXkyqInfo_2009.xkyqInfo)
  return _internal_xkyqinfo(index);
}
inline ::XkyqInfo* S_GetXkyqInfo_2009::_internal_add_xkyqinfo() {
  return xkyqinfo_.Add();
}
inline ::XkyqInfo* S_GetXkyqInfo_2009::add_xkyqinfo() {
  // @@protoc_insertion_point(field_add:S_GetXkyqInfo_2009.xkyqInfo)
  return _internal_add_xkyqinfo();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::XkyqInfo >&
S_GetXkyqInfo_2009::xkyqinfo() const {
  // @@protoc_insertion_point(field_list:S_GetXkyqInfo_2009.xkyqInfo)
  return xkyqinfo_;
}

// -------------------------------------------------------------------

// C_GetYxszInfo_2010

// fixed64 schoolId = 1;
inline void C_GetYxszInfo_2010::clear_schoolid() {
  schoolid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 C_GetYxszInfo_2010::_internal_schoolid() const {
  return schoolid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 C_GetYxszInfo_2010::schoolid() const {
  // @@protoc_insertion_point(field_get:C_GetYxszInfo_2010.schoolId)
  return _internal_schoolid();
}
inline void C_GetYxszInfo_2010::_internal_set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  schoolid_ = value;
}
inline void C_GetYxszInfo_2010::set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_schoolid(value);
  // @@protoc_insertion_point(field_set:C_GetYxszInfo_2010.schoolId)
}

// -------------------------------------------------------------------

// S_GetYxszInfo_2011

// repeated .YxszInfo yxszInfo = 1;
inline int S_GetYxszInfo_2011::_internal_yxszinfo_size() const {
  return yxszinfo_.size();
}
inline int S_GetYxszInfo_2011::yxszinfo_size() const {
  return _internal_yxszinfo_size();
}
inline void S_GetYxszInfo_2011::clear_yxszinfo() {
  yxszinfo_.Clear();
}
inline ::YxszInfo* S_GetYxszInfo_2011::mutable_yxszinfo(int index) {
  // @@protoc_insertion_point(field_mutable:S_GetYxszInfo_2011.yxszInfo)
  return yxszinfo_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::YxszInfo >*
S_GetYxszInfo_2011::mutable_yxszinfo() {
  // @@protoc_insertion_point(field_mutable_list:S_GetYxszInfo_2011.yxszInfo)
  return &yxszinfo_;
}
inline const ::YxszInfo& S_GetYxszInfo_2011::_internal_yxszinfo(int index) const {
  return yxszinfo_.Get(index);
}
inline const ::YxszInfo& S_GetYxszInfo_2011::yxszinfo(int index) const {
  // @@protoc_insertion_point(field_get:S_GetYxszInfo_2011.yxszInfo)
  return _internal_yxszinfo(index);
}
inline ::YxszInfo* S_GetYxszInfo_2011::_internal_add_yxszinfo() {
  return yxszinfo_.Add();
}
inline ::YxszInfo* S_GetYxszInfo_2011::add_yxszinfo() {
  // @@protoc_insertion_point(field_add:S_GetYxszInfo_2011.yxszInfo)
  return _internal_add_yxszinfo();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::YxszInfo >&
S_GetYxszInfo_2011::yxszinfo() const {
  // @@protoc_insertion_point(field_list:S_GetYxszInfo_2011.yxszInfo)
  return yxszinfo_;
}

// -------------------------------------------------------------------

// C_GetZsjzInfo_2012

// fixed64 schoolId = 1;
inline void C_GetZsjzInfo_2012::clear_schoolid() {
  schoolid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 C_GetZsjzInfo_2012::_internal_schoolid() const {
  return schoolid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 C_GetZsjzInfo_2012::schoolid() const {
  // @@protoc_insertion_point(field_get:C_GetZsjzInfo_2012.schoolId)
  return _internal_schoolid();
}
inline void C_GetZsjzInfo_2012::_internal_set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  schoolid_ = value;
}
inline void C_GetZsjzInfo_2012::set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_schoolid(value);
  // @@protoc_insertion_point(field_set:C_GetZsjzInfo_2012.schoolId)
}

// -------------------------------------------------------------------

// S_GetZsjzInfo_2013

// repeated .ZsjzInfo zsjzInfo = 1;
inline int S_GetZsjzInfo_2013::_internal_zsjzinfo_size() const {
  return zsjzinfo_.size();
}
inline int S_GetZsjzInfo_2013::zsjzinfo_size() const {
  return _internal_zsjzinfo_size();
}
inline void S_GetZsjzInfo_2013::clear_zsjzinfo() {
  zsjzinfo_.Clear();
}
inline ::ZsjzInfo* S_GetZsjzInfo_2013::mutable_zsjzinfo(int index) {
  // @@protoc_insertion_point(field_mutable:S_GetZsjzInfo_2013.zsjzInfo)
  return zsjzinfo_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ZsjzInfo >*
S_GetZsjzInfo_2013::mutable_zsjzinfo() {
  // @@protoc_insertion_point(field_mutable_list:S_GetZsjzInfo_2013.zsjzInfo)
  return &zsjzinfo_;
}
inline const ::ZsjzInfo& S_GetZsjzInfo_2013::_internal_zsjzinfo(int index) const {
  return zsjzinfo_.Get(index);
}
inline const ::ZsjzInfo& S_GetZsjzInfo_2013::zsjzinfo(int index) const {
  // @@protoc_insertion_point(field_get:S_GetZsjzInfo_2013.zsjzInfo)
  return _internal_zsjzinfo(index);
}
inline ::ZsjzInfo* S_GetZsjzInfo_2013::_internal_add_zsjzinfo() {
  return zsjzinfo_.Add();
}
inline ::ZsjzInfo* S_GetZsjzInfo_2013::add_zsjzinfo() {
  // @@protoc_insertion_point(field_add:S_GetZsjzInfo_2013.zsjzInfo)
  return _internal_add_zsjzinfo();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ZsjzInfo >&
S_GetZsjzInfo_2013::zsjzinfo() const {
  // @@protoc_insertion_point(field_list:S_GetZsjzInfo_2013.zsjzInfo)
  return zsjzinfo_;
}

// -------------------------------------------------------------------

// SchoolInfo

// fixed64 id = 1;
inline void SchoolInfo::clear_id() {
  id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SchoolInfo::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SchoolInfo::id() const {
  // @@protoc_insertion_point(field_get:SchoolInfo.id)
  return _internal_id();
}
inline void SchoolInfo::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  id_ = value;
}
inline void SchoolInfo::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:SchoolInfo.id)
}

// string tel = 2;
inline void SchoolInfo::clear_tel() {
  tel_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SchoolInfo::tel() const {
  // @@protoc_insertion_point(field_get:SchoolInfo.tel)
  return _internal_tel();
}
inline void SchoolInfo::set_tel(const std::string& value) {
  _internal_set_tel(value);
  // @@protoc_insertion_point(field_set:SchoolInfo.tel)
}
inline std::string* SchoolInfo::mutable_tel() {
  // @@protoc_insertion_point(field_mutable:SchoolInfo.tel)
  return _internal_mutable_tel();
}
inline const std::string& SchoolInfo::_internal_tel() const {
  return tel_.GetNoArena();
}
inline void SchoolInfo::_internal_set_tel(const std::string& value) {
  
  tel_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SchoolInfo::set_tel(std::string&& value) {
  
  tel_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SchoolInfo.tel)
}
inline void SchoolInfo::set_tel(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  tel_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SchoolInfo.tel)
}
inline void SchoolInfo::set_tel(const char* value, size_t size) {
  
  tel_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SchoolInfo.tel)
}
inline std::string* SchoolInfo::_internal_mutable_tel() {
  
  return tel_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SchoolInfo::release_tel() {
  // @@protoc_insertion_point(field_release:SchoolInfo.tel)
  
  return tel_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SchoolInfo::set_allocated_tel(std::string* tel) {
  if (tel != nullptr) {
    
  } else {
    
  }
  tel_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tel);
  // @@protoc_insertion_point(field_set_allocated:SchoolInfo.tel)
}

// string name = 3;
inline void SchoolInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SchoolInfo::name() const {
  // @@protoc_insertion_point(field_get:SchoolInfo.name)
  return _internal_name();
}
inline void SchoolInfo::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:SchoolInfo.name)
}
inline std::string* SchoolInfo::mutable_name() {
  // @@protoc_insertion_point(field_mutable:SchoolInfo.name)
  return _internal_mutable_name();
}
inline const std::string& SchoolInfo::_internal_name() const {
  return name_.GetNoArena();
}
inline void SchoolInfo::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SchoolInfo::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SchoolInfo.name)
}
inline void SchoolInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SchoolInfo.name)
}
inline void SchoolInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SchoolInfo.name)
}
inline std::string* SchoolInfo::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SchoolInfo::release_name() {
  // @@protoc_insertion_point(field_release:SchoolInfo.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SchoolInfo::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:SchoolInfo.name)
}

// string logoPath = 4;
inline void SchoolInfo::clear_logopath() {
  logopath_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SchoolInfo::logopath() const {
  // @@protoc_insertion_point(field_get:SchoolInfo.logoPath)
  return _internal_logopath();
}
inline void SchoolInfo::set_logopath(const std::string& value) {
  _internal_set_logopath(value);
  // @@protoc_insertion_point(field_set:SchoolInfo.logoPath)
}
inline std::string* SchoolInfo::mutable_logopath() {
  // @@protoc_insertion_point(field_mutable:SchoolInfo.logoPath)
  return _internal_mutable_logopath();
}
inline const std::string& SchoolInfo::_internal_logopath() const {
  return logopath_.GetNoArena();
}
inline void SchoolInfo::_internal_set_logopath(const std::string& value) {
  
  logopath_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SchoolInfo::set_logopath(std::string&& value) {
  
  logopath_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SchoolInfo.logoPath)
}
inline void SchoolInfo::set_logopath(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  logopath_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SchoolInfo.logoPath)
}
inline void SchoolInfo::set_logopath(const char* value, size_t size) {
  
  logopath_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SchoolInfo.logoPath)
}
inline std::string* SchoolInfo::_internal_mutable_logopath() {
  
  return logopath_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SchoolInfo::release_logopath() {
  // @@protoc_insertion_point(field_release:SchoolInfo.logoPath)
  
  return logopath_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SchoolInfo::set_allocated_logopath(std::string* logopath) {
  if (logopath != nullptr) {
    
  } else {
    
  }
  logopath_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), logopath);
  // @@protoc_insertion_point(field_set_allocated:SchoolInfo.logoPath)
}

// string type = 5;
inline void SchoolInfo::clear_type() {
  type_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SchoolInfo::type() const {
  // @@protoc_insertion_point(field_get:SchoolInfo.type)
  return _internal_type();
}
inline void SchoolInfo::set_type(const std::string& value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:SchoolInfo.type)
}
inline std::string* SchoolInfo::mutable_type() {
  // @@protoc_insertion_point(field_mutable:SchoolInfo.type)
  return _internal_mutable_type();
}
inline const std::string& SchoolInfo::_internal_type() const {
  return type_.GetNoArena();
}
inline void SchoolInfo::_internal_set_type(const std::string& value) {
  
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SchoolInfo::set_type(std::string&& value) {
  
  type_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SchoolInfo.type)
}
inline void SchoolInfo::set_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SchoolInfo.type)
}
inline void SchoolInfo::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SchoolInfo.type)
}
inline std::string* SchoolInfo::_internal_mutable_type() {
  
  return type_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SchoolInfo::release_type() {
  // @@protoc_insertion_point(field_release:SchoolInfo.type)
  
  return type_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SchoolInfo::set_allocated_type(std::string* type) {
  if (type != nullptr) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:SchoolInfo.type)
}

// string level = 6;
inline void SchoolInfo::clear_level() {
  level_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SchoolInfo::level() const {
  // @@protoc_insertion_point(field_get:SchoolInfo.level)
  return _internal_level();
}
inline void SchoolInfo::set_level(const std::string& value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:SchoolInfo.level)
}
inline std::string* SchoolInfo::mutable_level() {
  // @@protoc_insertion_point(field_mutable:SchoolInfo.level)
  return _internal_mutable_level();
}
inline const std::string& SchoolInfo::_internal_level() const {
  return level_.GetNoArena();
}
inline void SchoolInfo::_internal_set_level(const std::string& value) {
  
  level_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SchoolInfo::set_level(std::string&& value) {
  
  level_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SchoolInfo.level)
}
inline void SchoolInfo::set_level(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  level_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SchoolInfo.level)
}
inline void SchoolInfo::set_level(const char* value, size_t size) {
  
  level_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SchoolInfo.level)
}
inline std::string* SchoolInfo::_internal_mutable_level() {
  
  return level_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SchoolInfo::release_level() {
  // @@protoc_insertion_point(field_release:SchoolInfo.level)
  
  return level_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SchoolInfo::set_allocated_level(std::string* level) {
  if (level != nullptr) {
    
  } else {
    
  }
  level_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), level);
  // @@protoc_insertion_point(field_set_allocated:SchoolInfo.level)
}

// string province = 7;
inline void SchoolInfo::clear_province() {
  province_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SchoolInfo::province() const {
  // @@protoc_insertion_point(field_get:SchoolInfo.province)
  return _internal_province();
}
inline void SchoolInfo::set_province(const std::string& value) {
  _internal_set_province(value);
  // @@protoc_insertion_point(field_set:SchoolInfo.province)
}
inline std::string* SchoolInfo::mutable_province() {
  // @@protoc_insertion_point(field_mutable:SchoolInfo.province)
  return _internal_mutable_province();
}
inline const std::string& SchoolInfo::_internal_province() const {
  return province_.GetNoArena();
}
inline void SchoolInfo::_internal_set_province(const std::string& value) {
  
  province_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SchoolInfo::set_province(std::string&& value) {
  
  province_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SchoolInfo.province)
}
inline void SchoolInfo::set_province(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  province_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SchoolInfo.province)
}
inline void SchoolInfo::set_province(const char* value, size_t size) {
  
  province_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SchoolInfo.province)
}
inline std::string* SchoolInfo::_internal_mutable_province() {
  
  return province_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SchoolInfo::release_province() {
  // @@protoc_insertion_point(field_release:SchoolInfo.province)
  
  return province_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SchoolInfo::set_allocated_province(std::string* province) {
  if (province != nullptr) {
    
  } else {
    
  }
  province_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), province);
  // @@protoc_insertion_point(field_set_allocated:SchoolInfo.province)
}

// string email = 8;
inline void SchoolInfo::clear_email() {
  email_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SchoolInfo::email() const {
  // @@protoc_insertion_point(field_get:SchoolInfo.email)
  return _internal_email();
}
inline void SchoolInfo::set_email(const std::string& value) {
  _internal_set_email(value);
  // @@protoc_insertion_point(field_set:SchoolInfo.email)
}
inline std::string* SchoolInfo::mutable_email() {
  // @@protoc_insertion_point(field_mutable:SchoolInfo.email)
  return _internal_mutable_email();
}
inline const std::string& SchoolInfo::_internal_email() const {
  return email_.GetNoArena();
}
inline void SchoolInfo::_internal_set_email(const std::string& value) {
  
  email_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SchoolInfo::set_email(std::string&& value) {
  
  email_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SchoolInfo.email)
}
inline void SchoolInfo::set_email(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  email_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SchoolInfo.email)
}
inline void SchoolInfo::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SchoolInfo.email)
}
inline std::string* SchoolInfo::_internal_mutable_email() {
  
  return email_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SchoolInfo::release_email() {
  // @@protoc_insertion_point(field_release:SchoolInfo.email)
  
  return email_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SchoolInfo::set_allocated_email(std::string* email) {
  if (email != nullptr) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:SchoolInfo.email)
}

// string schoolInfo = 9;
inline void SchoolInfo::clear_schoolinfo() {
  schoolinfo_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SchoolInfo::schoolinfo() const {
  // @@protoc_insertion_point(field_get:SchoolInfo.schoolInfo)
  return _internal_schoolinfo();
}
inline void SchoolInfo::set_schoolinfo(const std::string& value) {
  _internal_set_schoolinfo(value);
  // @@protoc_insertion_point(field_set:SchoolInfo.schoolInfo)
}
inline std::string* SchoolInfo::mutable_schoolinfo() {
  // @@protoc_insertion_point(field_mutable:SchoolInfo.schoolInfo)
  return _internal_mutable_schoolinfo();
}
inline const std::string& SchoolInfo::_internal_schoolinfo() const {
  return schoolinfo_.GetNoArena();
}
inline void SchoolInfo::_internal_set_schoolinfo(const std::string& value) {
  
  schoolinfo_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SchoolInfo::set_schoolinfo(std::string&& value) {
  
  schoolinfo_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SchoolInfo.schoolInfo)
}
inline void SchoolInfo::set_schoolinfo(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  schoolinfo_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SchoolInfo.schoolInfo)
}
inline void SchoolInfo::set_schoolinfo(const char* value, size_t size) {
  
  schoolinfo_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SchoolInfo.schoolInfo)
}
inline std::string* SchoolInfo::_internal_mutable_schoolinfo() {
  
  return schoolinfo_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SchoolInfo::release_schoolinfo() {
  // @@protoc_insertion_point(field_release:SchoolInfo.schoolInfo)
  
  return schoolinfo_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SchoolInfo::set_allocated_schoolinfo(std::string* schoolinfo) {
  if (schoolinfo != nullptr) {
    
  } else {
    
  }
  schoolinfo_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), schoolinfo);
  // @@protoc_insertion_point(field_set_allocated:SchoolInfo.schoolInfo)
}

// string schoolMeddia = 10;
inline void SchoolInfo::clear_schoolmeddia() {
  schoolmeddia_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SchoolInfo::schoolmeddia() const {
  // @@protoc_insertion_point(field_get:SchoolInfo.schoolMeddia)
  return _internal_schoolmeddia();
}
inline void SchoolInfo::set_schoolmeddia(const std::string& value) {
  _internal_set_schoolmeddia(value);
  // @@protoc_insertion_point(field_set:SchoolInfo.schoolMeddia)
}
inline std::string* SchoolInfo::mutable_schoolmeddia() {
  // @@protoc_insertion_point(field_mutable:SchoolInfo.schoolMeddia)
  return _internal_mutable_schoolmeddia();
}
inline const std::string& SchoolInfo::_internal_schoolmeddia() const {
  return schoolmeddia_.GetNoArena();
}
inline void SchoolInfo::_internal_set_schoolmeddia(const std::string& value) {
  
  schoolmeddia_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SchoolInfo::set_schoolmeddia(std::string&& value) {
  
  schoolmeddia_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SchoolInfo.schoolMeddia)
}
inline void SchoolInfo::set_schoolmeddia(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  schoolmeddia_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SchoolInfo.schoolMeddia)
}
inline void SchoolInfo::set_schoolmeddia(const char* value, size_t size) {
  
  schoolmeddia_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SchoolInfo.schoolMeddia)
}
inline std::string* SchoolInfo::_internal_mutable_schoolmeddia() {
  
  return schoolmeddia_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SchoolInfo::release_schoolmeddia() {
  // @@protoc_insertion_point(field_release:SchoolInfo.schoolMeddia)
  
  return schoolmeddia_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SchoolInfo::set_allocated_schoolmeddia(std::string* schoolmeddia) {
  if (schoolmeddia != nullptr) {
    
  } else {
    
  }
  schoolmeddia_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), schoolmeddia);
  // @@protoc_insertion_point(field_set_allocated:SchoolInfo.schoolMeddia)
}

// string fengguang = 11;
inline void SchoolInfo::clear_fengguang() {
  fengguang_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SchoolInfo::fengguang() const {
  // @@protoc_insertion_point(field_get:SchoolInfo.fengguang)
  return _internal_fengguang();
}
inline void SchoolInfo::set_fengguang(const std::string& value) {
  _internal_set_fengguang(value);
  // @@protoc_insertion_point(field_set:SchoolInfo.fengguang)
}
inline std::string* SchoolInfo::mutable_fengguang() {
  // @@protoc_insertion_point(field_mutable:SchoolInfo.fengguang)
  return _internal_mutable_fengguang();
}
inline const std::string& SchoolInfo::_internal_fengguang() const {
  return fengguang_.GetNoArena();
}
inline void SchoolInfo::_internal_set_fengguang(const std::string& value) {
  
  fengguang_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SchoolInfo::set_fengguang(std::string&& value) {
  
  fengguang_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SchoolInfo.fengguang)
}
inline void SchoolInfo::set_fengguang(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  fengguang_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SchoolInfo.fengguang)
}
inline void SchoolInfo::set_fengguang(const char* value, size_t size) {
  
  fengguang_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SchoolInfo.fengguang)
}
inline std::string* SchoolInfo::_internal_mutable_fengguang() {
  
  return fengguang_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SchoolInfo::release_fengguang() {
  // @@protoc_insertion_point(field_release:SchoolInfo.fengguang)
  
  return fengguang_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SchoolInfo::set_allocated_fengguang(std::string* fengguang) {
  if (fengguang != nullptr) {
    
  } else {
    
  }
  fengguang_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), fengguang);
  // @@protoc_insertion_point(field_set_allocated:SchoolInfo.fengguang)
}

// -------------------------------------------------------------------

// ZyInfo

// fixed64 id = 1;
inline void ZyInfo::clear_id() {
  id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ZyInfo::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ZyInfo::id() const {
  // @@protoc_insertion_point(field_get:ZyInfo.id)
  return _internal_id();
}
inline void ZyInfo::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  id_ = value;
}
inline void ZyInfo::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:ZyInfo.id)
}

// string name = 2;
inline void ZyInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ZyInfo::name() const {
  // @@protoc_insertion_point(field_get:ZyInfo.name)
  return _internal_name();
}
inline void ZyInfo::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:ZyInfo.name)
}
inline std::string* ZyInfo::mutable_name() {
  // @@protoc_insertion_point(field_mutable:ZyInfo.name)
  return _internal_mutable_name();
}
inline const std::string& ZyInfo::_internal_name() const {
  return name_.GetNoArena();
}
inline void ZyInfo::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ZyInfo::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZyInfo.name)
}
inline void ZyInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZyInfo.name)
}
inline void ZyInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZyInfo.name)
}
inline std::string* ZyInfo::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ZyInfo::release_name() {
  // @@protoc_insertion_point(field_release:ZyInfo.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ZyInfo::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ZyInfo.name)
}

// string type = 3;
inline void ZyInfo::clear_type() {
  type_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ZyInfo::type() const {
  // @@protoc_insertion_point(field_get:ZyInfo.type)
  return _internal_type();
}
inline void ZyInfo::set_type(const std::string& value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:ZyInfo.type)
}
inline std::string* ZyInfo::mutable_type() {
  // @@protoc_insertion_point(field_mutable:ZyInfo.type)
  return _internal_mutable_type();
}
inline const std::string& ZyInfo::_internal_type() const {
  return type_.GetNoArena();
}
inline void ZyInfo::_internal_set_type(const std::string& value) {
  
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ZyInfo::set_type(std::string&& value) {
  
  type_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZyInfo.type)
}
inline void ZyInfo::set_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZyInfo.type)
}
inline void ZyInfo::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZyInfo.type)
}
inline std::string* ZyInfo::_internal_mutable_type() {
  
  return type_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ZyInfo::release_type() {
  // @@protoc_insertion_point(field_release:ZyInfo.type)
  
  return type_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ZyInfo::set_allocated_type(std::string* type) {
  if (type != nullptr) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:ZyInfo.type)
}

// string level = 4;
inline void ZyInfo::clear_level() {
  level_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ZyInfo::level() const {
  // @@protoc_insertion_point(field_get:ZyInfo.level)
  return _internal_level();
}
inline void ZyInfo::set_level(const std::string& value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:ZyInfo.level)
}
inline std::string* ZyInfo::mutable_level() {
  // @@protoc_insertion_point(field_mutable:ZyInfo.level)
  return _internal_mutable_level();
}
inline const std::string& ZyInfo::_internal_level() const {
  return level_.GetNoArena();
}
inline void ZyInfo::_internal_set_level(const std::string& value) {
  
  level_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ZyInfo::set_level(std::string&& value) {
  
  level_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZyInfo.level)
}
inline void ZyInfo::set_level(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  level_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZyInfo.level)
}
inline void ZyInfo::set_level(const char* value, size_t size) {
  
  level_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZyInfo.level)
}
inline std::string* ZyInfo::_internal_mutable_level() {
  
  return level_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ZyInfo::release_level() {
  // @@protoc_insertion_point(field_release:ZyInfo.level)
  
  return level_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ZyInfo::set_allocated_level(std::string* level) {
  if (level != nullptr) {
    
  } else {
    
  }
  level_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), level);
  // @@protoc_insertion_point(field_set_allocated:ZyInfo.level)
}

// string yearLimit = 5;
inline void ZyInfo::clear_yearlimit() {
  yearlimit_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ZyInfo::yearlimit() const {
  // @@protoc_insertion_point(field_get:ZyInfo.yearLimit)
  return _internal_yearlimit();
}
inline void ZyInfo::set_yearlimit(const std::string& value) {
  _internal_set_yearlimit(value);
  // @@protoc_insertion_point(field_set:ZyInfo.yearLimit)
}
inline std::string* ZyInfo::mutable_yearlimit() {
  // @@protoc_insertion_point(field_mutable:ZyInfo.yearLimit)
  return _internal_mutable_yearlimit();
}
inline const std::string& ZyInfo::_internal_yearlimit() const {
  return yearlimit_.GetNoArena();
}
inline void ZyInfo::_internal_set_yearlimit(const std::string& value) {
  
  yearlimit_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ZyInfo::set_yearlimit(std::string&& value) {
  
  yearlimit_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZyInfo.yearLimit)
}
inline void ZyInfo::set_yearlimit(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  yearlimit_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZyInfo.yearLimit)
}
inline void ZyInfo::set_yearlimit(const char* value, size_t size) {
  
  yearlimit_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZyInfo.yearLimit)
}
inline std::string* ZyInfo::_internal_mutable_yearlimit() {
  
  return yearlimit_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ZyInfo::release_yearlimit() {
  // @@protoc_insertion_point(field_release:ZyInfo.yearLimit)
  
  return yearlimit_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ZyInfo::set_allocated_yearlimit(std::string* yearlimit) {
  if (yearlimit != nullptr) {
    
  } else {
    
  }
  yearlimit_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), yearlimit);
  // @@protoc_insertion_point(field_set_allocated:ZyInfo.yearLimit)
}

// string studyLev = 6;
inline void ZyInfo::clear_studylev() {
  studylev_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ZyInfo::studylev() const {
  // @@protoc_insertion_point(field_get:ZyInfo.studyLev)
  return _internal_studylev();
}
inline void ZyInfo::set_studylev(const std::string& value) {
  _internal_set_studylev(value);
  // @@protoc_insertion_point(field_set:ZyInfo.studyLev)
}
inline std::string* ZyInfo::mutable_studylev() {
  // @@protoc_insertion_point(field_mutable:ZyInfo.studyLev)
  return _internal_mutable_studylev();
}
inline const std::string& ZyInfo::_internal_studylev() const {
  return studylev_.GetNoArena();
}
inline void ZyInfo::_internal_set_studylev(const std::string& value) {
  
  studylev_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ZyInfo::set_studylev(std::string&& value) {
  
  studylev_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZyInfo.studyLev)
}
inline void ZyInfo::set_studylev(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  studylev_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZyInfo.studyLev)
}
inline void ZyInfo::set_studylev(const char* value, size_t size) {
  
  studylev_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZyInfo.studyLev)
}
inline std::string* ZyInfo::_internal_mutable_studylev() {
  
  return studylev_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ZyInfo::release_studylev() {
  // @@protoc_insertion_point(field_release:ZyInfo.studyLev)
  
  return studylev_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ZyInfo::set_allocated_studylev(std::string* studylev) {
  if (studylev != nullptr) {
    
  } else {
    
  }
  studylev_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), studylev);
  // @@protoc_insertion_point(field_set_allocated:ZyInfo.studyLev)
}

// string requirement = 7;
inline void ZyInfo::clear_requirement() {
  requirement_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ZyInfo::requirement() const {
  // @@protoc_insertion_point(field_get:ZyInfo.requirement)
  return _internal_requirement();
}
inline void ZyInfo::set_requirement(const std::string& value) {
  _internal_set_requirement(value);
  // @@protoc_insertion_point(field_set:ZyInfo.requirement)
}
inline std::string* ZyInfo::mutable_requirement() {
  // @@protoc_insertion_point(field_mutable:ZyInfo.requirement)
  return _internal_mutable_requirement();
}
inline const std::string& ZyInfo::_internal_requirement() const {
  return requirement_.GetNoArena();
}
inline void ZyInfo::_internal_set_requirement(const std::string& value) {
  
  requirement_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ZyInfo::set_requirement(std::string&& value) {
  
  requirement_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZyInfo.requirement)
}
inline void ZyInfo::set_requirement(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  requirement_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZyInfo.requirement)
}
inline void ZyInfo::set_requirement(const char* value, size_t size) {
  
  requirement_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZyInfo.requirement)
}
inline std::string* ZyInfo::_internal_mutable_requirement() {
  
  return requirement_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ZyInfo::release_requirement() {
  // @@protoc_insertion_point(field_release:ZyInfo.requirement)
  
  return requirement_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ZyInfo::set_allocated_requirement(std::string* requirement) {
  if (requirement != nullptr) {
    
  } else {
    
  }
  requirement_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), requirement);
  // @@protoc_insertion_point(field_set_allocated:ZyInfo.requirement)
}

// string zyCode = 8;
inline void ZyInfo::clear_zycode() {
  zycode_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ZyInfo::zycode() const {
  // @@protoc_insertion_point(field_get:ZyInfo.zyCode)
  return _internal_zycode();
}
inline void ZyInfo::set_zycode(const std::string& value) {
  _internal_set_zycode(value);
  // @@protoc_insertion_point(field_set:ZyInfo.zyCode)
}
inline std::string* ZyInfo::mutable_zycode() {
  // @@protoc_insertion_point(field_mutable:ZyInfo.zyCode)
  return _internal_mutable_zycode();
}
inline const std::string& ZyInfo::_internal_zycode() const {
  return zycode_.GetNoArena();
}
inline void ZyInfo::_internal_set_zycode(const std::string& value) {
  
  zycode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ZyInfo::set_zycode(std::string&& value) {
  
  zycode_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZyInfo.zyCode)
}
inline void ZyInfo::set_zycode(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  zycode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZyInfo.zyCode)
}
inline void ZyInfo::set_zycode(const char* value, size_t size) {
  
  zycode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZyInfo.zyCode)
}
inline std::string* ZyInfo::_internal_mutable_zycode() {
  
  return zycode_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ZyInfo::release_zycode() {
  // @@protoc_insertion_point(field_release:ZyInfo.zyCode)
  
  return zycode_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ZyInfo::set_allocated_zycode(std::string* zycode) {
  if (zycode != nullptr) {
    
  } else {
    
  }
  zycode_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), zycode);
  // @@protoc_insertion_point(field_set_allocated:ZyInfo.zyCode)
}

// -------------------------------------------------------------------

// SchoolAdmitInfo

// fixed64 id = 1;
inline void SchoolAdmitInfo::clear_id() {
  id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SchoolAdmitInfo::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SchoolAdmitInfo::id() const {
  // @@protoc_insertion_point(field_get:SchoolAdmitInfo.id)
  return _internal_id();
}
inline void SchoolAdmitInfo::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  id_ = value;
}
inline void SchoolAdmitInfo::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:SchoolAdmitInfo.id)
}

// fixed64 schoolId = 2;
inline void SchoolAdmitInfo::clear_schoolid() {
  schoolid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SchoolAdmitInfo::_internal_schoolid() const {
  return schoolid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SchoolAdmitInfo::schoolid() const {
  // @@protoc_insertion_point(field_get:SchoolAdmitInfo.schoolId)
  return _internal_schoolid();
}
inline void SchoolAdmitInfo::_internal_set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  schoolid_ = value;
}
inline void SchoolAdmitInfo::set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_schoolid(value);
  // @@protoc_insertion_point(field_set:SchoolAdmitInfo.schoolId)
}

// string zsnf = 3;
inline void SchoolAdmitInfo::clear_zsnf() {
  zsnf_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SchoolAdmitInfo::zsnf() const {
  // @@protoc_insertion_point(field_get:SchoolAdmitInfo.zsnf)
  return _internal_zsnf();
}
inline void SchoolAdmitInfo::set_zsnf(const std::string& value) {
  _internal_set_zsnf(value);
  // @@protoc_insertion_point(field_set:SchoolAdmitInfo.zsnf)
}
inline std::string* SchoolAdmitInfo::mutable_zsnf() {
  // @@protoc_insertion_point(field_mutable:SchoolAdmitInfo.zsnf)
  return _internal_mutable_zsnf();
}
inline const std::string& SchoolAdmitInfo::_internal_zsnf() const {
  return zsnf_.GetNoArena();
}
inline void SchoolAdmitInfo::_internal_set_zsnf(const std::string& value) {
  
  zsnf_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SchoolAdmitInfo::set_zsnf(std::string&& value) {
  
  zsnf_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SchoolAdmitInfo.zsnf)
}
inline void SchoolAdmitInfo::set_zsnf(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  zsnf_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SchoolAdmitInfo.zsnf)
}
inline void SchoolAdmitInfo::set_zsnf(const char* value, size_t size) {
  
  zsnf_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SchoolAdmitInfo.zsnf)
}
inline std::string* SchoolAdmitInfo::_internal_mutable_zsnf() {
  
  return zsnf_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SchoolAdmitInfo::release_zsnf() {
  // @@protoc_insertion_point(field_release:SchoolAdmitInfo.zsnf)
  
  return zsnf_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SchoolAdmitInfo::set_allocated_zsnf(std::string* zsnf) {
  if (zsnf != nullptr) {
    
  } else {
    
  }
  zsnf_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), zsnf);
  // @@protoc_insertion_point(field_set_allocated:SchoolAdmitInfo.zsnf)
}

// string kelei = 4;
inline void SchoolAdmitInfo::clear_kelei() {
  kelei_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SchoolAdmitInfo::kelei() const {
  // @@protoc_insertion_point(field_get:SchoolAdmitInfo.kelei)
  return _internal_kelei();
}
inline void SchoolAdmitInfo::set_kelei(const std::string& value) {
  _internal_set_kelei(value);
  // @@protoc_insertion_point(field_set:SchoolAdmitInfo.kelei)
}
inline std::string* SchoolAdmitInfo::mutable_kelei() {
  // @@protoc_insertion_point(field_mutable:SchoolAdmitInfo.kelei)
  return _internal_mutable_kelei();
}
inline const std::string& SchoolAdmitInfo::_internal_kelei() const {
  return kelei_.GetNoArena();
}
inline void SchoolAdmitInfo::_internal_set_kelei(const std::string& value) {
  
  kelei_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SchoolAdmitInfo::set_kelei(std::string&& value) {
  
  kelei_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SchoolAdmitInfo.kelei)
}
inline void SchoolAdmitInfo::set_kelei(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  kelei_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SchoolAdmitInfo.kelei)
}
inline void SchoolAdmitInfo::set_kelei(const char* value, size_t size) {
  
  kelei_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SchoolAdmitInfo.kelei)
}
inline std::string* SchoolAdmitInfo::_internal_mutable_kelei() {
  
  return kelei_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SchoolAdmitInfo::release_kelei() {
  // @@protoc_insertion_point(field_release:SchoolAdmitInfo.kelei)
  
  return kelei_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SchoolAdmitInfo::set_allocated_kelei(std::string* kelei) {
  if (kelei != nullptr) {
    
  } else {
    
  }
  kelei_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), kelei);
  // @@protoc_insertion_point(field_set_allocated:SchoolAdmitInfo.kelei)
}

// string yylb = 5;
inline void SchoolAdmitInfo::clear_yylb() {
  yylb_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SchoolAdmitInfo::yylb() const {
  // @@protoc_insertion_point(field_get:SchoolAdmitInfo.yylb)
  return _internal_yylb();
}
inline void SchoolAdmitInfo::set_yylb(const std::string& value) {
  _internal_set_yylb(value);
  // @@protoc_insertion_point(field_set:SchoolAdmitInfo.yylb)
}
inline std::string* SchoolAdmitInfo::mutable_yylb() {
  // @@protoc_insertion_point(field_mutable:SchoolAdmitInfo.yylb)
  return _internal_mutable_yylb();
}
inline const std::string& SchoolAdmitInfo::_internal_yylb() const {
  return yylb_.GetNoArena();
}
inline void SchoolAdmitInfo::_internal_set_yylb(const std::string& value) {
  
  yylb_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SchoolAdmitInfo::set_yylb(std::string&& value) {
  
  yylb_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SchoolAdmitInfo.yylb)
}
inline void SchoolAdmitInfo::set_yylb(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  yylb_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SchoolAdmitInfo.yylb)
}
inline void SchoolAdmitInfo::set_yylb(const char* value, size_t size) {
  
  yylb_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SchoolAdmitInfo.yylb)
}
inline std::string* SchoolAdmitInfo::_internal_mutable_yylb() {
  
  return yylb_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SchoolAdmitInfo::release_yylb() {
  // @@protoc_insertion_point(field_release:SchoolAdmitInfo.yylb)
  
  return yylb_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SchoolAdmitInfo::set_allocated_yylb(std::string* yylb) {
  if (yylb != nullptr) {
    
  } else {
    
  }
  yylb_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), yylb);
  // @@protoc_insertion_point(field_set_allocated:SchoolAdmitInfo.yylb)
}

// string lqpc = 6;
inline void SchoolAdmitInfo::clear_lqpc() {
  lqpc_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SchoolAdmitInfo::lqpc() const {
  // @@protoc_insertion_point(field_get:SchoolAdmitInfo.lqpc)
  return _internal_lqpc();
}
inline void SchoolAdmitInfo::set_lqpc(const std::string& value) {
  _internal_set_lqpc(value);
  // @@protoc_insertion_point(field_set:SchoolAdmitInfo.lqpc)
}
inline std::string* SchoolAdmitInfo::mutable_lqpc() {
  // @@protoc_insertion_point(field_mutable:SchoolAdmitInfo.lqpc)
  return _internal_mutable_lqpc();
}
inline const std::string& SchoolAdmitInfo::_internal_lqpc() const {
  return lqpc_.GetNoArena();
}
inline void SchoolAdmitInfo::_internal_set_lqpc(const std::string& value) {
  
  lqpc_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SchoolAdmitInfo::set_lqpc(std::string&& value) {
  
  lqpc_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SchoolAdmitInfo.lqpc)
}
inline void SchoolAdmitInfo::set_lqpc(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  lqpc_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SchoolAdmitInfo.lqpc)
}
inline void SchoolAdmitInfo::set_lqpc(const char* value, size_t size) {
  
  lqpc_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SchoolAdmitInfo.lqpc)
}
inline std::string* SchoolAdmitInfo::_internal_mutable_lqpc() {
  
  return lqpc_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SchoolAdmitInfo::release_lqpc() {
  // @@protoc_insertion_point(field_release:SchoolAdmitInfo.lqpc)
  
  return lqpc_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SchoolAdmitInfo::set_allocated_lqpc(std::string* lqpc) {
  if (lqpc != nullptr) {
    
  } else {
    
  }
  lqpc_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), lqpc);
  // @@protoc_insertion_point(field_set_allocated:SchoolAdmitInfo.lqpc)
}

// string higScore = 7;
inline void SchoolAdmitInfo::clear_higscore() {
  higscore_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SchoolAdmitInfo::higscore() const {
  // @@protoc_insertion_point(field_get:SchoolAdmitInfo.higScore)
  return _internal_higscore();
}
inline void SchoolAdmitInfo::set_higscore(const std::string& value) {
  _internal_set_higscore(value);
  // @@protoc_insertion_point(field_set:SchoolAdmitInfo.higScore)
}
inline std::string* SchoolAdmitInfo::mutable_higscore() {
  // @@protoc_insertion_point(field_mutable:SchoolAdmitInfo.higScore)
  return _internal_mutable_higscore();
}
inline const std::string& SchoolAdmitInfo::_internal_higscore() const {
  return higscore_.GetNoArena();
}
inline void SchoolAdmitInfo::_internal_set_higscore(const std::string& value) {
  
  higscore_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SchoolAdmitInfo::set_higscore(std::string&& value) {
  
  higscore_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SchoolAdmitInfo.higScore)
}
inline void SchoolAdmitInfo::set_higscore(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  higscore_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SchoolAdmitInfo.higScore)
}
inline void SchoolAdmitInfo::set_higscore(const char* value, size_t size) {
  
  higscore_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SchoolAdmitInfo.higScore)
}
inline std::string* SchoolAdmitInfo::_internal_mutable_higscore() {
  
  return higscore_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SchoolAdmitInfo::release_higscore() {
  // @@protoc_insertion_point(field_release:SchoolAdmitInfo.higScore)
  
  return higscore_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SchoolAdmitInfo::set_allocated_higscore(std::string* higscore) {
  if (higscore != nullptr) {
    
  } else {
    
  }
  higscore_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), higscore);
  // @@protoc_insertion_point(field_set_allocated:SchoolAdmitInfo.higScore)
}

// string AvgScore = 8;
inline void SchoolAdmitInfo::clear_avgscore() {
  avgscore_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SchoolAdmitInfo::avgscore() const {
  // @@protoc_insertion_point(field_get:SchoolAdmitInfo.AvgScore)
  return _internal_avgscore();
}
inline void SchoolAdmitInfo::set_avgscore(const std::string& value) {
  _internal_set_avgscore(value);
  // @@protoc_insertion_point(field_set:SchoolAdmitInfo.AvgScore)
}
inline std::string* SchoolAdmitInfo::mutable_avgscore() {
  // @@protoc_insertion_point(field_mutable:SchoolAdmitInfo.AvgScore)
  return _internal_mutable_avgscore();
}
inline const std::string& SchoolAdmitInfo::_internal_avgscore() const {
  return avgscore_.GetNoArena();
}
inline void SchoolAdmitInfo::_internal_set_avgscore(const std::string& value) {
  
  avgscore_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SchoolAdmitInfo::set_avgscore(std::string&& value) {
  
  avgscore_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SchoolAdmitInfo.AvgScore)
}
inline void SchoolAdmitInfo::set_avgscore(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  avgscore_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SchoolAdmitInfo.AvgScore)
}
inline void SchoolAdmitInfo::set_avgscore(const char* value, size_t size) {
  
  avgscore_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SchoolAdmitInfo.AvgScore)
}
inline std::string* SchoolAdmitInfo::_internal_mutable_avgscore() {
  
  return avgscore_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SchoolAdmitInfo::release_avgscore() {
  // @@protoc_insertion_point(field_release:SchoolAdmitInfo.AvgScore)
  
  return avgscore_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SchoolAdmitInfo::set_allocated_avgscore(std::string* avgscore) {
  if (avgscore != nullptr) {
    
  } else {
    
  }
  avgscore_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), avgscore);
  // @@protoc_insertion_point(field_set_allocated:SchoolAdmitInfo.AvgScore)
}

// string lowScore = 9;
inline void SchoolAdmitInfo::clear_lowscore() {
  lowscore_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SchoolAdmitInfo::lowscore() const {
  // @@protoc_insertion_point(field_get:SchoolAdmitInfo.lowScore)
  return _internal_lowscore();
}
inline void SchoolAdmitInfo::set_lowscore(const std::string& value) {
  _internal_set_lowscore(value);
  // @@protoc_insertion_point(field_set:SchoolAdmitInfo.lowScore)
}
inline std::string* SchoolAdmitInfo::mutable_lowscore() {
  // @@protoc_insertion_point(field_mutable:SchoolAdmitInfo.lowScore)
  return _internal_mutable_lowscore();
}
inline const std::string& SchoolAdmitInfo::_internal_lowscore() const {
  return lowscore_.GetNoArena();
}
inline void SchoolAdmitInfo::_internal_set_lowscore(const std::string& value) {
  
  lowscore_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SchoolAdmitInfo::set_lowscore(std::string&& value) {
  
  lowscore_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SchoolAdmitInfo.lowScore)
}
inline void SchoolAdmitInfo::set_lowscore(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  lowscore_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SchoolAdmitInfo.lowScore)
}
inline void SchoolAdmitInfo::set_lowscore(const char* value, size_t size) {
  
  lowscore_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SchoolAdmitInfo.lowScore)
}
inline std::string* SchoolAdmitInfo::_internal_mutable_lowscore() {
  
  return lowscore_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SchoolAdmitInfo::release_lowscore() {
  // @@protoc_insertion_point(field_release:SchoolAdmitInfo.lowScore)
  
  return lowscore_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SchoolAdmitInfo::set_allocated_lowscore(std::string* lowscore) {
  if (lowscore != nullptr) {
    
  } else {
    
  }
  lowscore_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), lowscore);
  // @@protoc_insertion_point(field_set_allocated:SchoolAdmitInfo.lowScore)
}

// string lowSeat = 10;
inline void SchoolAdmitInfo::clear_lowseat() {
  lowseat_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SchoolAdmitInfo::lowseat() const {
  // @@protoc_insertion_point(field_get:SchoolAdmitInfo.lowSeat)
  return _internal_lowseat();
}
inline void SchoolAdmitInfo::set_lowseat(const std::string& value) {
  _internal_set_lowseat(value);
  // @@protoc_insertion_point(field_set:SchoolAdmitInfo.lowSeat)
}
inline std::string* SchoolAdmitInfo::mutable_lowseat() {
  // @@protoc_insertion_point(field_mutable:SchoolAdmitInfo.lowSeat)
  return _internal_mutable_lowseat();
}
inline const std::string& SchoolAdmitInfo::_internal_lowseat() const {
  return lowseat_.GetNoArena();
}
inline void SchoolAdmitInfo::_internal_set_lowseat(const std::string& value) {
  
  lowseat_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SchoolAdmitInfo::set_lowseat(std::string&& value) {
  
  lowseat_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SchoolAdmitInfo.lowSeat)
}
inline void SchoolAdmitInfo::set_lowseat(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  lowseat_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SchoolAdmitInfo.lowSeat)
}
inline void SchoolAdmitInfo::set_lowseat(const char* value, size_t size) {
  
  lowseat_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SchoolAdmitInfo.lowSeat)
}
inline std::string* SchoolAdmitInfo::_internal_mutable_lowseat() {
  
  return lowseat_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SchoolAdmitInfo::release_lowseat() {
  // @@protoc_insertion_point(field_release:SchoolAdmitInfo.lowSeat)
  
  return lowseat_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SchoolAdmitInfo::set_allocated_lowseat(std::string* lowseat) {
  if (lowseat != nullptr) {
    
  } else {
    
  }
  lowseat_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), lowseat);
  // @@protoc_insertion_point(field_set_allocated:SchoolAdmitInfo.lowSeat)
}

// string planCount = 11;
inline void SchoolAdmitInfo::clear_plancount() {
  plancount_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SchoolAdmitInfo::plancount() const {
  // @@protoc_insertion_point(field_get:SchoolAdmitInfo.planCount)
  return _internal_plancount();
}
inline void SchoolAdmitInfo::set_plancount(const std::string& value) {
  _internal_set_plancount(value);
  // @@protoc_insertion_point(field_set:SchoolAdmitInfo.planCount)
}
inline std::string* SchoolAdmitInfo::mutable_plancount() {
  // @@protoc_insertion_point(field_mutable:SchoolAdmitInfo.planCount)
  return _internal_mutable_plancount();
}
inline const std::string& SchoolAdmitInfo::_internal_plancount() const {
  return plancount_.GetNoArena();
}
inline void SchoolAdmitInfo::_internal_set_plancount(const std::string& value) {
  
  plancount_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SchoolAdmitInfo::set_plancount(std::string&& value) {
  
  plancount_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SchoolAdmitInfo.planCount)
}
inline void SchoolAdmitInfo::set_plancount(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  plancount_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SchoolAdmitInfo.planCount)
}
inline void SchoolAdmitInfo::set_plancount(const char* value, size_t size) {
  
  plancount_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SchoolAdmitInfo.planCount)
}
inline std::string* SchoolAdmitInfo::_internal_mutable_plancount() {
  
  return plancount_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SchoolAdmitInfo::release_plancount() {
  // @@protoc_insertion_point(field_release:SchoolAdmitInfo.planCount)
  
  return plancount_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SchoolAdmitInfo::set_allocated_plancount(std::string* plancount) {
  if (plancount != nullptr) {
    
  } else {
    
  }
  plancount_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), plancount);
  // @@protoc_insertion_point(field_set_allocated:SchoolAdmitInfo.planCount)
}

// -------------------------------------------------------------------

// ZyAdmitInfo

// fixed64 id = 1;
inline void ZyAdmitInfo::clear_id() {
  id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ZyAdmitInfo::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ZyAdmitInfo::id() const {
  // @@protoc_insertion_point(field_get:ZyAdmitInfo.id)
  return _internal_id();
}
inline void ZyAdmitInfo::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  id_ = value;
}
inline void ZyAdmitInfo::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:ZyAdmitInfo.id)
}

// fixed64 zyId = 2;
inline void ZyAdmitInfo::clear_zyid() {
  zyid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ZyAdmitInfo::_internal_zyid() const {
  return zyid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ZyAdmitInfo::zyid() const {
  // @@protoc_insertion_point(field_get:ZyAdmitInfo.zyId)
  return _internal_zyid();
}
inline void ZyAdmitInfo::_internal_set_zyid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  zyid_ = value;
}
inline void ZyAdmitInfo::set_zyid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_zyid(value);
  // @@protoc_insertion_point(field_set:ZyAdmitInfo.zyId)
}

// string zyName = 3;
inline void ZyAdmitInfo::clear_zyname() {
  zyname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ZyAdmitInfo::zyname() const {
  // @@protoc_insertion_point(field_get:ZyAdmitInfo.zyName)
  return _internal_zyname();
}
inline void ZyAdmitInfo::set_zyname(const std::string& value) {
  _internal_set_zyname(value);
  // @@protoc_insertion_point(field_set:ZyAdmitInfo.zyName)
}
inline std::string* ZyAdmitInfo::mutable_zyname() {
  // @@protoc_insertion_point(field_mutable:ZyAdmitInfo.zyName)
  return _internal_mutable_zyname();
}
inline const std::string& ZyAdmitInfo::_internal_zyname() const {
  return zyname_.GetNoArena();
}
inline void ZyAdmitInfo::_internal_set_zyname(const std::string& value) {
  
  zyname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ZyAdmitInfo::set_zyname(std::string&& value) {
  
  zyname_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZyAdmitInfo.zyName)
}
inline void ZyAdmitInfo::set_zyname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  zyname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZyAdmitInfo.zyName)
}
inline void ZyAdmitInfo::set_zyname(const char* value, size_t size) {
  
  zyname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZyAdmitInfo.zyName)
}
inline std::string* ZyAdmitInfo::_internal_mutable_zyname() {
  
  return zyname_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ZyAdmitInfo::release_zyname() {
  // @@protoc_insertion_point(field_release:ZyAdmitInfo.zyName)
  
  return zyname_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ZyAdmitInfo::set_allocated_zyname(std::string* zyname) {
  if (zyname != nullptr) {
    
  } else {
    
  }
  zyname_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), zyname);
  // @@protoc_insertion_point(field_set_allocated:ZyAdmitInfo.zyName)
}

// string zsnf = 4;
inline void ZyAdmitInfo::clear_zsnf() {
  zsnf_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ZyAdmitInfo::zsnf() const {
  // @@protoc_insertion_point(field_get:ZyAdmitInfo.zsnf)
  return _internal_zsnf();
}
inline void ZyAdmitInfo::set_zsnf(const std::string& value) {
  _internal_set_zsnf(value);
  // @@protoc_insertion_point(field_set:ZyAdmitInfo.zsnf)
}
inline std::string* ZyAdmitInfo::mutable_zsnf() {
  // @@protoc_insertion_point(field_mutable:ZyAdmitInfo.zsnf)
  return _internal_mutable_zsnf();
}
inline const std::string& ZyAdmitInfo::_internal_zsnf() const {
  return zsnf_.GetNoArena();
}
inline void ZyAdmitInfo::_internal_set_zsnf(const std::string& value) {
  
  zsnf_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ZyAdmitInfo::set_zsnf(std::string&& value) {
  
  zsnf_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZyAdmitInfo.zsnf)
}
inline void ZyAdmitInfo::set_zsnf(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  zsnf_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZyAdmitInfo.zsnf)
}
inline void ZyAdmitInfo::set_zsnf(const char* value, size_t size) {
  
  zsnf_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZyAdmitInfo.zsnf)
}
inline std::string* ZyAdmitInfo::_internal_mutable_zsnf() {
  
  return zsnf_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ZyAdmitInfo::release_zsnf() {
  // @@protoc_insertion_point(field_release:ZyAdmitInfo.zsnf)
  
  return zsnf_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ZyAdmitInfo::set_allocated_zsnf(std::string* zsnf) {
  if (zsnf != nullptr) {
    
  } else {
    
  }
  zsnf_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), zsnf);
  // @@protoc_insertion_point(field_set_allocated:ZyAdmitInfo.zsnf)
}

// string kelei = 5;
inline void ZyAdmitInfo::clear_kelei() {
  kelei_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ZyAdmitInfo::kelei() const {
  // @@protoc_insertion_point(field_get:ZyAdmitInfo.kelei)
  return _internal_kelei();
}
inline void ZyAdmitInfo::set_kelei(const std::string& value) {
  _internal_set_kelei(value);
  // @@protoc_insertion_point(field_set:ZyAdmitInfo.kelei)
}
inline std::string* ZyAdmitInfo::mutable_kelei() {
  // @@protoc_insertion_point(field_mutable:ZyAdmitInfo.kelei)
  return _internal_mutable_kelei();
}
inline const std::string& ZyAdmitInfo::_internal_kelei() const {
  return kelei_.GetNoArena();
}
inline void ZyAdmitInfo::_internal_set_kelei(const std::string& value) {
  
  kelei_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ZyAdmitInfo::set_kelei(std::string&& value) {
  
  kelei_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZyAdmitInfo.kelei)
}
inline void ZyAdmitInfo::set_kelei(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  kelei_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZyAdmitInfo.kelei)
}
inline void ZyAdmitInfo::set_kelei(const char* value, size_t size) {
  
  kelei_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZyAdmitInfo.kelei)
}
inline std::string* ZyAdmitInfo::_internal_mutable_kelei() {
  
  return kelei_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ZyAdmitInfo::release_kelei() {
  // @@protoc_insertion_point(field_release:ZyAdmitInfo.kelei)
  
  return kelei_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ZyAdmitInfo::set_allocated_kelei(std::string* kelei) {
  if (kelei != nullptr) {
    
  } else {
    
  }
  kelei_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), kelei);
  // @@protoc_insertion_point(field_set_allocated:ZyAdmitInfo.kelei)
}

// string lqpc = 6;
inline void ZyAdmitInfo::clear_lqpc() {
  lqpc_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ZyAdmitInfo::lqpc() const {
  // @@protoc_insertion_point(field_get:ZyAdmitInfo.lqpc)
  return _internal_lqpc();
}
inline void ZyAdmitInfo::set_lqpc(const std::string& value) {
  _internal_set_lqpc(value);
  // @@protoc_insertion_point(field_set:ZyAdmitInfo.lqpc)
}
inline std::string* ZyAdmitInfo::mutable_lqpc() {
  // @@protoc_insertion_point(field_mutable:ZyAdmitInfo.lqpc)
  return _internal_mutable_lqpc();
}
inline const std::string& ZyAdmitInfo::_internal_lqpc() const {
  return lqpc_.GetNoArena();
}
inline void ZyAdmitInfo::_internal_set_lqpc(const std::string& value) {
  
  lqpc_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ZyAdmitInfo::set_lqpc(std::string&& value) {
  
  lqpc_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZyAdmitInfo.lqpc)
}
inline void ZyAdmitInfo::set_lqpc(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  lqpc_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZyAdmitInfo.lqpc)
}
inline void ZyAdmitInfo::set_lqpc(const char* value, size_t size) {
  
  lqpc_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZyAdmitInfo.lqpc)
}
inline std::string* ZyAdmitInfo::_internal_mutable_lqpc() {
  
  return lqpc_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ZyAdmitInfo::release_lqpc() {
  // @@protoc_insertion_point(field_release:ZyAdmitInfo.lqpc)
  
  return lqpc_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ZyAdmitInfo::set_allocated_lqpc(std::string* lqpc) {
  if (lqpc != nullptr) {
    
  } else {
    
  }
  lqpc_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), lqpc);
  // @@protoc_insertion_point(field_set_allocated:ZyAdmitInfo.lqpc)
}

// string higScore = 7;
inline void ZyAdmitInfo::clear_higscore() {
  higscore_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ZyAdmitInfo::higscore() const {
  // @@protoc_insertion_point(field_get:ZyAdmitInfo.higScore)
  return _internal_higscore();
}
inline void ZyAdmitInfo::set_higscore(const std::string& value) {
  _internal_set_higscore(value);
  // @@protoc_insertion_point(field_set:ZyAdmitInfo.higScore)
}
inline std::string* ZyAdmitInfo::mutable_higscore() {
  // @@protoc_insertion_point(field_mutable:ZyAdmitInfo.higScore)
  return _internal_mutable_higscore();
}
inline const std::string& ZyAdmitInfo::_internal_higscore() const {
  return higscore_.GetNoArena();
}
inline void ZyAdmitInfo::_internal_set_higscore(const std::string& value) {
  
  higscore_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ZyAdmitInfo::set_higscore(std::string&& value) {
  
  higscore_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZyAdmitInfo.higScore)
}
inline void ZyAdmitInfo::set_higscore(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  higscore_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZyAdmitInfo.higScore)
}
inline void ZyAdmitInfo::set_higscore(const char* value, size_t size) {
  
  higscore_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZyAdmitInfo.higScore)
}
inline std::string* ZyAdmitInfo::_internal_mutable_higscore() {
  
  return higscore_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ZyAdmitInfo::release_higscore() {
  // @@protoc_insertion_point(field_release:ZyAdmitInfo.higScore)
  
  return higscore_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ZyAdmitInfo::set_allocated_higscore(std::string* higscore) {
  if (higscore != nullptr) {
    
  } else {
    
  }
  higscore_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), higscore);
  // @@protoc_insertion_point(field_set_allocated:ZyAdmitInfo.higScore)
}

// string AvgScore = 8;
inline void ZyAdmitInfo::clear_avgscore() {
  avgscore_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ZyAdmitInfo::avgscore() const {
  // @@protoc_insertion_point(field_get:ZyAdmitInfo.AvgScore)
  return _internal_avgscore();
}
inline void ZyAdmitInfo::set_avgscore(const std::string& value) {
  _internal_set_avgscore(value);
  // @@protoc_insertion_point(field_set:ZyAdmitInfo.AvgScore)
}
inline std::string* ZyAdmitInfo::mutable_avgscore() {
  // @@protoc_insertion_point(field_mutable:ZyAdmitInfo.AvgScore)
  return _internal_mutable_avgscore();
}
inline const std::string& ZyAdmitInfo::_internal_avgscore() const {
  return avgscore_.GetNoArena();
}
inline void ZyAdmitInfo::_internal_set_avgscore(const std::string& value) {
  
  avgscore_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ZyAdmitInfo::set_avgscore(std::string&& value) {
  
  avgscore_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZyAdmitInfo.AvgScore)
}
inline void ZyAdmitInfo::set_avgscore(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  avgscore_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZyAdmitInfo.AvgScore)
}
inline void ZyAdmitInfo::set_avgscore(const char* value, size_t size) {
  
  avgscore_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZyAdmitInfo.AvgScore)
}
inline std::string* ZyAdmitInfo::_internal_mutable_avgscore() {
  
  return avgscore_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ZyAdmitInfo::release_avgscore() {
  // @@protoc_insertion_point(field_release:ZyAdmitInfo.AvgScore)
  
  return avgscore_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ZyAdmitInfo::set_allocated_avgscore(std::string* avgscore) {
  if (avgscore != nullptr) {
    
  } else {
    
  }
  avgscore_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), avgscore);
  // @@protoc_insertion_point(field_set_allocated:ZyAdmitInfo.AvgScore)
}

// string lowScore = 9;
inline void ZyAdmitInfo::clear_lowscore() {
  lowscore_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ZyAdmitInfo::lowscore() const {
  // @@protoc_insertion_point(field_get:ZyAdmitInfo.lowScore)
  return _internal_lowscore();
}
inline void ZyAdmitInfo::set_lowscore(const std::string& value) {
  _internal_set_lowscore(value);
  // @@protoc_insertion_point(field_set:ZyAdmitInfo.lowScore)
}
inline std::string* ZyAdmitInfo::mutable_lowscore() {
  // @@protoc_insertion_point(field_mutable:ZyAdmitInfo.lowScore)
  return _internal_mutable_lowscore();
}
inline const std::string& ZyAdmitInfo::_internal_lowscore() const {
  return lowscore_.GetNoArena();
}
inline void ZyAdmitInfo::_internal_set_lowscore(const std::string& value) {
  
  lowscore_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ZyAdmitInfo::set_lowscore(std::string&& value) {
  
  lowscore_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZyAdmitInfo.lowScore)
}
inline void ZyAdmitInfo::set_lowscore(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  lowscore_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZyAdmitInfo.lowScore)
}
inline void ZyAdmitInfo::set_lowscore(const char* value, size_t size) {
  
  lowscore_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZyAdmitInfo.lowScore)
}
inline std::string* ZyAdmitInfo::_internal_mutable_lowscore() {
  
  return lowscore_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ZyAdmitInfo::release_lowscore() {
  // @@protoc_insertion_point(field_release:ZyAdmitInfo.lowScore)
  
  return lowscore_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ZyAdmitInfo::set_allocated_lowscore(std::string* lowscore) {
  if (lowscore != nullptr) {
    
  } else {
    
  }
  lowscore_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), lowscore);
  // @@protoc_insertion_point(field_set_allocated:ZyAdmitInfo.lowScore)
}

// string lowSeat = 10;
inline void ZyAdmitInfo::clear_lowseat() {
  lowseat_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ZyAdmitInfo::lowseat() const {
  // @@protoc_insertion_point(field_get:ZyAdmitInfo.lowSeat)
  return _internal_lowseat();
}
inline void ZyAdmitInfo::set_lowseat(const std::string& value) {
  _internal_set_lowseat(value);
  // @@protoc_insertion_point(field_set:ZyAdmitInfo.lowSeat)
}
inline std::string* ZyAdmitInfo::mutable_lowseat() {
  // @@protoc_insertion_point(field_mutable:ZyAdmitInfo.lowSeat)
  return _internal_mutable_lowseat();
}
inline const std::string& ZyAdmitInfo::_internal_lowseat() const {
  return lowseat_.GetNoArena();
}
inline void ZyAdmitInfo::_internal_set_lowseat(const std::string& value) {
  
  lowseat_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ZyAdmitInfo::set_lowseat(std::string&& value) {
  
  lowseat_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZyAdmitInfo.lowSeat)
}
inline void ZyAdmitInfo::set_lowseat(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  lowseat_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZyAdmitInfo.lowSeat)
}
inline void ZyAdmitInfo::set_lowseat(const char* value, size_t size) {
  
  lowseat_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZyAdmitInfo.lowSeat)
}
inline std::string* ZyAdmitInfo::_internal_mutable_lowseat() {
  
  return lowseat_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ZyAdmitInfo::release_lowseat() {
  // @@protoc_insertion_point(field_release:ZyAdmitInfo.lowSeat)
  
  return lowseat_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ZyAdmitInfo::set_allocated_lowseat(std::string* lowseat) {
  if (lowseat != nullptr) {
    
  } else {
    
  }
  lowseat_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), lowseat);
  // @@protoc_insertion_point(field_set_allocated:ZyAdmitInfo.lowSeat)
}

// string diff = 11;
inline void ZyAdmitInfo::clear_diff() {
  diff_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ZyAdmitInfo::diff() const {
  // @@protoc_insertion_point(field_get:ZyAdmitInfo.diff)
  return _internal_diff();
}
inline void ZyAdmitInfo::set_diff(const std::string& value) {
  _internal_set_diff(value);
  // @@protoc_insertion_point(field_set:ZyAdmitInfo.diff)
}
inline std::string* ZyAdmitInfo::mutable_diff() {
  // @@protoc_insertion_point(field_mutable:ZyAdmitInfo.diff)
  return _internal_mutable_diff();
}
inline const std::string& ZyAdmitInfo::_internal_diff() const {
  return diff_.GetNoArena();
}
inline void ZyAdmitInfo::_internal_set_diff(const std::string& value) {
  
  diff_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ZyAdmitInfo::set_diff(std::string&& value) {
  
  diff_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZyAdmitInfo.diff)
}
inline void ZyAdmitInfo::set_diff(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  diff_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZyAdmitInfo.diff)
}
inline void ZyAdmitInfo::set_diff(const char* value, size_t size) {
  
  diff_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZyAdmitInfo.diff)
}
inline std::string* ZyAdmitInfo::_internal_mutable_diff() {
  
  return diff_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ZyAdmitInfo::release_diff() {
  // @@protoc_insertion_point(field_release:ZyAdmitInfo.diff)
  
  return diff_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ZyAdmitInfo::set_allocated_diff(std::string* diff) {
  if (diff != nullptr) {
    
  } else {
    
  }
  diff_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), diff);
  // @@protoc_insertion_point(field_set_allocated:ZyAdmitInfo.diff)
}

// string planCount = 12;
inline void ZyAdmitInfo::clear_plancount() {
  plancount_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ZyAdmitInfo::plancount() const {
  // @@protoc_insertion_point(field_get:ZyAdmitInfo.planCount)
  return _internal_plancount();
}
inline void ZyAdmitInfo::set_plancount(const std::string& value) {
  _internal_set_plancount(value);
  // @@protoc_insertion_point(field_set:ZyAdmitInfo.planCount)
}
inline std::string* ZyAdmitInfo::mutable_plancount() {
  // @@protoc_insertion_point(field_mutable:ZyAdmitInfo.planCount)
  return _internal_mutable_plancount();
}
inline const std::string& ZyAdmitInfo::_internal_plancount() const {
  return plancount_.GetNoArena();
}
inline void ZyAdmitInfo::_internal_set_plancount(const std::string& value) {
  
  plancount_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ZyAdmitInfo::set_plancount(std::string&& value) {
  
  plancount_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZyAdmitInfo.planCount)
}
inline void ZyAdmitInfo::set_plancount(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  plancount_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZyAdmitInfo.planCount)
}
inline void ZyAdmitInfo::set_plancount(const char* value, size_t size) {
  
  plancount_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZyAdmitInfo.planCount)
}
inline std::string* ZyAdmitInfo::_internal_mutable_plancount() {
  
  return plancount_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ZyAdmitInfo::release_plancount() {
  // @@protoc_insertion_point(field_release:ZyAdmitInfo.planCount)
  
  return plancount_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ZyAdmitInfo::set_allocated_plancount(std::string* plancount) {
  if (plancount != nullptr) {
    
  } else {
    
  }
  plancount_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), plancount);
  // @@protoc_insertion_point(field_set_allocated:ZyAdmitInfo.planCount)
}

// fixed64 schoolId = 13;
inline void ZyAdmitInfo::clear_schoolid() {
  schoolid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ZyAdmitInfo::_internal_schoolid() const {
  return schoolid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ZyAdmitInfo::schoolid() const {
  // @@protoc_insertion_point(field_get:ZyAdmitInfo.schoolId)
  return _internal_schoolid();
}
inline void ZyAdmitInfo::_internal_set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  schoolid_ = value;
}
inline void ZyAdmitInfo::set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_schoolid(value);
  // @@protoc_insertion_point(field_set:ZyAdmitInfo.schoolId)
}

// -------------------------------------------------------------------

// PlanRecruit

// fixed64 id = 1;
inline void PlanRecruit::clear_id() {
  id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PlanRecruit::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PlanRecruit::id() const {
  // @@protoc_insertion_point(field_get:PlanRecruit.id)
  return _internal_id();
}
inline void PlanRecruit::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  id_ = value;
}
inline void PlanRecruit::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:PlanRecruit.id)
}

// fixed64 schoolId = 2;
inline void PlanRecruit::clear_schoolid() {
  schoolid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PlanRecruit::_internal_schoolid() const {
  return schoolid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PlanRecruit::schoolid() const {
  // @@protoc_insertion_point(field_get:PlanRecruit.schoolId)
  return _internal_schoolid();
}
inline void PlanRecruit::_internal_set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  schoolid_ = value;
}
inline void PlanRecruit::set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_schoolid(value);
  // @@protoc_insertion_point(field_set:PlanRecruit.schoolId)
}

// fixed64 zyId = 3;
inline void PlanRecruit::clear_zyid() {
  zyid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PlanRecruit::_internal_zyid() const {
  return zyid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PlanRecruit::zyid() const {
  // @@protoc_insertion_point(field_get:PlanRecruit.zyId)
  return _internal_zyid();
}
inline void PlanRecruit::_internal_set_zyid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  zyid_ = value;
}
inline void PlanRecruit::set_zyid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_zyid(value);
  // @@protoc_insertion_point(field_set:PlanRecruit.zyId)
}

// string zcode = 4;
inline void PlanRecruit::clear_zcode() {
  zcode_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PlanRecruit::zcode() const {
  // @@protoc_insertion_point(field_get:PlanRecruit.zcode)
  return _internal_zcode();
}
inline void PlanRecruit::set_zcode(const std::string& value) {
  _internal_set_zcode(value);
  // @@protoc_insertion_point(field_set:PlanRecruit.zcode)
}
inline std::string* PlanRecruit::mutable_zcode() {
  // @@protoc_insertion_point(field_mutable:PlanRecruit.zcode)
  return _internal_mutable_zcode();
}
inline const std::string& PlanRecruit::_internal_zcode() const {
  return zcode_.GetNoArena();
}
inline void PlanRecruit::_internal_set_zcode(const std::string& value) {
  
  zcode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PlanRecruit::set_zcode(std::string&& value) {
  
  zcode_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PlanRecruit.zcode)
}
inline void PlanRecruit::set_zcode(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  zcode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PlanRecruit.zcode)
}
inline void PlanRecruit::set_zcode(const char* value, size_t size) {
  
  zcode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PlanRecruit.zcode)
}
inline std::string* PlanRecruit::_internal_mutable_zcode() {
  
  return zcode_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PlanRecruit::release_zcode() {
  // @@protoc_insertion_point(field_release:PlanRecruit.zcode)
  
  return zcode_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PlanRecruit::set_allocated_zcode(std::string* zcode) {
  if (zcode != nullptr) {
    
  } else {
    
  }
  zcode_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), zcode);
  // @@protoc_insertion_point(field_set_allocated:PlanRecruit.zcode)
}

// string zyName = 5;
inline void PlanRecruit::clear_zyname() {
  zyname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PlanRecruit::zyname() const {
  // @@protoc_insertion_point(field_get:PlanRecruit.zyName)
  return _internal_zyname();
}
inline void PlanRecruit::set_zyname(const std::string& value) {
  _internal_set_zyname(value);
  // @@protoc_insertion_point(field_set:PlanRecruit.zyName)
}
inline std::string* PlanRecruit::mutable_zyname() {
  // @@protoc_insertion_point(field_mutable:PlanRecruit.zyName)
  return _internal_mutable_zyname();
}
inline const std::string& PlanRecruit::_internal_zyname() const {
  return zyname_.GetNoArena();
}
inline void PlanRecruit::_internal_set_zyname(const std::string& value) {
  
  zyname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PlanRecruit::set_zyname(std::string&& value) {
  
  zyname_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PlanRecruit.zyName)
}
inline void PlanRecruit::set_zyname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  zyname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PlanRecruit.zyName)
}
inline void PlanRecruit::set_zyname(const char* value, size_t size) {
  
  zyname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PlanRecruit.zyName)
}
inline std::string* PlanRecruit::_internal_mutable_zyname() {
  
  return zyname_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PlanRecruit::release_zyname() {
  // @@protoc_insertion_point(field_release:PlanRecruit.zyName)
  
  return zyname_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PlanRecruit::set_allocated_zyname(std::string* zyname) {
  if (zyname != nullptr) {
    
  } else {
    
  }
  zyname_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), zyname);
  // @@protoc_insertion_point(field_set_allocated:PlanRecruit.zyName)
}

// string planCount = 6;
inline void PlanRecruit::clear_plancount() {
  plancount_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PlanRecruit::plancount() const {
  // @@protoc_insertion_point(field_get:PlanRecruit.planCount)
  return _internal_plancount();
}
inline void PlanRecruit::set_plancount(const std::string& value) {
  _internal_set_plancount(value);
  // @@protoc_insertion_point(field_set:PlanRecruit.planCount)
}
inline std::string* PlanRecruit::mutable_plancount() {
  // @@protoc_insertion_point(field_mutable:PlanRecruit.planCount)
  return _internal_mutable_plancount();
}
inline const std::string& PlanRecruit::_internal_plancount() const {
  return plancount_.GetNoArena();
}
inline void PlanRecruit::_internal_set_plancount(const std::string& value) {
  
  plancount_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PlanRecruit::set_plancount(std::string&& value) {
  
  plancount_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PlanRecruit.planCount)
}
inline void PlanRecruit::set_plancount(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  plancount_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PlanRecruit.planCount)
}
inline void PlanRecruit::set_plancount(const char* value, size_t size) {
  
  plancount_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PlanRecruit.planCount)
}
inline std::string* PlanRecruit::_internal_mutable_plancount() {
  
  return plancount_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PlanRecruit::release_plancount() {
  // @@protoc_insertion_point(field_release:PlanRecruit.planCount)
  
  return plancount_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PlanRecruit::set_allocated_plancount(std::string* plancount) {
  if (plancount != nullptr) {
    
  } else {
    
  }
  plancount_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), plancount);
  // @@protoc_insertion_point(field_set_allocated:PlanRecruit.planCount)
}

// string zsnf = 7;
inline void PlanRecruit::clear_zsnf() {
  zsnf_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PlanRecruit::zsnf() const {
  // @@protoc_insertion_point(field_get:PlanRecruit.zsnf)
  return _internal_zsnf();
}
inline void PlanRecruit::set_zsnf(const std::string& value) {
  _internal_set_zsnf(value);
  // @@protoc_insertion_point(field_set:PlanRecruit.zsnf)
}
inline std::string* PlanRecruit::mutable_zsnf() {
  // @@protoc_insertion_point(field_mutable:PlanRecruit.zsnf)
  return _internal_mutable_zsnf();
}
inline const std::string& PlanRecruit::_internal_zsnf() const {
  return zsnf_.GetNoArena();
}
inline void PlanRecruit::_internal_set_zsnf(const std::string& value) {
  
  zsnf_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PlanRecruit::set_zsnf(std::string&& value) {
  
  zsnf_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PlanRecruit.zsnf)
}
inline void PlanRecruit::set_zsnf(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  zsnf_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PlanRecruit.zsnf)
}
inline void PlanRecruit::set_zsnf(const char* value, size_t size) {
  
  zsnf_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PlanRecruit.zsnf)
}
inline std::string* PlanRecruit::_internal_mutable_zsnf() {
  
  return zsnf_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PlanRecruit::release_zsnf() {
  // @@protoc_insertion_point(field_release:PlanRecruit.zsnf)
  
  return zsnf_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PlanRecruit::set_allocated_zsnf(std::string* zsnf) {
  if (zsnf != nullptr) {
    
  } else {
    
  }
  zsnf_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), zsnf);
  // @@protoc_insertion_point(field_set_allocated:PlanRecruit.zsnf)
}

// string pici = 8;
inline void PlanRecruit::clear_pici() {
  pici_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PlanRecruit::pici() const {
  // @@protoc_insertion_point(field_get:PlanRecruit.pici)
  return _internal_pici();
}
inline void PlanRecruit::set_pici(const std::string& value) {
  _internal_set_pici(value);
  // @@protoc_insertion_point(field_set:PlanRecruit.pici)
}
inline std::string* PlanRecruit::mutable_pici() {
  // @@protoc_insertion_point(field_mutable:PlanRecruit.pici)
  return _internal_mutable_pici();
}
inline const std::string& PlanRecruit::_internal_pici() const {
  return pici_.GetNoArena();
}
inline void PlanRecruit::_internal_set_pici(const std::string& value) {
  
  pici_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PlanRecruit::set_pici(std::string&& value) {
  
  pici_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PlanRecruit.pici)
}
inline void PlanRecruit::set_pici(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pici_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PlanRecruit.pici)
}
inline void PlanRecruit::set_pici(const char* value, size_t size) {
  
  pici_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PlanRecruit.pici)
}
inline std::string* PlanRecruit::_internal_mutable_pici() {
  
  return pici_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PlanRecruit::release_pici() {
  // @@protoc_insertion_point(field_release:PlanRecruit.pici)
  
  return pici_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PlanRecruit::set_allocated_pici(std::string* pici) {
  if (pici != nullptr) {
    
  } else {
    
  }
  pici_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pici);
  // @@protoc_insertion_point(field_set_allocated:PlanRecruit.pici)
}

// -------------------------------------------------------------------

// XkyqInfo

// fixed64 id = 1;
inline void XkyqInfo::clear_id() {
  id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 XkyqInfo::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 XkyqInfo::id() const {
  // @@protoc_insertion_point(field_get:XkyqInfo.id)
  return _internal_id();
}
inline void XkyqInfo::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  id_ = value;
}
inline void XkyqInfo::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:XkyqInfo.id)
}

// fixed64 schoolId = 2;
inline void XkyqInfo::clear_schoolid() {
  schoolid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 XkyqInfo::_internal_schoolid() const {
  return schoolid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 XkyqInfo::schoolid() const {
  // @@protoc_insertion_point(field_get:XkyqInfo.schoolId)
  return _internal_schoolid();
}
inline void XkyqInfo::_internal_set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  schoolid_ = value;
}
inline void XkyqInfo::set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_schoolid(value);
  // @@protoc_insertion_point(field_set:XkyqInfo.schoolId)
}

// fixed64 zyId = 3;
inline void XkyqInfo::clear_zyid() {
  zyid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 XkyqInfo::_internal_zyid() const {
  return zyid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 XkyqInfo::zyid() const {
  // @@protoc_insertion_point(field_get:XkyqInfo.zyId)
  return _internal_zyid();
}
inline void XkyqInfo::_internal_set_zyid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  zyid_ = value;
}
inline void XkyqInfo::set_zyid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_zyid(value);
  // @@protoc_insertion_point(field_set:XkyqInfo.zyId)
}

// string zyName = 4;
inline void XkyqInfo::clear_zyname() {
  zyname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& XkyqInfo::zyname() const {
  // @@protoc_insertion_point(field_get:XkyqInfo.zyName)
  return _internal_zyname();
}
inline void XkyqInfo::set_zyname(const std::string& value) {
  _internal_set_zyname(value);
  // @@protoc_insertion_point(field_set:XkyqInfo.zyName)
}
inline std::string* XkyqInfo::mutable_zyname() {
  // @@protoc_insertion_point(field_mutable:XkyqInfo.zyName)
  return _internal_mutable_zyname();
}
inline const std::string& XkyqInfo::_internal_zyname() const {
  return zyname_.GetNoArena();
}
inline void XkyqInfo::_internal_set_zyname(const std::string& value) {
  
  zyname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void XkyqInfo::set_zyname(std::string&& value) {
  
  zyname_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XkyqInfo.zyName)
}
inline void XkyqInfo::set_zyname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  zyname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XkyqInfo.zyName)
}
inline void XkyqInfo::set_zyname(const char* value, size_t size) {
  
  zyname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XkyqInfo.zyName)
}
inline std::string* XkyqInfo::_internal_mutable_zyname() {
  
  return zyname_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* XkyqInfo::release_zyname() {
  // @@protoc_insertion_point(field_release:XkyqInfo.zyName)
  
  return zyname_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void XkyqInfo::set_allocated_zyname(std::string* zyname) {
  if (zyname != nullptr) {
    
  } else {
    
  }
  zyname_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), zyname);
  // @@protoc_insertion_point(field_set_allocated:XkyqInfo.zyName)
}

// string planCount = 5;
inline void XkyqInfo::clear_plancount() {
  plancount_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& XkyqInfo::plancount() const {
  // @@protoc_insertion_point(field_get:XkyqInfo.planCount)
  return _internal_plancount();
}
inline void XkyqInfo::set_plancount(const std::string& value) {
  _internal_set_plancount(value);
  // @@protoc_insertion_point(field_set:XkyqInfo.planCount)
}
inline std::string* XkyqInfo::mutable_plancount() {
  // @@protoc_insertion_point(field_mutable:XkyqInfo.planCount)
  return _internal_mutable_plancount();
}
inline const std::string& XkyqInfo::_internal_plancount() const {
  return plancount_.GetNoArena();
}
inline void XkyqInfo::_internal_set_plancount(const std::string& value) {
  
  plancount_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void XkyqInfo::set_plancount(std::string&& value) {
  
  plancount_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XkyqInfo.planCount)
}
inline void XkyqInfo::set_plancount(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  plancount_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XkyqInfo.planCount)
}
inline void XkyqInfo::set_plancount(const char* value, size_t size) {
  
  plancount_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XkyqInfo.planCount)
}
inline std::string* XkyqInfo::_internal_mutable_plancount() {
  
  return plancount_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* XkyqInfo::release_plancount() {
  // @@protoc_insertion_point(field_release:XkyqInfo.planCount)
  
  return plancount_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void XkyqInfo::set_allocated_plancount(std::string* plancount) {
  if (plancount != nullptr) {
    
  } else {
    
  }
  plancount_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), plancount);
  // @@protoc_insertion_point(field_set_allocated:XkyqInfo.planCount)
}

// string zsnf = 6;
inline void XkyqInfo::clear_zsnf() {
  zsnf_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& XkyqInfo::zsnf() const {
  // @@protoc_insertion_point(field_get:XkyqInfo.zsnf)
  return _internal_zsnf();
}
inline void XkyqInfo::set_zsnf(const std::string& value) {
  _internal_set_zsnf(value);
  // @@protoc_insertion_point(field_set:XkyqInfo.zsnf)
}
inline std::string* XkyqInfo::mutable_zsnf() {
  // @@protoc_insertion_point(field_mutable:XkyqInfo.zsnf)
  return _internal_mutable_zsnf();
}
inline const std::string& XkyqInfo::_internal_zsnf() const {
  return zsnf_.GetNoArena();
}
inline void XkyqInfo::_internal_set_zsnf(const std::string& value) {
  
  zsnf_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void XkyqInfo::set_zsnf(std::string&& value) {
  
  zsnf_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XkyqInfo.zsnf)
}
inline void XkyqInfo::set_zsnf(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  zsnf_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XkyqInfo.zsnf)
}
inline void XkyqInfo::set_zsnf(const char* value, size_t size) {
  
  zsnf_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XkyqInfo.zsnf)
}
inline std::string* XkyqInfo::_internal_mutable_zsnf() {
  
  return zsnf_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* XkyqInfo::release_zsnf() {
  // @@protoc_insertion_point(field_release:XkyqInfo.zsnf)
  
  return zsnf_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void XkyqInfo::set_allocated_zsnf(std::string* zsnf) {
  if (zsnf != nullptr) {
    
  } else {
    
  }
  zsnf_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), zsnf);
  // @@protoc_insertion_point(field_set_allocated:XkyqInfo.zsnf)
}

// string pici = 7;
inline void XkyqInfo::clear_pici() {
  pici_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& XkyqInfo::pici() const {
  // @@protoc_insertion_point(field_get:XkyqInfo.pici)
  return _internal_pici();
}
inline void XkyqInfo::set_pici(const std::string& value) {
  _internal_set_pici(value);
  // @@protoc_insertion_point(field_set:XkyqInfo.pici)
}
inline std::string* XkyqInfo::mutable_pici() {
  // @@protoc_insertion_point(field_mutable:XkyqInfo.pici)
  return _internal_mutable_pici();
}
inline const std::string& XkyqInfo::_internal_pici() const {
  return pici_.GetNoArena();
}
inline void XkyqInfo::_internal_set_pici(const std::string& value) {
  
  pici_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void XkyqInfo::set_pici(std::string&& value) {
  
  pici_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XkyqInfo.pici)
}
inline void XkyqInfo::set_pici(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pici_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XkyqInfo.pici)
}
inline void XkyqInfo::set_pici(const char* value, size_t size) {
  
  pici_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XkyqInfo.pici)
}
inline std::string* XkyqInfo::_internal_mutable_pici() {
  
  return pici_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* XkyqInfo::release_pici() {
  // @@protoc_insertion_point(field_release:XkyqInfo.pici)
  
  return pici_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void XkyqInfo::set_allocated_pici(std::string* pici) {
  if (pici != nullptr) {
    
  } else {
    
  }
  pici_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pici);
  // @@protoc_insertion_point(field_set_allocated:XkyqInfo.pici)
}

// -------------------------------------------------------------------

// YxszInfo

// fixed64 xyName = 1;
inline void YxszInfo::clear_xyname() {
  xyname_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 YxszInfo::_internal_xyname() const {
  return xyname_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 YxszInfo::xyname() const {
  // @@protoc_insertion_point(field_get:YxszInfo.xyName)
  return _internal_xyname();
}
inline void YxszInfo::_internal_set_xyname(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  xyname_ = value;
}
inline void YxszInfo::set_xyname(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_xyname(value);
  // @@protoc_insertion_point(field_set:YxszInfo.xyName)
}

// repeated .XkyqInfo xkyqInfo = 2;
inline int YxszInfo::_internal_xkyqinfo_size() const {
  return xkyqinfo_.size();
}
inline int YxszInfo::xkyqinfo_size() const {
  return _internal_xkyqinfo_size();
}
inline void YxszInfo::clear_xkyqinfo() {
  xkyqinfo_.Clear();
}
inline ::XkyqInfo* YxszInfo::mutable_xkyqinfo(int index) {
  // @@protoc_insertion_point(field_mutable:YxszInfo.xkyqInfo)
  return xkyqinfo_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::XkyqInfo >*
YxszInfo::mutable_xkyqinfo() {
  // @@protoc_insertion_point(field_mutable_list:YxszInfo.xkyqInfo)
  return &xkyqinfo_;
}
inline const ::XkyqInfo& YxszInfo::_internal_xkyqinfo(int index) const {
  return xkyqinfo_.Get(index);
}
inline const ::XkyqInfo& YxszInfo::xkyqinfo(int index) const {
  // @@protoc_insertion_point(field_get:YxszInfo.xkyqInfo)
  return _internal_xkyqinfo(index);
}
inline ::XkyqInfo* YxszInfo::_internal_add_xkyqinfo() {
  return xkyqinfo_.Add();
}
inline ::XkyqInfo* YxszInfo::add_xkyqinfo() {
  // @@protoc_insertion_point(field_add:YxszInfo.xkyqInfo)
  return _internal_add_xkyqinfo();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::XkyqInfo >&
YxszInfo::xkyqinfo() const {
  // @@protoc_insertion_point(field_list:YxszInfo.xkyqInfo)
  return xkyqinfo_;
}

// -------------------------------------------------------------------

// ZsjzInfo

// fixed64 id = 1;
inline void ZsjzInfo::clear_id() {
  id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ZsjzInfo::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ZsjzInfo::id() const {
  // @@protoc_insertion_point(field_get:ZsjzInfo.id)
  return _internal_id();
}
inline void ZsjzInfo::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  id_ = value;
}
inline void ZsjzInfo::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:ZsjzInfo.id)
}

// fixed64 schoolId = 2;
inline void ZsjzInfo::clear_schoolid() {
  schoolid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ZsjzInfo::_internal_schoolid() const {
  return schoolid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ZsjzInfo::schoolid() const {
  // @@protoc_insertion_point(field_get:ZsjzInfo.schoolId)
  return _internal_schoolid();
}
inline void ZsjzInfo::_internal_set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  schoolid_ = value;
}
inline void ZsjzInfo::set_schoolid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_schoolid(value);
  // @@protoc_insertion_point(field_set:ZsjzInfo.schoolId)
}

// fixed64 title = 3;
inline void ZsjzInfo::clear_title() {
  title_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ZsjzInfo::_internal_title() const {
  return title_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ZsjzInfo::title() const {
  // @@protoc_insertion_point(field_get:ZsjzInfo.title)
  return _internal_title();
}
inline void ZsjzInfo::_internal_set_title(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  title_ = value;
}
inline void ZsjzInfo::set_title(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_title(value);
  // @@protoc_insertion_point(field_set:ZsjzInfo.title)
}

// string publishDate = 4;
inline void ZsjzInfo::clear_publishdate() {
  publishdate_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ZsjzInfo::publishdate() const {
  // @@protoc_insertion_point(field_get:ZsjzInfo.publishDate)
  return _internal_publishdate();
}
inline void ZsjzInfo::set_publishdate(const std::string& value) {
  _internal_set_publishdate(value);
  // @@protoc_insertion_point(field_set:ZsjzInfo.publishDate)
}
inline std::string* ZsjzInfo::mutable_publishdate() {
  // @@protoc_insertion_point(field_mutable:ZsjzInfo.publishDate)
  return _internal_mutable_publishdate();
}
inline const std::string& ZsjzInfo::_internal_publishdate() const {
  return publishdate_.GetNoArena();
}
inline void ZsjzInfo::_internal_set_publishdate(const std::string& value) {
  
  publishdate_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ZsjzInfo::set_publishdate(std::string&& value) {
  
  publishdate_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZsjzInfo.publishDate)
}
inline void ZsjzInfo::set_publishdate(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  publishdate_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZsjzInfo.publishDate)
}
inline void ZsjzInfo::set_publishdate(const char* value, size_t size) {
  
  publishdate_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZsjzInfo.publishDate)
}
inline std::string* ZsjzInfo::_internal_mutable_publishdate() {
  
  return publishdate_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ZsjzInfo::release_publishdate() {
  // @@protoc_insertion_point(field_release:ZsjzInfo.publishDate)
  
  return publishdate_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ZsjzInfo::set_allocated_publishdate(std::string* publishdate) {
  if (publishdate != nullptr) {
    
  } else {
    
  }
  publishdate_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), publishdate);
  // @@protoc_insertion_point(field_set_allocated:ZsjzInfo.publishDate)
}

// string content = 5;
inline void ZsjzInfo::clear_content() {
  content_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ZsjzInfo::content() const {
  // @@protoc_insertion_point(field_get:ZsjzInfo.content)
  return _internal_content();
}
inline void ZsjzInfo::set_content(const std::string& value) {
  _internal_set_content(value);
  // @@protoc_insertion_point(field_set:ZsjzInfo.content)
}
inline std::string* ZsjzInfo::mutable_content() {
  // @@protoc_insertion_point(field_mutable:ZsjzInfo.content)
  return _internal_mutable_content();
}
inline const std::string& ZsjzInfo::_internal_content() const {
  return content_.GetNoArena();
}
inline void ZsjzInfo::_internal_set_content(const std::string& value) {
  
  content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ZsjzInfo::set_content(std::string&& value) {
  
  content_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZsjzInfo.content)
}
inline void ZsjzInfo::set_content(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZsjzInfo.content)
}
inline void ZsjzInfo::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZsjzInfo.content)
}
inline std::string* ZsjzInfo::_internal_mutable_content() {
  
  return content_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ZsjzInfo::release_content() {
  // @@protoc_insertion_point(field_release:ZsjzInfo.content)
  
  return content_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ZsjzInfo::set_allocated_content(std::string* content) {
  if (content != nullptr) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:ZsjzInfo.content)
}

// -------------------------------------------------------------------

// C_GetZntjInfoList_3000

// string kelei = 1;
inline void C_GetZntjInfoList_3000::clear_kelei() {
  kelei_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetZntjInfoList_3000::kelei() const {
  // @@protoc_insertion_point(field_get:C_GetZntjInfoList_3000.kelei)
  return _internal_kelei();
}
inline void C_GetZntjInfoList_3000::set_kelei(const std::string& value) {
  _internal_set_kelei(value);
  // @@protoc_insertion_point(field_set:C_GetZntjInfoList_3000.kelei)
}
inline std::string* C_GetZntjInfoList_3000::mutable_kelei() {
  // @@protoc_insertion_point(field_mutable:C_GetZntjInfoList_3000.kelei)
  return _internal_mutable_kelei();
}
inline const std::string& C_GetZntjInfoList_3000::_internal_kelei() const {
  return kelei_.GetNoArena();
}
inline void C_GetZntjInfoList_3000::_internal_set_kelei(const std::string& value) {
  
  kelei_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetZntjInfoList_3000::set_kelei(std::string&& value) {
  
  kelei_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetZntjInfoList_3000.kelei)
}
inline void C_GetZntjInfoList_3000::set_kelei(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  kelei_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetZntjInfoList_3000.kelei)
}
inline void C_GetZntjInfoList_3000::set_kelei(const char* value, size_t size) {
  
  kelei_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetZntjInfoList_3000.kelei)
}
inline std::string* C_GetZntjInfoList_3000::_internal_mutable_kelei() {
  
  return kelei_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetZntjInfoList_3000::release_kelei() {
  // @@protoc_insertion_point(field_release:C_GetZntjInfoList_3000.kelei)
  
  return kelei_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetZntjInfoList_3000::set_allocated_kelei(std::string* kelei) {
  if (kelei != nullptr) {
    
  } else {
    
  }
  kelei_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), kelei);
  // @@protoc_insertion_point(field_set_allocated:C_GetZntjInfoList_3000.kelei)
}

// int32 score = 2;
inline void C_GetZntjInfoList_3000::clear_score() {
  score_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetZntjInfoList_3000::_internal_score() const {
  return score_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetZntjInfoList_3000::score() const {
  // @@protoc_insertion_point(field_get:C_GetZntjInfoList_3000.score)
  return _internal_score();
}
inline void C_GetZntjInfoList_3000::_internal_set_score(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  score_ = value;
}
inline void C_GetZntjInfoList_3000::set_score(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_score(value);
  // @@protoc_insertion_point(field_set:C_GetZntjInfoList_3000.score)
}

// int32 weishu = 3;
inline void C_GetZntjInfoList_3000::clear_weishu() {
  weishu_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetZntjInfoList_3000::_internal_weishu() const {
  return weishu_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetZntjInfoList_3000::weishu() const {
  // @@protoc_insertion_point(field_get:C_GetZntjInfoList_3000.weishu)
  return _internal_weishu();
}
inline void C_GetZntjInfoList_3000::_internal_set_weishu(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  weishu_ = value;
}
inline void C_GetZntjInfoList_3000::set_weishu(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_weishu(value);
  // @@protoc_insertion_point(field_set:C_GetZntjInfoList_3000.weishu)
}

// string province = 4;
inline void C_GetZntjInfoList_3000::clear_province() {
  province_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetZntjInfoList_3000::province() const {
  // @@protoc_insertion_point(field_get:C_GetZntjInfoList_3000.province)
  return _internal_province();
}
inline void C_GetZntjInfoList_3000::set_province(const std::string& value) {
  _internal_set_province(value);
  // @@protoc_insertion_point(field_set:C_GetZntjInfoList_3000.province)
}
inline std::string* C_GetZntjInfoList_3000::mutable_province() {
  // @@protoc_insertion_point(field_mutable:C_GetZntjInfoList_3000.province)
  return _internal_mutable_province();
}
inline const std::string& C_GetZntjInfoList_3000::_internal_province() const {
  return province_.GetNoArena();
}
inline void C_GetZntjInfoList_3000::_internal_set_province(const std::string& value) {
  
  province_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetZntjInfoList_3000::set_province(std::string&& value) {
  
  province_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetZntjInfoList_3000.province)
}
inline void C_GetZntjInfoList_3000::set_province(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  province_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetZntjInfoList_3000.province)
}
inline void C_GetZntjInfoList_3000::set_province(const char* value, size_t size) {
  
  province_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetZntjInfoList_3000.province)
}
inline std::string* C_GetZntjInfoList_3000::_internal_mutable_province() {
  
  return province_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetZntjInfoList_3000::release_province() {
  // @@protoc_insertion_point(field_release:C_GetZntjInfoList_3000.province)
  
  return province_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetZntjInfoList_3000::set_allocated_province(std::string* province) {
  if (province != nullptr) {
    
  } else {
    
  }
  province_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), province);
  // @@protoc_insertion_point(field_set_allocated:C_GetZntjInfoList_3000.province)
}

// string type = 5;
inline void C_GetZntjInfoList_3000::clear_type() {
  type_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetZntjInfoList_3000::type() const {
  // @@protoc_insertion_point(field_get:C_GetZntjInfoList_3000.type)
  return _internal_type();
}
inline void C_GetZntjInfoList_3000::set_type(const std::string& value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:C_GetZntjInfoList_3000.type)
}
inline std::string* C_GetZntjInfoList_3000::mutable_type() {
  // @@protoc_insertion_point(field_mutable:C_GetZntjInfoList_3000.type)
  return _internal_mutable_type();
}
inline const std::string& C_GetZntjInfoList_3000::_internal_type() const {
  return type_.GetNoArena();
}
inline void C_GetZntjInfoList_3000::_internal_set_type(const std::string& value) {
  
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetZntjInfoList_3000::set_type(std::string&& value) {
  
  type_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetZntjInfoList_3000.type)
}
inline void C_GetZntjInfoList_3000::set_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetZntjInfoList_3000.type)
}
inline void C_GetZntjInfoList_3000::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetZntjInfoList_3000.type)
}
inline std::string* C_GetZntjInfoList_3000::_internal_mutable_type() {
  
  return type_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetZntjInfoList_3000::release_type() {
  // @@protoc_insertion_point(field_release:C_GetZntjInfoList_3000.type)
  
  return type_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetZntjInfoList_3000::set_allocated_type(std::string* type) {
  if (type != nullptr) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:C_GetZntjInfoList_3000.type)
}

// string pici = 6;
inline void C_GetZntjInfoList_3000::clear_pici() {
  pici_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetZntjInfoList_3000::pici() const {
  // @@protoc_insertion_point(field_get:C_GetZntjInfoList_3000.pici)
  return _internal_pici();
}
inline void C_GetZntjInfoList_3000::set_pici(const std::string& value) {
  _internal_set_pici(value);
  // @@protoc_insertion_point(field_set:C_GetZntjInfoList_3000.pici)
}
inline std::string* C_GetZntjInfoList_3000::mutable_pici() {
  // @@protoc_insertion_point(field_mutable:C_GetZntjInfoList_3000.pici)
  return _internal_mutable_pici();
}
inline const std::string& C_GetZntjInfoList_3000::_internal_pici() const {
  return pici_.GetNoArena();
}
inline void C_GetZntjInfoList_3000::_internal_set_pici(const std::string& value) {
  
  pici_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetZntjInfoList_3000::set_pici(std::string&& value) {
  
  pici_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetZntjInfoList_3000.pici)
}
inline void C_GetZntjInfoList_3000::set_pici(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pici_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetZntjInfoList_3000.pici)
}
inline void C_GetZntjInfoList_3000::set_pici(const char* value, size_t size) {
  
  pici_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetZntjInfoList_3000.pici)
}
inline std::string* C_GetZntjInfoList_3000::_internal_mutable_pici() {
  
  return pici_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetZntjInfoList_3000::release_pici() {
  // @@protoc_insertion_point(field_release:C_GetZntjInfoList_3000.pici)
  
  return pici_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetZntjInfoList_3000::set_allocated_pici(std::string* pici) {
  if (pici != nullptr) {
    
  } else {
    
  }
  pici_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pici);
  // @@protoc_insertion_point(field_set_allocated:C_GetZntjInfoList_3000.pici)
}

// string cengci = 7;
inline void C_GetZntjInfoList_3000::clear_cengci() {
  cengci_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetZntjInfoList_3000::cengci() const {
  // @@protoc_insertion_point(field_get:C_GetZntjInfoList_3000.cengci)
  return _internal_cengci();
}
inline void C_GetZntjInfoList_3000::set_cengci(const std::string& value) {
  _internal_set_cengci(value);
  // @@protoc_insertion_point(field_set:C_GetZntjInfoList_3000.cengci)
}
inline std::string* C_GetZntjInfoList_3000::mutable_cengci() {
  // @@protoc_insertion_point(field_mutable:C_GetZntjInfoList_3000.cengci)
  return _internal_mutable_cengci();
}
inline const std::string& C_GetZntjInfoList_3000::_internal_cengci() const {
  return cengci_.GetNoArena();
}
inline void C_GetZntjInfoList_3000::_internal_set_cengci(const std::string& value) {
  
  cengci_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetZntjInfoList_3000::set_cengci(std::string&& value) {
  
  cengci_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetZntjInfoList_3000.cengci)
}
inline void C_GetZntjInfoList_3000::set_cengci(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  cengci_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetZntjInfoList_3000.cengci)
}
inline void C_GetZntjInfoList_3000::set_cengci(const char* value, size_t size) {
  
  cengci_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetZntjInfoList_3000.cengci)
}
inline std::string* C_GetZntjInfoList_3000::_internal_mutable_cengci() {
  
  return cengci_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetZntjInfoList_3000::release_cengci() {
  // @@protoc_insertion_point(field_release:C_GetZntjInfoList_3000.cengci)
  
  return cengci_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetZntjInfoList_3000::set_allocated_cengci(std::string* cengci) {
  if (cengci != nullptr) {
    
  } else {
    
  }
  cengci_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), cengci);
  // @@protoc_insertion_point(field_set_allocated:C_GetZntjInfoList_3000.cengci)
}

// int32 startScore = 8;
inline void C_GetZntjInfoList_3000::clear_startscore() {
  startscore_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetZntjInfoList_3000::_internal_startscore() const {
  return startscore_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetZntjInfoList_3000::startscore() const {
  // @@protoc_insertion_point(field_get:C_GetZntjInfoList_3000.startScore)
  return _internal_startscore();
}
inline void C_GetZntjInfoList_3000::_internal_set_startscore(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  startscore_ = value;
}
inline void C_GetZntjInfoList_3000::set_startscore(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_startscore(value);
  // @@protoc_insertion_point(field_set:C_GetZntjInfoList_3000.startScore)
}

// int32 endScore = 9;
inline void C_GetZntjInfoList_3000::clear_endscore() {
  endscore_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetZntjInfoList_3000::_internal_endscore() const {
  return endscore_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetZntjInfoList_3000::endscore() const {
  // @@protoc_insertion_point(field_get:C_GetZntjInfoList_3000.endScore)
  return _internal_endscore();
}
inline void C_GetZntjInfoList_3000::_internal_set_endscore(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  endscore_ = value;
}
inline void C_GetZntjInfoList_3000::set_endscore(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_endscore(value);
  // @@protoc_insertion_point(field_set:C_GetZntjInfoList_3000.endScore)
}

// int32 page = 10;
inline void C_GetZntjInfoList_3000::clear_page() {
  page_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetZntjInfoList_3000::_internal_page() const {
  return page_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetZntjInfoList_3000::page() const {
  // @@protoc_insertion_point(field_get:C_GetZntjInfoList_3000.page)
  return _internal_page();
}
inline void C_GetZntjInfoList_3000::_internal_set_page(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  page_ = value;
}
inline void C_GetZntjInfoList_3000::set_page(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:C_GetZntjInfoList_3000.page)
}

// int32 limit = 11;
inline void C_GetZntjInfoList_3000::clear_limit() {
  limit_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetZntjInfoList_3000::_internal_limit() const {
  return limit_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetZntjInfoList_3000::limit() const {
  // @@protoc_insertion_point(field_get:C_GetZntjInfoList_3000.limit)
  return _internal_limit();
}
inline void C_GetZntjInfoList_3000::_internal_set_limit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  limit_ = value;
}
inline void C_GetZntjInfoList_3000::set_limit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_limit(value);
  // @@protoc_insertion_point(field_set:C_GetZntjInfoList_3000.limit)
}

// string sortFile = 12;
inline void C_GetZntjInfoList_3000::clear_sortfile() {
  sortfile_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetZntjInfoList_3000::sortfile() const {
  // @@protoc_insertion_point(field_get:C_GetZntjInfoList_3000.sortFile)
  return _internal_sortfile();
}
inline void C_GetZntjInfoList_3000::set_sortfile(const std::string& value) {
  _internal_set_sortfile(value);
  // @@protoc_insertion_point(field_set:C_GetZntjInfoList_3000.sortFile)
}
inline std::string* C_GetZntjInfoList_3000::mutable_sortfile() {
  // @@protoc_insertion_point(field_mutable:C_GetZntjInfoList_3000.sortFile)
  return _internal_mutable_sortfile();
}
inline const std::string& C_GetZntjInfoList_3000::_internal_sortfile() const {
  return sortfile_.GetNoArena();
}
inline void C_GetZntjInfoList_3000::_internal_set_sortfile(const std::string& value) {
  
  sortfile_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetZntjInfoList_3000::set_sortfile(std::string&& value) {
  
  sortfile_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetZntjInfoList_3000.sortFile)
}
inline void C_GetZntjInfoList_3000::set_sortfile(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  sortfile_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetZntjInfoList_3000.sortFile)
}
inline void C_GetZntjInfoList_3000::set_sortfile(const char* value, size_t size) {
  
  sortfile_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetZntjInfoList_3000.sortFile)
}
inline std::string* C_GetZntjInfoList_3000::_internal_mutable_sortfile() {
  
  return sortfile_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetZntjInfoList_3000::release_sortfile() {
  // @@protoc_insertion_point(field_release:C_GetZntjInfoList_3000.sortFile)
  
  return sortfile_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetZntjInfoList_3000::set_allocated_sortfile(std::string* sortfile) {
  if (sortfile != nullptr) {
    
  } else {
    
  }
  sortfile_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sortfile);
  // @@protoc_insertion_point(field_set_allocated:C_GetZntjInfoList_3000.sortFile)
}

// -------------------------------------------------------------------

// S_GetZntjInfoList_3001

// repeated .ZntjInfo zntjInfo = 1;
inline int S_GetZntjInfoList_3001::_internal_zntjinfo_size() const {
  return zntjinfo_.size();
}
inline int S_GetZntjInfoList_3001::zntjinfo_size() const {
  return _internal_zntjinfo_size();
}
inline void S_GetZntjInfoList_3001::clear_zntjinfo() {
  zntjinfo_.Clear();
}
inline ::ZntjInfo* S_GetZntjInfoList_3001::mutable_zntjinfo(int index) {
  // @@protoc_insertion_point(field_mutable:S_GetZntjInfoList_3001.zntjInfo)
  return zntjinfo_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ZntjInfo >*
S_GetZntjInfoList_3001::mutable_zntjinfo() {
  // @@protoc_insertion_point(field_mutable_list:S_GetZntjInfoList_3001.zntjInfo)
  return &zntjinfo_;
}
inline const ::ZntjInfo& S_GetZntjInfoList_3001::_internal_zntjinfo(int index) const {
  return zntjinfo_.Get(index);
}
inline const ::ZntjInfo& S_GetZntjInfoList_3001::zntjinfo(int index) const {
  // @@protoc_insertion_point(field_get:S_GetZntjInfoList_3001.zntjInfo)
  return _internal_zntjinfo(index);
}
inline ::ZntjInfo* S_GetZntjInfoList_3001::_internal_add_zntjinfo() {
  return zntjinfo_.Add();
}
inline ::ZntjInfo* S_GetZntjInfoList_3001::add_zntjinfo() {
  // @@protoc_insertion_point(field_add:S_GetZntjInfoList_3001.zntjInfo)
  return _internal_add_zntjinfo();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ZntjInfo >&
S_GetZntjInfoList_3001::zntjinfo() const {
  // @@protoc_insertion_point(field_list:S_GetZntjInfoList_3001.zntjInfo)
  return zntjinfo_;
}

// .PagingInfo pagingInfo = 2;
inline bool S_GetZntjInfoList_3001::_internal_has_paginginfo() const {
  return this != internal_default_instance() && paginginfo_ != nullptr;
}
inline bool S_GetZntjInfoList_3001::has_paginginfo() const {
  return _internal_has_paginginfo();
}
inline void S_GetZntjInfoList_3001::clear_paginginfo() {
  if (GetArenaNoVirtual() == nullptr && paginginfo_ != nullptr) {
    delete paginginfo_;
  }
  paginginfo_ = nullptr;
}
inline const ::PagingInfo& S_GetZntjInfoList_3001::_internal_paginginfo() const {
  const ::PagingInfo* p = paginginfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::PagingInfo*>(
      &::_PagingInfo_default_instance_);
}
inline const ::PagingInfo& S_GetZntjInfoList_3001::paginginfo() const {
  // @@protoc_insertion_point(field_get:S_GetZntjInfoList_3001.pagingInfo)
  return _internal_paginginfo();
}
inline ::PagingInfo* S_GetZntjInfoList_3001::release_paginginfo() {
  // @@protoc_insertion_point(field_release:S_GetZntjInfoList_3001.pagingInfo)
  
  ::PagingInfo* temp = paginginfo_;
  paginginfo_ = nullptr;
  return temp;
}
inline ::PagingInfo* S_GetZntjInfoList_3001::_internal_mutable_paginginfo() {
  
  if (paginginfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::PagingInfo>(GetArenaNoVirtual());
    paginginfo_ = p;
  }
  return paginginfo_;
}
inline ::PagingInfo* S_GetZntjInfoList_3001::mutable_paginginfo() {
  // @@protoc_insertion_point(field_mutable:S_GetZntjInfoList_3001.pagingInfo)
  return _internal_mutable_paginginfo();
}
inline void S_GetZntjInfoList_3001::set_allocated_paginginfo(::PagingInfo* paginginfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete paginginfo_;
  }
  if (paginginfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      paginginfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, paginginfo, submessage_arena);
    }
    
  } else {
    
  }
  paginginfo_ = paginginfo;
  // @@protoc_insertion_point(field_set_allocated:S_GetZntjInfoList_3001.pagingInfo)
}

// -------------------------------------------------------------------

// C_GetSeachSchoolList_3002

// string schoolName = 1;
inline void C_GetSeachSchoolList_3002::clear_schoolname() {
  schoolname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetSeachSchoolList_3002::schoolname() const {
  // @@protoc_insertion_point(field_get:C_GetSeachSchoolList_3002.schoolName)
  return _internal_schoolname();
}
inline void C_GetSeachSchoolList_3002::set_schoolname(const std::string& value) {
  _internal_set_schoolname(value);
  // @@protoc_insertion_point(field_set:C_GetSeachSchoolList_3002.schoolName)
}
inline std::string* C_GetSeachSchoolList_3002::mutable_schoolname() {
  // @@protoc_insertion_point(field_mutable:C_GetSeachSchoolList_3002.schoolName)
  return _internal_mutable_schoolname();
}
inline const std::string& C_GetSeachSchoolList_3002::_internal_schoolname() const {
  return schoolname_.GetNoArena();
}
inline void C_GetSeachSchoolList_3002::_internal_set_schoolname(const std::string& value) {
  
  schoolname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetSeachSchoolList_3002::set_schoolname(std::string&& value) {
  
  schoolname_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetSeachSchoolList_3002.schoolName)
}
inline void C_GetSeachSchoolList_3002::set_schoolname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  schoolname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetSeachSchoolList_3002.schoolName)
}
inline void C_GetSeachSchoolList_3002::set_schoolname(const char* value, size_t size) {
  
  schoolname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetSeachSchoolList_3002.schoolName)
}
inline std::string* C_GetSeachSchoolList_3002::_internal_mutable_schoolname() {
  
  return schoolname_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetSeachSchoolList_3002::release_schoolname() {
  // @@protoc_insertion_point(field_release:C_GetSeachSchoolList_3002.schoolName)
  
  return schoolname_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetSeachSchoolList_3002::set_allocated_schoolname(std::string* schoolname) {
  if (schoolname != nullptr) {
    
  } else {
    
  }
  schoolname_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), schoolname);
  // @@protoc_insertion_point(field_set_allocated:C_GetSeachSchoolList_3002.schoolName)
}

// string province = 2;
inline void C_GetSeachSchoolList_3002::clear_province() {
  province_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetSeachSchoolList_3002::province() const {
  // @@protoc_insertion_point(field_get:C_GetSeachSchoolList_3002.province)
  return _internal_province();
}
inline void C_GetSeachSchoolList_3002::set_province(const std::string& value) {
  _internal_set_province(value);
  // @@protoc_insertion_point(field_set:C_GetSeachSchoolList_3002.province)
}
inline std::string* C_GetSeachSchoolList_3002::mutable_province() {
  // @@protoc_insertion_point(field_mutable:C_GetSeachSchoolList_3002.province)
  return _internal_mutable_province();
}
inline const std::string& C_GetSeachSchoolList_3002::_internal_province() const {
  return province_.GetNoArena();
}
inline void C_GetSeachSchoolList_3002::_internal_set_province(const std::string& value) {
  
  province_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetSeachSchoolList_3002::set_province(std::string&& value) {
  
  province_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetSeachSchoolList_3002.province)
}
inline void C_GetSeachSchoolList_3002::set_province(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  province_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetSeachSchoolList_3002.province)
}
inline void C_GetSeachSchoolList_3002::set_province(const char* value, size_t size) {
  
  province_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetSeachSchoolList_3002.province)
}
inline std::string* C_GetSeachSchoolList_3002::_internal_mutable_province() {
  
  return province_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetSeachSchoolList_3002::release_province() {
  // @@protoc_insertion_point(field_release:C_GetSeachSchoolList_3002.province)
  
  return province_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetSeachSchoolList_3002::set_allocated_province(std::string* province) {
  if (province != nullptr) {
    
  } else {
    
  }
  province_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), province);
  // @@protoc_insertion_point(field_set_allocated:C_GetSeachSchoolList_3002.province)
}

// string type = 3;
inline void C_GetSeachSchoolList_3002::clear_type() {
  type_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetSeachSchoolList_3002::type() const {
  // @@protoc_insertion_point(field_get:C_GetSeachSchoolList_3002.type)
  return _internal_type();
}
inline void C_GetSeachSchoolList_3002::set_type(const std::string& value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:C_GetSeachSchoolList_3002.type)
}
inline std::string* C_GetSeachSchoolList_3002::mutable_type() {
  // @@protoc_insertion_point(field_mutable:C_GetSeachSchoolList_3002.type)
  return _internal_mutable_type();
}
inline const std::string& C_GetSeachSchoolList_3002::_internal_type() const {
  return type_.GetNoArena();
}
inline void C_GetSeachSchoolList_3002::_internal_set_type(const std::string& value) {
  
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetSeachSchoolList_3002::set_type(std::string&& value) {
  
  type_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetSeachSchoolList_3002.type)
}
inline void C_GetSeachSchoolList_3002::set_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetSeachSchoolList_3002.type)
}
inline void C_GetSeachSchoolList_3002::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetSeachSchoolList_3002.type)
}
inline std::string* C_GetSeachSchoolList_3002::_internal_mutable_type() {
  
  return type_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetSeachSchoolList_3002::release_type() {
  // @@protoc_insertion_point(field_release:C_GetSeachSchoolList_3002.type)
  
  return type_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetSeachSchoolList_3002::set_allocated_type(std::string* type) {
  if (type != nullptr) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:C_GetSeachSchoolList_3002.type)
}

// string pici = 4;
inline void C_GetSeachSchoolList_3002::clear_pici() {
  pici_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetSeachSchoolList_3002::pici() const {
  // @@protoc_insertion_point(field_get:C_GetSeachSchoolList_3002.pici)
  return _internal_pici();
}
inline void C_GetSeachSchoolList_3002::set_pici(const std::string& value) {
  _internal_set_pici(value);
  // @@protoc_insertion_point(field_set:C_GetSeachSchoolList_3002.pici)
}
inline std::string* C_GetSeachSchoolList_3002::mutable_pici() {
  // @@protoc_insertion_point(field_mutable:C_GetSeachSchoolList_3002.pici)
  return _internal_mutable_pici();
}
inline const std::string& C_GetSeachSchoolList_3002::_internal_pici() const {
  return pici_.GetNoArena();
}
inline void C_GetSeachSchoolList_3002::_internal_set_pici(const std::string& value) {
  
  pici_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetSeachSchoolList_3002::set_pici(std::string&& value) {
  
  pici_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetSeachSchoolList_3002.pici)
}
inline void C_GetSeachSchoolList_3002::set_pici(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pici_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetSeachSchoolList_3002.pici)
}
inline void C_GetSeachSchoolList_3002::set_pici(const char* value, size_t size) {
  
  pici_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetSeachSchoolList_3002.pici)
}
inline std::string* C_GetSeachSchoolList_3002::_internal_mutable_pici() {
  
  return pici_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetSeachSchoolList_3002::release_pici() {
  // @@protoc_insertion_point(field_release:C_GetSeachSchoolList_3002.pici)
  
  return pici_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetSeachSchoolList_3002::set_allocated_pici(std::string* pici) {
  if (pici != nullptr) {
    
  } else {
    
  }
  pici_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pici);
  // @@protoc_insertion_point(field_set_allocated:C_GetSeachSchoolList_3002.pici)
}

// string cengci = 5;
inline void C_GetSeachSchoolList_3002::clear_cengci() {
  cengci_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetSeachSchoolList_3002::cengci() const {
  // @@protoc_insertion_point(field_get:C_GetSeachSchoolList_3002.cengci)
  return _internal_cengci();
}
inline void C_GetSeachSchoolList_3002::set_cengci(const std::string& value) {
  _internal_set_cengci(value);
  // @@protoc_insertion_point(field_set:C_GetSeachSchoolList_3002.cengci)
}
inline std::string* C_GetSeachSchoolList_3002::mutable_cengci() {
  // @@protoc_insertion_point(field_mutable:C_GetSeachSchoolList_3002.cengci)
  return _internal_mutable_cengci();
}
inline const std::string& C_GetSeachSchoolList_3002::_internal_cengci() const {
  return cengci_.GetNoArena();
}
inline void C_GetSeachSchoolList_3002::_internal_set_cengci(const std::string& value) {
  
  cengci_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetSeachSchoolList_3002::set_cengci(std::string&& value) {
  
  cengci_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetSeachSchoolList_3002.cengci)
}
inline void C_GetSeachSchoolList_3002::set_cengci(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  cengci_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetSeachSchoolList_3002.cengci)
}
inline void C_GetSeachSchoolList_3002::set_cengci(const char* value, size_t size) {
  
  cengci_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetSeachSchoolList_3002.cengci)
}
inline std::string* C_GetSeachSchoolList_3002::_internal_mutable_cengci() {
  
  return cengci_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetSeachSchoolList_3002::release_cengci() {
  // @@protoc_insertion_point(field_release:C_GetSeachSchoolList_3002.cengci)
  
  return cengci_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetSeachSchoolList_3002::set_allocated_cengci(std::string* cengci) {
  if (cengci != nullptr) {
    
  } else {
    
  }
  cengci_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), cengci);
  // @@protoc_insertion_point(field_set_allocated:C_GetSeachSchoolList_3002.cengci)
}

// int64 startScore = 6;
inline void C_GetSeachSchoolList_3002::clear_startscore() {
  startscore_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 C_GetSeachSchoolList_3002::_internal_startscore() const {
  return startscore_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 C_GetSeachSchoolList_3002::startscore() const {
  // @@protoc_insertion_point(field_get:C_GetSeachSchoolList_3002.startScore)
  return _internal_startscore();
}
inline void C_GetSeachSchoolList_3002::_internal_set_startscore(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  startscore_ = value;
}
inline void C_GetSeachSchoolList_3002::set_startscore(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_startscore(value);
  // @@protoc_insertion_point(field_set:C_GetSeachSchoolList_3002.startScore)
}

// int64 endScore = 7;
inline void C_GetSeachSchoolList_3002::clear_endscore() {
  endscore_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 C_GetSeachSchoolList_3002::_internal_endscore() const {
  return endscore_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 C_GetSeachSchoolList_3002::endscore() const {
  // @@protoc_insertion_point(field_get:C_GetSeachSchoolList_3002.endScore)
  return _internal_endscore();
}
inline void C_GetSeachSchoolList_3002::_internal_set_endscore(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  endscore_ = value;
}
inline void C_GetSeachSchoolList_3002::set_endscore(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_endscore(value);
  // @@protoc_insertion_point(field_set:C_GetSeachSchoolList_3002.endScore)
}

// int32 page = 8;
inline void C_GetSeachSchoolList_3002::clear_page() {
  page_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetSeachSchoolList_3002::_internal_page() const {
  return page_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetSeachSchoolList_3002::page() const {
  // @@protoc_insertion_point(field_get:C_GetSeachSchoolList_3002.page)
  return _internal_page();
}
inline void C_GetSeachSchoolList_3002::_internal_set_page(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  page_ = value;
}
inline void C_GetSeachSchoolList_3002::set_page(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:C_GetSeachSchoolList_3002.page)
}

// int32 limit = 9;
inline void C_GetSeachSchoolList_3002::clear_limit() {
  limit_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetSeachSchoolList_3002::_internal_limit() const {
  return limit_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetSeachSchoolList_3002::limit() const {
  // @@protoc_insertion_point(field_get:C_GetSeachSchoolList_3002.limit)
  return _internal_limit();
}
inline void C_GetSeachSchoolList_3002::_internal_set_limit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  limit_ = value;
}
inline void C_GetSeachSchoolList_3002::set_limit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_limit(value);
  // @@protoc_insertion_point(field_set:C_GetSeachSchoolList_3002.limit)
}

// string sortFile = 10;
inline void C_GetSeachSchoolList_3002::clear_sortfile() {
  sortfile_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetSeachSchoolList_3002::sortfile() const {
  // @@protoc_insertion_point(field_get:C_GetSeachSchoolList_3002.sortFile)
  return _internal_sortfile();
}
inline void C_GetSeachSchoolList_3002::set_sortfile(const std::string& value) {
  _internal_set_sortfile(value);
  // @@protoc_insertion_point(field_set:C_GetSeachSchoolList_3002.sortFile)
}
inline std::string* C_GetSeachSchoolList_3002::mutable_sortfile() {
  // @@protoc_insertion_point(field_mutable:C_GetSeachSchoolList_3002.sortFile)
  return _internal_mutable_sortfile();
}
inline const std::string& C_GetSeachSchoolList_3002::_internal_sortfile() const {
  return sortfile_.GetNoArena();
}
inline void C_GetSeachSchoolList_3002::_internal_set_sortfile(const std::string& value) {
  
  sortfile_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetSeachSchoolList_3002::set_sortfile(std::string&& value) {
  
  sortfile_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetSeachSchoolList_3002.sortFile)
}
inline void C_GetSeachSchoolList_3002::set_sortfile(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  sortfile_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetSeachSchoolList_3002.sortFile)
}
inline void C_GetSeachSchoolList_3002::set_sortfile(const char* value, size_t size) {
  
  sortfile_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetSeachSchoolList_3002.sortFile)
}
inline std::string* C_GetSeachSchoolList_3002::_internal_mutable_sortfile() {
  
  return sortfile_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetSeachSchoolList_3002::release_sortfile() {
  // @@protoc_insertion_point(field_release:C_GetSeachSchoolList_3002.sortFile)
  
  return sortfile_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetSeachSchoolList_3002::set_allocated_sortfile(std::string* sortfile) {
  if (sortfile != nullptr) {
    
  } else {
    
  }
  sortfile_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sortfile);
  // @@protoc_insertion_point(field_set_allocated:C_GetSeachSchoolList_3002.sortFile)
}

// -------------------------------------------------------------------

// S_GetSeachSchoolList_3003

// repeated .SeachSchool seachSchool = 1;
inline int S_GetSeachSchoolList_3003::_internal_seachschool_size() const {
  return seachschool_.size();
}
inline int S_GetSeachSchoolList_3003::seachschool_size() const {
  return _internal_seachschool_size();
}
inline void S_GetSeachSchoolList_3003::clear_seachschool() {
  seachschool_.Clear();
}
inline ::SeachSchool* S_GetSeachSchoolList_3003::mutable_seachschool(int index) {
  // @@protoc_insertion_point(field_mutable:S_GetSeachSchoolList_3003.seachSchool)
  return seachschool_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SeachSchool >*
S_GetSeachSchoolList_3003::mutable_seachschool() {
  // @@protoc_insertion_point(field_mutable_list:S_GetSeachSchoolList_3003.seachSchool)
  return &seachschool_;
}
inline const ::SeachSchool& S_GetSeachSchoolList_3003::_internal_seachschool(int index) const {
  return seachschool_.Get(index);
}
inline const ::SeachSchool& S_GetSeachSchoolList_3003::seachschool(int index) const {
  // @@protoc_insertion_point(field_get:S_GetSeachSchoolList_3003.seachSchool)
  return _internal_seachschool(index);
}
inline ::SeachSchool* S_GetSeachSchoolList_3003::_internal_add_seachschool() {
  return seachschool_.Add();
}
inline ::SeachSchool* S_GetSeachSchoolList_3003::add_seachschool() {
  // @@protoc_insertion_point(field_add:S_GetSeachSchoolList_3003.seachSchool)
  return _internal_add_seachschool();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SeachSchool >&
S_GetSeachSchoolList_3003::seachschool() const {
  // @@protoc_insertion_point(field_list:S_GetSeachSchoolList_3003.seachSchool)
  return seachschool_;
}

// .PagingInfo pagingInfo = 2;
inline bool S_GetSeachSchoolList_3003::_internal_has_paginginfo() const {
  return this != internal_default_instance() && paginginfo_ != nullptr;
}
inline bool S_GetSeachSchoolList_3003::has_paginginfo() const {
  return _internal_has_paginginfo();
}
inline void S_GetSeachSchoolList_3003::clear_paginginfo() {
  if (GetArenaNoVirtual() == nullptr && paginginfo_ != nullptr) {
    delete paginginfo_;
  }
  paginginfo_ = nullptr;
}
inline const ::PagingInfo& S_GetSeachSchoolList_3003::_internal_paginginfo() const {
  const ::PagingInfo* p = paginginfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::PagingInfo*>(
      &::_PagingInfo_default_instance_);
}
inline const ::PagingInfo& S_GetSeachSchoolList_3003::paginginfo() const {
  // @@protoc_insertion_point(field_get:S_GetSeachSchoolList_3003.pagingInfo)
  return _internal_paginginfo();
}
inline ::PagingInfo* S_GetSeachSchoolList_3003::release_paginginfo() {
  // @@protoc_insertion_point(field_release:S_GetSeachSchoolList_3003.pagingInfo)
  
  ::PagingInfo* temp = paginginfo_;
  paginginfo_ = nullptr;
  return temp;
}
inline ::PagingInfo* S_GetSeachSchoolList_3003::_internal_mutable_paginginfo() {
  
  if (paginginfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::PagingInfo>(GetArenaNoVirtual());
    paginginfo_ = p;
  }
  return paginginfo_;
}
inline ::PagingInfo* S_GetSeachSchoolList_3003::mutable_paginginfo() {
  // @@protoc_insertion_point(field_mutable:S_GetSeachSchoolList_3003.pagingInfo)
  return _internal_mutable_paginginfo();
}
inline void S_GetSeachSchoolList_3003::set_allocated_paginginfo(::PagingInfo* paginginfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete paginginfo_;
  }
  if (paginginfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      paginginfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, paginginfo, submessage_arena);
    }
    
  } else {
    
  }
  paginginfo_ = paginginfo;
  // @@protoc_insertion_point(field_set_allocated:S_GetSeachSchoolList_3003.pagingInfo)
}

// -------------------------------------------------------------------

// C_GetSeachScoreList_3004

// string schoolName = 1;
inline void C_GetSeachScoreList_3004::clear_schoolname() {
  schoolname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetSeachScoreList_3004::schoolname() const {
  // @@protoc_insertion_point(field_get:C_GetSeachScoreList_3004.schoolName)
  return _internal_schoolname();
}
inline void C_GetSeachScoreList_3004::set_schoolname(const std::string& value) {
  _internal_set_schoolname(value);
  // @@protoc_insertion_point(field_set:C_GetSeachScoreList_3004.schoolName)
}
inline std::string* C_GetSeachScoreList_3004::mutable_schoolname() {
  // @@protoc_insertion_point(field_mutable:C_GetSeachScoreList_3004.schoolName)
  return _internal_mutable_schoolname();
}
inline const std::string& C_GetSeachScoreList_3004::_internal_schoolname() const {
  return schoolname_.GetNoArena();
}
inline void C_GetSeachScoreList_3004::_internal_set_schoolname(const std::string& value) {
  
  schoolname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetSeachScoreList_3004::set_schoolname(std::string&& value) {
  
  schoolname_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetSeachScoreList_3004.schoolName)
}
inline void C_GetSeachScoreList_3004::set_schoolname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  schoolname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetSeachScoreList_3004.schoolName)
}
inline void C_GetSeachScoreList_3004::set_schoolname(const char* value, size_t size) {
  
  schoolname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetSeachScoreList_3004.schoolName)
}
inline std::string* C_GetSeachScoreList_3004::_internal_mutable_schoolname() {
  
  return schoolname_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetSeachScoreList_3004::release_schoolname() {
  // @@protoc_insertion_point(field_release:C_GetSeachScoreList_3004.schoolName)
  
  return schoolname_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetSeachScoreList_3004::set_allocated_schoolname(std::string* schoolname) {
  if (schoolname != nullptr) {
    
  } else {
    
  }
  schoolname_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), schoolname);
  // @@protoc_insertion_point(field_set_allocated:C_GetSeachScoreList_3004.schoolName)
}

// string province = 2;
inline void C_GetSeachScoreList_3004::clear_province() {
  province_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetSeachScoreList_3004::province() const {
  // @@protoc_insertion_point(field_get:C_GetSeachScoreList_3004.province)
  return _internal_province();
}
inline void C_GetSeachScoreList_3004::set_province(const std::string& value) {
  _internal_set_province(value);
  // @@protoc_insertion_point(field_set:C_GetSeachScoreList_3004.province)
}
inline std::string* C_GetSeachScoreList_3004::mutable_province() {
  // @@protoc_insertion_point(field_mutable:C_GetSeachScoreList_3004.province)
  return _internal_mutable_province();
}
inline const std::string& C_GetSeachScoreList_3004::_internal_province() const {
  return province_.GetNoArena();
}
inline void C_GetSeachScoreList_3004::_internal_set_province(const std::string& value) {
  
  province_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetSeachScoreList_3004::set_province(std::string&& value) {
  
  province_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetSeachScoreList_3004.province)
}
inline void C_GetSeachScoreList_3004::set_province(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  province_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetSeachScoreList_3004.province)
}
inline void C_GetSeachScoreList_3004::set_province(const char* value, size_t size) {
  
  province_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetSeachScoreList_3004.province)
}
inline std::string* C_GetSeachScoreList_3004::_internal_mutable_province() {
  
  return province_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetSeachScoreList_3004::release_province() {
  // @@protoc_insertion_point(field_release:C_GetSeachScoreList_3004.province)
  
  return province_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetSeachScoreList_3004::set_allocated_province(std::string* province) {
  if (province != nullptr) {
    
  } else {
    
  }
  province_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), province);
  // @@protoc_insertion_point(field_set_allocated:C_GetSeachScoreList_3004.province)
}

// string type = 3;
inline void C_GetSeachScoreList_3004::clear_type() {
  type_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetSeachScoreList_3004::type() const {
  // @@protoc_insertion_point(field_get:C_GetSeachScoreList_3004.type)
  return _internal_type();
}
inline void C_GetSeachScoreList_3004::set_type(const std::string& value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:C_GetSeachScoreList_3004.type)
}
inline std::string* C_GetSeachScoreList_3004::mutable_type() {
  // @@protoc_insertion_point(field_mutable:C_GetSeachScoreList_3004.type)
  return _internal_mutable_type();
}
inline const std::string& C_GetSeachScoreList_3004::_internal_type() const {
  return type_.GetNoArena();
}
inline void C_GetSeachScoreList_3004::_internal_set_type(const std::string& value) {
  
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetSeachScoreList_3004::set_type(std::string&& value) {
  
  type_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetSeachScoreList_3004.type)
}
inline void C_GetSeachScoreList_3004::set_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetSeachScoreList_3004.type)
}
inline void C_GetSeachScoreList_3004::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetSeachScoreList_3004.type)
}
inline std::string* C_GetSeachScoreList_3004::_internal_mutable_type() {
  
  return type_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetSeachScoreList_3004::release_type() {
  // @@protoc_insertion_point(field_release:C_GetSeachScoreList_3004.type)
  
  return type_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetSeachScoreList_3004::set_allocated_type(std::string* type) {
  if (type != nullptr) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:C_GetSeachScoreList_3004.type)
}

// string pici = 4;
inline void C_GetSeachScoreList_3004::clear_pici() {
  pici_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetSeachScoreList_3004::pici() const {
  // @@protoc_insertion_point(field_get:C_GetSeachScoreList_3004.pici)
  return _internal_pici();
}
inline void C_GetSeachScoreList_3004::set_pici(const std::string& value) {
  _internal_set_pici(value);
  // @@protoc_insertion_point(field_set:C_GetSeachScoreList_3004.pici)
}
inline std::string* C_GetSeachScoreList_3004::mutable_pici() {
  // @@protoc_insertion_point(field_mutable:C_GetSeachScoreList_3004.pici)
  return _internal_mutable_pici();
}
inline const std::string& C_GetSeachScoreList_3004::_internal_pici() const {
  return pici_.GetNoArena();
}
inline void C_GetSeachScoreList_3004::_internal_set_pici(const std::string& value) {
  
  pici_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetSeachScoreList_3004::set_pici(std::string&& value) {
  
  pici_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetSeachScoreList_3004.pici)
}
inline void C_GetSeachScoreList_3004::set_pici(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pici_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetSeachScoreList_3004.pici)
}
inline void C_GetSeachScoreList_3004::set_pici(const char* value, size_t size) {
  
  pici_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetSeachScoreList_3004.pici)
}
inline std::string* C_GetSeachScoreList_3004::_internal_mutable_pici() {
  
  return pici_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetSeachScoreList_3004::release_pici() {
  // @@protoc_insertion_point(field_release:C_GetSeachScoreList_3004.pici)
  
  return pici_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetSeachScoreList_3004::set_allocated_pici(std::string* pici) {
  if (pici != nullptr) {
    
  } else {
    
  }
  pici_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pici);
  // @@protoc_insertion_point(field_set_allocated:C_GetSeachScoreList_3004.pici)
}

// string cengci = 5;
inline void C_GetSeachScoreList_3004::clear_cengci() {
  cengci_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetSeachScoreList_3004::cengci() const {
  // @@protoc_insertion_point(field_get:C_GetSeachScoreList_3004.cengci)
  return _internal_cengci();
}
inline void C_GetSeachScoreList_3004::set_cengci(const std::string& value) {
  _internal_set_cengci(value);
  // @@protoc_insertion_point(field_set:C_GetSeachScoreList_3004.cengci)
}
inline std::string* C_GetSeachScoreList_3004::mutable_cengci() {
  // @@protoc_insertion_point(field_mutable:C_GetSeachScoreList_3004.cengci)
  return _internal_mutable_cengci();
}
inline const std::string& C_GetSeachScoreList_3004::_internal_cengci() const {
  return cengci_.GetNoArena();
}
inline void C_GetSeachScoreList_3004::_internal_set_cengci(const std::string& value) {
  
  cengci_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetSeachScoreList_3004::set_cengci(std::string&& value) {
  
  cengci_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetSeachScoreList_3004.cengci)
}
inline void C_GetSeachScoreList_3004::set_cengci(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  cengci_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetSeachScoreList_3004.cengci)
}
inline void C_GetSeachScoreList_3004::set_cengci(const char* value, size_t size) {
  
  cengci_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetSeachScoreList_3004.cengci)
}
inline std::string* C_GetSeachScoreList_3004::_internal_mutable_cengci() {
  
  return cengci_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetSeachScoreList_3004::release_cengci() {
  // @@protoc_insertion_point(field_release:C_GetSeachScoreList_3004.cengci)
  
  return cengci_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetSeachScoreList_3004::set_allocated_cengci(std::string* cengci) {
  if (cengci != nullptr) {
    
  } else {
    
  }
  cengci_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), cengci);
  // @@protoc_insertion_point(field_set_allocated:C_GetSeachScoreList_3004.cengci)
}

// int64 startScore = 6;
inline void C_GetSeachScoreList_3004::clear_startscore() {
  startscore_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 C_GetSeachScoreList_3004::_internal_startscore() const {
  return startscore_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 C_GetSeachScoreList_3004::startscore() const {
  // @@protoc_insertion_point(field_get:C_GetSeachScoreList_3004.startScore)
  return _internal_startscore();
}
inline void C_GetSeachScoreList_3004::_internal_set_startscore(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  startscore_ = value;
}
inline void C_GetSeachScoreList_3004::set_startscore(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_startscore(value);
  // @@protoc_insertion_point(field_set:C_GetSeachScoreList_3004.startScore)
}

// int64 endScore = 7;
inline void C_GetSeachScoreList_3004::clear_endscore() {
  endscore_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 C_GetSeachScoreList_3004::_internal_endscore() const {
  return endscore_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 C_GetSeachScoreList_3004::endscore() const {
  // @@protoc_insertion_point(field_get:C_GetSeachScoreList_3004.endScore)
  return _internal_endscore();
}
inline void C_GetSeachScoreList_3004::_internal_set_endscore(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  endscore_ = value;
}
inline void C_GetSeachScoreList_3004::set_endscore(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_endscore(value);
  // @@protoc_insertion_point(field_set:C_GetSeachScoreList_3004.endScore)
}

// int32 page = 8;
inline void C_GetSeachScoreList_3004::clear_page() {
  page_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetSeachScoreList_3004::_internal_page() const {
  return page_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetSeachScoreList_3004::page() const {
  // @@protoc_insertion_point(field_get:C_GetSeachScoreList_3004.page)
  return _internal_page();
}
inline void C_GetSeachScoreList_3004::_internal_set_page(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  page_ = value;
}
inline void C_GetSeachScoreList_3004::set_page(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:C_GetSeachScoreList_3004.page)
}

// int32 limit = 9;
inline void C_GetSeachScoreList_3004::clear_limit() {
  limit_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetSeachScoreList_3004::_internal_limit() const {
  return limit_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetSeachScoreList_3004::limit() const {
  // @@protoc_insertion_point(field_get:C_GetSeachScoreList_3004.limit)
  return _internal_limit();
}
inline void C_GetSeachScoreList_3004::_internal_set_limit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  limit_ = value;
}
inline void C_GetSeachScoreList_3004::set_limit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_limit(value);
  // @@protoc_insertion_point(field_set:C_GetSeachScoreList_3004.limit)
}

// string sortFile = 10;
inline void C_GetSeachScoreList_3004::clear_sortfile() {
  sortfile_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetSeachScoreList_3004::sortfile() const {
  // @@protoc_insertion_point(field_get:C_GetSeachScoreList_3004.sortFile)
  return _internal_sortfile();
}
inline void C_GetSeachScoreList_3004::set_sortfile(const std::string& value) {
  _internal_set_sortfile(value);
  // @@protoc_insertion_point(field_set:C_GetSeachScoreList_3004.sortFile)
}
inline std::string* C_GetSeachScoreList_3004::mutable_sortfile() {
  // @@protoc_insertion_point(field_mutable:C_GetSeachScoreList_3004.sortFile)
  return _internal_mutable_sortfile();
}
inline const std::string& C_GetSeachScoreList_3004::_internal_sortfile() const {
  return sortfile_.GetNoArena();
}
inline void C_GetSeachScoreList_3004::_internal_set_sortfile(const std::string& value) {
  
  sortfile_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetSeachScoreList_3004::set_sortfile(std::string&& value) {
  
  sortfile_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetSeachScoreList_3004.sortFile)
}
inline void C_GetSeachScoreList_3004::set_sortfile(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  sortfile_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetSeachScoreList_3004.sortFile)
}
inline void C_GetSeachScoreList_3004::set_sortfile(const char* value, size_t size) {
  
  sortfile_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetSeachScoreList_3004.sortFile)
}
inline std::string* C_GetSeachScoreList_3004::_internal_mutable_sortfile() {
  
  return sortfile_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetSeachScoreList_3004::release_sortfile() {
  // @@protoc_insertion_point(field_release:C_GetSeachScoreList_3004.sortFile)
  
  return sortfile_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetSeachScoreList_3004::set_allocated_sortfile(std::string* sortfile) {
  if (sortfile != nullptr) {
    
  } else {
    
  }
  sortfile_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sortfile);
  // @@protoc_insertion_point(field_set_allocated:C_GetSeachScoreList_3004.sortFile)
}

// -------------------------------------------------------------------

// S_GetSeachScoreList_3005

// repeated .SeachScore seachScore = 1;
inline int S_GetSeachScoreList_3005::_internal_seachscore_size() const {
  return seachscore_.size();
}
inline int S_GetSeachScoreList_3005::seachscore_size() const {
  return _internal_seachscore_size();
}
inline void S_GetSeachScoreList_3005::clear_seachscore() {
  seachscore_.Clear();
}
inline ::SeachScore* S_GetSeachScoreList_3005::mutable_seachscore(int index) {
  // @@protoc_insertion_point(field_mutable:S_GetSeachScoreList_3005.seachScore)
  return seachscore_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SeachScore >*
S_GetSeachScoreList_3005::mutable_seachscore() {
  // @@protoc_insertion_point(field_mutable_list:S_GetSeachScoreList_3005.seachScore)
  return &seachscore_;
}
inline const ::SeachScore& S_GetSeachScoreList_3005::_internal_seachscore(int index) const {
  return seachscore_.Get(index);
}
inline const ::SeachScore& S_GetSeachScoreList_3005::seachscore(int index) const {
  // @@protoc_insertion_point(field_get:S_GetSeachScoreList_3005.seachScore)
  return _internal_seachscore(index);
}
inline ::SeachScore* S_GetSeachScoreList_3005::_internal_add_seachscore() {
  return seachscore_.Add();
}
inline ::SeachScore* S_GetSeachScoreList_3005::add_seachscore() {
  // @@protoc_insertion_point(field_add:S_GetSeachScoreList_3005.seachScore)
  return _internal_add_seachscore();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SeachScore >&
S_GetSeachScoreList_3005::seachscore() const {
  // @@protoc_insertion_point(field_list:S_GetSeachScoreList_3005.seachScore)
  return seachscore_;
}

// .PagingInfo pagingInfo = 2;
inline bool S_GetSeachScoreList_3005::_internal_has_paginginfo() const {
  return this != internal_default_instance() && paginginfo_ != nullptr;
}
inline bool S_GetSeachScoreList_3005::has_paginginfo() const {
  return _internal_has_paginginfo();
}
inline void S_GetSeachScoreList_3005::clear_paginginfo() {
  if (GetArenaNoVirtual() == nullptr && paginginfo_ != nullptr) {
    delete paginginfo_;
  }
  paginginfo_ = nullptr;
}
inline const ::PagingInfo& S_GetSeachScoreList_3005::_internal_paginginfo() const {
  const ::PagingInfo* p = paginginfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::PagingInfo*>(
      &::_PagingInfo_default_instance_);
}
inline const ::PagingInfo& S_GetSeachScoreList_3005::paginginfo() const {
  // @@protoc_insertion_point(field_get:S_GetSeachScoreList_3005.pagingInfo)
  return _internal_paginginfo();
}
inline ::PagingInfo* S_GetSeachScoreList_3005::release_paginginfo() {
  // @@protoc_insertion_point(field_release:S_GetSeachScoreList_3005.pagingInfo)
  
  ::PagingInfo* temp = paginginfo_;
  paginginfo_ = nullptr;
  return temp;
}
inline ::PagingInfo* S_GetSeachScoreList_3005::_internal_mutable_paginginfo() {
  
  if (paginginfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::PagingInfo>(GetArenaNoVirtual());
    paginginfo_ = p;
  }
  return paginginfo_;
}
inline ::PagingInfo* S_GetSeachScoreList_3005::mutable_paginginfo() {
  // @@protoc_insertion_point(field_mutable:S_GetSeachScoreList_3005.pagingInfo)
  return _internal_mutable_paginginfo();
}
inline void S_GetSeachScoreList_3005::set_allocated_paginginfo(::PagingInfo* paginginfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete paginginfo_;
  }
  if (paginginfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      paginginfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, paginginfo, submessage_arena);
    }
    
  } else {
    
  }
  paginginfo_ = paginginfo;
  // @@protoc_insertion_point(field_set_allocated:S_GetSeachScoreList_3005.pagingInfo)
}

// -------------------------------------------------------------------

// C_GetSeachSKYXList_3006

// string province = 1;
inline void C_GetSeachSKYXList_3006::clear_province() {
  province_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetSeachSKYXList_3006::province() const {
  // @@protoc_insertion_point(field_get:C_GetSeachSKYXList_3006.province)
  return _internal_province();
}
inline void C_GetSeachSKYXList_3006::set_province(const std::string& value) {
  _internal_set_province(value);
  // @@protoc_insertion_point(field_set:C_GetSeachSKYXList_3006.province)
}
inline std::string* C_GetSeachSKYXList_3006::mutable_province() {
  // @@protoc_insertion_point(field_mutable:C_GetSeachSKYXList_3006.province)
  return _internal_mutable_province();
}
inline const std::string& C_GetSeachSKYXList_3006::_internal_province() const {
  return province_.GetNoArena();
}
inline void C_GetSeachSKYXList_3006::_internal_set_province(const std::string& value) {
  
  province_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetSeachSKYXList_3006::set_province(std::string&& value) {
  
  province_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetSeachSKYXList_3006.province)
}
inline void C_GetSeachSKYXList_3006::set_province(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  province_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetSeachSKYXList_3006.province)
}
inline void C_GetSeachSKYXList_3006::set_province(const char* value, size_t size) {
  
  province_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetSeachSKYXList_3006.province)
}
inline std::string* C_GetSeachSKYXList_3006::_internal_mutable_province() {
  
  return province_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetSeachSKYXList_3006::release_province() {
  // @@protoc_insertion_point(field_release:C_GetSeachSKYXList_3006.province)
  
  return province_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetSeachSKYXList_3006::set_allocated_province(std::string* province) {
  if (province != nullptr) {
    
  } else {
    
  }
  province_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), province);
  // @@protoc_insertion_point(field_set_allocated:C_GetSeachSKYXList_3006.province)
}

// string kelei = 2;
inline void C_GetSeachSKYXList_3006::clear_kelei() {
  kelei_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetSeachSKYXList_3006::kelei() const {
  // @@protoc_insertion_point(field_get:C_GetSeachSKYXList_3006.kelei)
  return _internal_kelei();
}
inline void C_GetSeachSKYXList_3006::set_kelei(const std::string& value) {
  _internal_set_kelei(value);
  // @@protoc_insertion_point(field_set:C_GetSeachSKYXList_3006.kelei)
}
inline std::string* C_GetSeachSKYXList_3006::mutable_kelei() {
  // @@protoc_insertion_point(field_mutable:C_GetSeachSKYXList_3006.kelei)
  return _internal_mutable_kelei();
}
inline const std::string& C_GetSeachSKYXList_3006::_internal_kelei() const {
  return kelei_.GetNoArena();
}
inline void C_GetSeachSKYXList_3006::_internal_set_kelei(const std::string& value) {
  
  kelei_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetSeachSKYXList_3006::set_kelei(std::string&& value) {
  
  kelei_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetSeachSKYXList_3006.kelei)
}
inline void C_GetSeachSKYXList_3006::set_kelei(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  kelei_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetSeachSKYXList_3006.kelei)
}
inline void C_GetSeachSKYXList_3006::set_kelei(const char* value, size_t size) {
  
  kelei_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetSeachSKYXList_3006.kelei)
}
inline std::string* C_GetSeachSKYXList_3006::_internal_mutable_kelei() {
  
  return kelei_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetSeachSKYXList_3006::release_kelei() {
  // @@protoc_insertion_point(field_release:C_GetSeachSKYXList_3006.kelei)
  
  return kelei_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetSeachSKYXList_3006::set_allocated_kelei(std::string* kelei) {
  if (kelei != nullptr) {
    
  } else {
    
  }
  kelei_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), kelei);
  // @@protoc_insertion_point(field_set_allocated:C_GetSeachSKYXList_3006.kelei)
}

// string years = 3;
inline void C_GetSeachSKYXList_3006::clear_years() {
  years_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetSeachSKYXList_3006::years() const {
  // @@protoc_insertion_point(field_get:C_GetSeachSKYXList_3006.years)
  return _internal_years();
}
inline void C_GetSeachSKYXList_3006::set_years(const std::string& value) {
  _internal_set_years(value);
  // @@protoc_insertion_point(field_set:C_GetSeachSKYXList_3006.years)
}
inline std::string* C_GetSeachSKYXList_3006::mutable_years() {
  // @@protoc_insertion_point(field_mutable:C_GetSeachSKYXList_3006.years)
  return _internal_mutable_years();
}
inline const std::string& C_GetSeachSKYXList_3006::_internal_years() const {
  return years_.GetNoArena();
}
inline void C_GetSeachSKYXList_3006::_internal_set_years(const std::string& value) {
  
  years_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetSeachSKYXList_3006::set_years(std::string&& value) {
  
  years_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetSeachSKYXList_3006.years)
}
inline void C_GetSeachSKYXList_3006::set_years(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  years_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetSeachSKYXList_3006.years)
}
inline void C_GetSeachSKYXList_3006::set_years(const char* value, size_t size) {
  
  years_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetSeachSKYXList_3006.years)
}
inline std::string* C_GetSeachSKYXList_3006::_internal_mutable_years() {
  
  return years_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetSeachSKYXList_3006::release_years() {
  // @@protoc_insertion_point(field_release:C_GetSeachSKYXList_3006.years)
  
  return years_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetSeachSKYXList_3006::set_allocated_years(std::string* years) {
  if (years != nullptr) {
    
  } else {
    
  }
  years_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), years);
  // @@protoc_insertion_point(field_set_allocated:C_GetSeachSKYXList_3006.years)
}

// int32 page = 4;
inline void C_GetSeachSKYXList_3006::clear_page() {
  page_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetSeachSKYXList_3006::_internal_page() const {
  return page_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetSeachSKYXList_3006::page() const {
  // @@protoc_insertion_point(field_get:C_GetSeachSKYXList_3006.page)
  return _internal_page();
}
inline void C_GetSeachSKYXList_3006::_internal_set_page(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  page_ = value;
}
inline void C_GetSeachSKYXList_3006::set_page(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:C_GetSeachSKYXList_3006.page)
}

// int32 limit = 5;
inline void C_GetSeachSKYXList_3006::clear_limit() {
  limit_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetSeachSKYXList_3006::_internal_limit() const {
  return limit_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetSeachSKYXList_3006::limit() const {
  // @@protoc_insertion_point(field_get:C_GetSeachSKYXList_3006.limit)
  return _internal_limit();
}
inline void C_GetSeachSKYXList_3006::_internal_set_limit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  limit_ = value;
}
inline void C_GetSeachSKYXList_3006::set_limit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_limit(value);
  // @@protoc_insertion_point(field_set:C_GetSeachSKYXList_3006.limit)
}

// -------------------------------------------------------------------

// S_GetSeachSKYXList_3007

// repeated .SeachSKYX seachSKYX = 1;
inline int S_GetSeachSKYXList_3007::_internal_seachskyx_size() const {
  return seachskyx_.size();
}
inline int S_GetSeachSKYXList_3007::seachskyx_size() const {
  return _internal_seachskyx_size();
}
inline void S_GetSeachSKYXList_3007::clear_seachskyx() {
  seachskyx_.Clear();
}
inline ::SeachSKYX* S_GetSeachSKYXList_3007::mutable_seachskyx(int index) {
  // @@protoc_insertion_point(field_mutable:S_GetSeachSKYXList_3007.seachSKYX)
  return seachskyx_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SeachSKYX >*
S_GetSeachSKYXList_3007::mutable_seachskyx() {
  // @@protoc_insertion_point(field_mutable_list:S_GetSeachSKYXList_3007.seachSKYX)
  return &seachskyx_;
}
inline const ::SeachSKYX& S_GetSeachSKYXList_3007::_internal_seachskyx(int index) const {
  return seachskyx_.Get(index);
}
inline const ::SeachSKYX& S_GetSeachSKYXList_3007::seachskyx(int index) const {
  // @@protoc_insertion_point(field_get:S_GetSeachSKYXList_3007.seachSKYX)
  return _internal_seachskyx(index);
}
inline ::SeachSKYX* S_GetSeachSKYXList_3007::_internal_add_seachskyx() {
  return seachskyx_.Add();
}
inline ::SeachSKYX* S_GetSeachSKYXList_3007::add_seachskyx() {
  // @@protoc_insertion_point(field_add:S_GetSeachSKYXList_3007.seachSKYX)
  return _internal_add_seachskyx();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SeachSKYX >&
S_GetSeachSKYXList_3007::seachskyx() const {
  // @@protoc_insertion_point(field_list:S_GetSeachSKYXList_3007.seachSKYX)
  return seachskyx_;
}

// .PagingInfo pagingInfo = 2;
inline bool S_GetSeachSKYXList_3007::_internal_has_paginginfo() const {
  return this != internal_default_instance() && paginginfo_ != nullptr;
}
inline bool S_GetSeachSKYXList_3007::has_paginginfo() const {
  return _internal_has_paginginfo();
}
inline void S_GetSeachSKYXList_3007::clear_paginginfo() {
  if (GetArenaNoVirtual() == nullptr && paginginfo_ != nullptr) {
    delete paginginfo_;
  }
  paginginfo_ = nullptr;
}
inline const ::PagingInfo& S_GetSeachSKYXList_3007::_internal_paginginfo() const {
  const ::PagingInfo* p = paginginfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::PagingInfo*>(
      &::_PagingInfo_default_instance_);
}
inline const ::PagingInfo& S_GetSeachSKYXList_3007::paginginfo() const {
  // @@protoc_insertion_point(field_get:S_GetSeachSKYXList_3007.pagingInfo)
  return _internal_paginginfo();
}
inline ::PagingInfo* S_GetSeachSKYXList_3007::release_paginginfo() {
  // @@protoc_insertion_point(field_release:S_GetSeachSKYXList_3007.pagingInfo)
  
  ::PagingInfo* temp = paginginfo_;
  paginginfo_ = nullptr;
  return temp;
}
inline ::PagingInfo* S_GetSeachSKYXList_3007::_internal_mutable_paginginfo() {
  
  if (paginginfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::PagingInfo>(GetArenaNoVirtual());
    paginginfo_ = p;
  }
  return paginginfo_;
}
inline ::PagingInfo* S_GetSeachSKYXList_3007::mutable_paginginfo() {
  // @@protoc_insertion_point(field_mutable:S_GetSeachSKYXList_3007.pagingInfo)
  return _internal_mutable_paginginfo();
}
inline void S_GetSeachSKYXList_3007::set_allocated_paginginfo(::PagingInfo* paginginfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete paginginfo_;
  }
  if (paginginfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      paginginfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, paginginfo, submessage_arena);
    }
    
  } else {
    
  }
  paginginfo_ = paginginfo;
  // @@protoc_insertion_point(field_set_allocated:S_GetSeachSKYXList_3007.pagingInfo)
}

// -------------------------------------------------------------------

// C_GetSeachYYPMList_3008

// string name = 1;
inline void C_GetSeachYYPMList_3008::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetSeachYYPMList_3008::name() const {
  // @@protoc_insertion_point(field_get:C_GetSeachYYPMList_3008.name)
  return _internal_name();
}
inline void C_GetSeachYYPMList_3008::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:C_GetSeachYYPMList_3008.name)
}
inline std::string* C_GetSeachYYPMList_3008::mutable_name() {
  // @@protoc_insertion_point(field_mutable:C_GetSeachYYPMList_3008.name)
  return _internal_mutable_name();
}
inline const std::string& C_GetSeachYYPMList_3008::_internal_name() const {
  return name_.GetNoArena();
}
inline void C_GetSeachYYPMList_3008::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetSeachYYPMList_3008::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetSeachYYPMList_3008.name)
}
inline void C_GetSeachYYPMList_3008::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetSeachYYPMList_3008.name)
}
inline void C_GetSeachYYPMList_3008::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetSeachYYPMList_3008.name)
}
inline std::string* C_GetSeachYYPMList_3008::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetSeachYYPMList_3008::release_name() {
  // @@protoc_insertion_point(field_release:C_GetSeachYYPMList_3008.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetSeachYYPMList_3008::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:C_GetSeachYYPMList_3008.name)
}

// string xueli = 2;
inline void C_GetSeachYYPMList_3008::clear_xueli() {
  xueli_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetSeachYYPMList_3008::xueli() const {
  // @@protoc_insertion_point(field_get:C_GetSeachYYPMList_3008.xueli)
  return _internal_xueli();
}
inline void C_GetSeachYYPMList_3008::set_xueli(const std::string& value) {
  _internal_set_xueli(value);
  // @@protoc_insertion_point(field_set:C_GetSeachYYPMList_3008.xueli)
}
inline std::string* C_GetSeachYYPMList_3008::mutable_xueli() {
  // @@protoc_insertion_point(field_mutable:C_GetSeachYYPMList_3008.xueli)
  return _internal_mutable_xueli();
}
inline const std::string& C_GetSeachYYPMList_3008::_internal_xueli() const {
  return xueli_.GetNoArena();
}
inline void C_GetSeachYYPMList_3008::_internal_set_xueli(const std::string& value) {
  
  xueli_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetSeachYYPMList_3008::set_xueli(std::string&& value) {
  
  xueli_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetSeachYYPMList_3008.xueli)
}
inline void C_GetSeachYYPMList_3008::set_xueli(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  xueli_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetSeachYYPMList_3008.xueli)
}
inline void C_GetSeachYYPMList_3008::set_xueli(const char* value, size_t size) {
  
  xueli_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetSeachYYPMList_3008.xueli)
}
inline std::string* C_GetSeachYYPMList_3008::_internal_mutable_xueli() {
  
  return xueli_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetSeachYYPMList_3008::release_xueli() {
  // @@protoc_insertion_point(field_release:C_GetSeachYYPMList_3008.xueli)
  
  return xueli_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetSeachYYPMList_3008::set_allocated_xueli(std::string* xueli) {
  if (xueli != nullptr) {
    
  } else {
    
  }
  xueli_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), xueli);
  // @@protoc_insertion_point(field_set_allocated:C_GetSeachYYPMList_3008.xueli)
}

// string type = 3;
inline void C_GetSeachYYPMList_3008::clear_type() {
  type_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetSeachYYPMList_3008::type() const {
  // @@protoc_insertion_point(field_get:C_GetSeachYYPMList_3008.type)
  return _internal_type();
}
inline void C_GetSeachYYPMList_3008::set_type(const std::string& value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:C_GetSeachYYPMList_3008.type)
}
inline std::string* C_GetSeachYYPMList_3008::mutable_type() {
  // @@protoc_insertion_point(field_mutable:C_GetSeachYYPMList_3008.type)
  return _internal_mutable_type();
}
inline const std::string& C_GetSeachYYPMList_3008::_internal_type() const {
  return type_.GetNoArena();
}
inline void C_GetSeachYYPMList_3008::_internal_set_type(const std::string& value) {
  
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetSeachYYPMList_3008::set_type(std::string&& value) {
  
  type_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetSeachYYPMList_3008.type)
}
inline void C_GetSeachYYPMList_3008::set_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetSeachYYPMList_3008.type)
}
inline void C_GetSeachYYPMList_3008::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetSeachYYPMList_3008.type)
}
inline std::string* C_GetSeachYYPMList_3008::_internal_mutable_type() {
  
  return type_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetSeachYYPMList_3008::release_type() {
  // @@protoc_insertion_point(field_release:C_GetSeachYYPMList_3008.type)
  
  return type_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetSeachYYPMList_3008::set_allocated_type(std::string* type) {
  if (type != nullptr) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:C_GetSeachYYPMList_3008.type)
}

// string cengci = 4;
inline void C_GetSeachYYPMList_3008::clear_cengci() {
  cengci_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetSeachYYPMList_3008::cengci() const {
  // @@protoc_insertion_point(field_get:C_GetSeachYYPMList_3008.cengci)
  return _internal_cengci();
}
inline void C_GetSeachYYPMList_3008::set_cengci(const std::string& value) {
  _internal_set_cengci(value);
  // @@protoc_insertion_point(field_set:C_GetSeachYYPMList_3008.cengci)
}
inline std::string* C_GetSeachYYPMList_3008::mutable_cengci() {
  // @@protoc_insertion_point(field_mutable:C_GetSeachYYPMList_3008.cengci)
  return _internal_mutable_cengci();
}
inline const std::string& C_GetSeachYYPMList_3008::_internal_cengci() const {
  return cengci_.GetNoArena();
}
inline void C_GetSeachYYPMList_3008::_internal_set_cengci(const std::string& value) {
  
  cengci_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetSeachYYPMList_3008::set_cengci(std::string&& value) {
  
  cengci_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetSeachYYPMList_3008.cengci)
}
inline void C_GetSeachYYPMList_3008::set_cengci(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  cengci_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetSeachYYPMList_3008.cengci)
}
inline void C_GetSeachYYPMList_3008::set_cengci(const char* value, size_t size) {
  
  cengci_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetSeachYYPMList_3008.cengci)
}
inline std::string* C_GetSeachYYPMList_3008::_internal_mutable_cengci() {
  
  return cengci_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetSeachYYPMList_3008::release_cengci() {
  // @@protoc_insertion_point(field_release:C_GetSeachYYPMList_3008.cengci)
  
  return cengci_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetSeachYYPMList_3008::set_allocated_cengci(std::string* cengci) {
  if (cengci != nullptr) {
    
  } else {
    
  }
  cengci_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), cengci);
  // @@protoc_insertion_point(field_set_allocated:C_GetSeachYYPMList_3008.cengci)
}

// int64 startScore = 5;
inline void C_GetSeachYYPMList_3008::clear_startscore() {
  startscore_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 C_GetSeachYYPMList_3008::_internal_startscore() const {
  return startscore_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 C_GetSeachYYPMList_3008::startscore() const {
  // @@protoc_insertion_point(field_get:C_GetSeachYYPMList_3008.startScore)
  return _internal_startscore();
}
inline void C_GetSeachYYPMList_3008::_internal_set_startscore(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  startscore_ = value;
}
inline void C_GetSeachYYPMList_3008::set_startscore(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_startscore(value);
  // @@protoc_insertion_point(field_set:C_GetSeachYYPMList_3008.startScore)
}

// int64 endScore = 6;
inline void C_GetSeachYYPMList_3008::clear_endscore() {
  endscore_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 C_GetSeachYYPMList_3008::_internal_endscore() const {
  return endscore_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 C_GetSeachYYPMList_3008::endscore() const {
  // @@protoc_insertion_point(field_get:C_GetSeachYYPMList_3008.endScore)
  return _internal_endscore();
}
inline void C_GetSeachYYPMList_3008::_internal_set_endscore(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  endscore_ = value;
}
inline void C_GetSeachYYPMList_3008::set_endscore(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_endscore(value);
  // @@protoc_insertion_point(field_set:C_GetSeachYYPMList_3008.endScore)
}

// int32 page = 7;
inline void C_GetSeachYYPMList_3008::clear_page() {
  page_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetSeachYYPMList_3008::_internal_page() const {
  return page_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetSeachYYPMList_3008::page() const {
  // @@protoc_insertion_point(field_get:C_GetSeachYYPMList_3008.page)
  return _internal_page();
}
inline void C_GetSeachYYPMList_3008::_internal_set_page(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  page_ = value;
}
inline void C_GetSeachYYPMList_3008::set_page(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:C_GetSeachYYPMList_3008.page)
}

// int32 limit = 8;
inline void C_GetSeachYYPMList_3008::clear_limit() {
  limit_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetSeachYYPMList_3008::_internal_limit() const {
  return limit_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetSeachYYPMList_3008::limit() const {
  // @@protoc_insertion_point(field_get:C_GetSeachYYPMList_3008.limit)
  return _internal_limit();
}
inline void C_GetSeachYYPMList_3008::_internal_set_limit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  limit_ = value;
}
inline void C_GetSeachYYPMList_3008::set_limit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_limit(value);
  // @@protoc_insertion_point(field_set:C_GetSeachYYPMList_3008.limit)
}

// string diqu = 9;
inline void C_GetSeachYYPMList_3008::clear_diqu() {
  diqu_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetSeachYYPMList_3008::diqu() const {
  // @@protoc_insertion_point(field_get:C_GetSeachYYPMList_3008.diqu)
  return _internal_diqu();
}
inline void C_GetSeachYYPMList_3008::set_diqu(const std::string& value) {
  _internal_set_diqu(value);
  // @@protoc_insertion_point(field_set:C_GetSeachYYPMList_3008.diqu)
}
inline std::string* C_GetSeachYYPMList_3008::mutable_diqu() {
  // @@protoc_insertion_point(field_mutable:C_GetSeachYYPMList_3008.diqu)
  return _internal_mutable_diqu();
}
inline const std::string& C_GetSeachYYPMList_3008::_internal_diqu() const {
  return diqu_.GetNoArena();
}
inline void C_GetSeachYYPMList_3008::_internal_set_diqu(const std::string& value) {
  
  diqu_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetSeachYYPMList_3008::set_diqu(std::string&& value) {
  
  diqu_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetSeachYYPMList_3008.diqu)
}
inline void C_GetSeachYYPMList_3008::set_diqu(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  diqu_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetSeachYYPMList_3008.diqu)
}
inline void C_GetSeachYYPMList_3008::set_diqu(const char* value, size_t size) {
  
  diqu_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetSeachYYPMList_3008.diqu)
}
inline std::string* C_GetSeachYYPMList_3008::_internal_mutable_diqu() {
  
  return diqu_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetSeachYYPMList_3008::release_diqu() {
  // @@protoc_insertion_point(field_release:C_GetSeachYYPMList_3008.diqu)
  
  return diqu_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetSeachYYPMList_3008::set_allocated_diqu(std::string* diqu) {
  if (diqu != nullptr) {
    
  } else {
    
  }
  diqu_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), diqu);
  // @@protoc_insertion_point(field_set_allocated:C_GetSeachYYPMList_3008.diqu)
}

// string sortFile = 10;
inline void C_GetSeachYYPMList_3008::clear_sortfile() {
  sortfile_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetSeachYYPMList_3008::sortfile() const {
  // @@protoc_insertion_point(field_get:C_GetSeachYYPMList_3008.sortFile)
  return _internal_sortfile();
}
inline void C_GetSeachYYPMList_3008::set_sortfile(const std::string& value) {
  _internal_set_sortfile(value);
  // @@protoc_insertion_point(field_set:C_GetSeachYYPMList_3008.sortFile)
}
inline std::string* C_GetSeachYYPMList_3008::mutable_sortfile() {
  // @@protoc_insertion_point(field_mutable:C_GetSeachYYPMList_3008.sortFile)
  return _internal_mutable_sortfile();
}
inline const std::string& C_GetSeachYYPMList_3008::_internal_sortfile() const {
  return sortfile_.GetNoArena();
}
inline void C_GetSeachYYPMList_3008::_internal_set_sortfile(const std::string& value) {
  
  sortfile_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetSeachYYPMList_3008::set_sortfile(std::string&& value) {
  
  sortfile_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetSeachYYPMList_3008.sortFile)
}
inline void C_GetSeachYYPMList_3008::set_sortfile(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  sortfile_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetSeachYYPMList_3008.sortFile)
}
inline void C_GetSeachYYPMList_3008::set_sortfile(const char* value, size_t size) {
  
  sortfile_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetSeachYYPMList_3008.sortFile)
}
inline std::string* C_GetSeachYYPMList_3008::_internal_mutable_sortfile() {
  
  return sortfile_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetSeachYYPMList_3008::release_sortfile() {
  // @@protoc_insertion_point(field_release:C_GetSeachYYPMList_3008.sortFile)
  
  return sortfile_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetSeachYYPMList_3008::set_allocated_sortfile(std::string* sortfile) {
  if (sortfile != nullptr) {
    
  } else {
    
  }
  sortfile_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sortfile);
  // @@protoc_insertion_point(field_set_allocated:C_GetSeachYYPMList_3008.sortFile)
}

// -------------------------------------------------------------------

// S_GetSeachYYPMList_3009

// repeated .SeachYYPM SeachYYPM = 1;
inline int S_GetSeachYYPMList_3009::_internal_seachyypm_size() const {
  return seachyypm_.size();
}
inline int S_GetSeachYYPMList_3009::seachyypm_size() const {
  return _internal_seachyypm_size();
}
inline void S_GetSeachYYPMList_3009::clear_seachyypm() {
  seachyypm_.Clear();
}
inline ::SeachYYPM* S_GetSeachYYPMList_3009::mutable_seachyypm(int index) {
  // @@protoc_insertion_point(field_mutable:S_GetSeachYYPMList_3009.SeachYYPM)
  return seachyypm_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SeachYYPM >*
S_GetSeachYYPMList_3009::mutable_seachyypm() {
  // @@protoc_insertion_point(field_mutable_list:S_GetSeachYYPMList_3009.SeachYYPM)
  return &seachyypm_;
}
inline const ::SeachYYPM& S_GetSeachYYPMList_3009::_internal_seachyypm(int index) const {
  return seachyypm_.Get(index);
}
inline const ::SeachYYPM& S_GetSeachYYPMList_3009::seachyypm(int index) const {
  // @@protoc_insertion_point(field_get:S_GetSeachYYPMList_3009.SeachYYPM)
  return _internal_seachyypm(index);
}
inline ::SeachYYPM* S_GetSeachYYPMList_3009::_internal_add_seachyypm() {
  return seachyypm_.Add();
}
inline ::SeachYYPM* S_GetSeachYYPMList_3009::add_seachyypm() {
  // @@protoc_insertion_point(field_add:S_GetSeachYYPMList_3009.SeachYYPM)
  return _internal_add_seachyypm();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SeachYYPM >&
S_GetSeachYYPMList_3009::seachyypm() const {
  // @@protoc_insertion_point(field_list:S_GetSeachYYPMList_3009.SeachYYPM)
  return seachyypm_;
}

// .PagingInfo pagingInfo = 2;
inline bool S_GetSeachYYPMList_3009::_internal_has_paginginfo() const {
  return this != internal_default_instance() && paginginfo_ != nullptr;
}
inline bool S_GetSeachYYPMList_3009::has_paginginfo() const {
  return _internal_has_paginginfo();
}
inline void S_GetSeachYYPMList_3009::clear_paginginfo() {
  if (GetArenaNoVirtual() == nullptr && paginginfo_ != nullptr) {
    delete paginginfo_;
  }
  paginginfo_ = nullptr;
}
inline const ::PagingInfo& S_GetSeachYYPMList_3009::_internal_paginginfo() const {
  const ::PagingInfo* p = paginginfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::PagingInfo*>(
      &::_PagingInfo_default_instance_);
}
inline const ::PagingInfo& S_GetSeachYYPMList_3009::paginginfo() const {
  // @@protoc_insertion_point(field_get:S_GetSeachYYPMList_3009.pagingInfo)
  return _internal_paginginfo();
}
inline ::PagingInfo* S_GetSeachYYPMList_3009::release_paginginfo() {
  // @@protoc_insertion_point(field_release:S_GetSeachYYPMList_3009.pagingInfo)
  
  ::PagingInfo* temp = paginginfo_;
  paginginfo_ = nullptr;
  return temp;
}
inline ::PagingInfo* S_GetSeachYYPMList_3009::_internal_mutable_paginginfo() {
  
  if (paginginfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::PagingInfo>(GetArenaNoVirtual());
    paginginfo_ = p;
  }
  return paginginfo_;
}
inline ::PagingInfo* S_GetSeachYYPMList_3009::mutable_paginginfo() {
  // @@protoc_insertion_point(field_mutable:S_GetSeachYYPMList_3009.pagingInfo)
  return _internal_mutable_paginginfo();
}
inline void S_GetSeachYYPMList_3009::set_allocated_paginginfo(::PagingInfo* paginginfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete paginginfo_;
  }
  if (paginginfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      paginginfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, paginginfo, submessage_arena);
    }
    
  } else {
    
  }
  paginginfo_ = paginginfo;
  // @@protoc_insertion_point(field_set_allocated:S_GetSeachYYPMList_3009.pagingInfo)
}

// -------------------------------------------------------------------

// C_GetZydqList_3010

// string zYName = 1;
inline void C_GetZydqList_3010::clear_zyname() {
  zyname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetZydqList_3010::zyname() const {
  // @@protoc_insertion_point(field_get:C_GetZydqList_3010.zYName)
  return _internal_zyname();
}
inline void C_GetZydqList_3010::set_zyname(const std::string& value) {
  _internal_set_zyname(value);
  // @@protoc_insertion_point(field_set:C_GetZydqList_3010.zYName)
}
inline std::string* C_GetZydqList_3010::mutable_zyname() {
  // @@protoc_insertion_point(field_mutable:C_GetZydqList_3010.zYName)
  return _internal_mutable_zyname();
}
inline const std::string& C_GetZydqList_3010::_internal_zyname() const {
  return zyname_.GetNoArena();
}
inline void C_GetZydqList_3010::_internal_set_zyname(const std::string& value) {
  
  zyname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetZydqList_3010::set_zyname(std::string&& value) {
  
  zyname_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetZydqList_3010.zYName)
}
inline void C_GetZydqList_3010::set_zyname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  zyname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetZydqList_3010.zYName)
}
inline void C_GetZydqList_3010::set_zyname(const char* value, size_t size) {
  
  zyname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetZydqList_3010.zYName)
}
inline std::string* C_GetZydqList_3010::_internal_mutable_zyname() {
  
  return zyname_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetZydqList_3010::release_zyname() {
  // @@protoc_insertion_point(field_release:C_GetZydqList_3010.zYName)
  
  return zyname_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetZydqList_3010::set_allocated_zyname(std::string* zyname) {
  if (zyname != nullptr) {
    
  } else {
    
  }
  zyname_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), zyname);
  // @@protoc_insertion_point(field_set_allocated:C_GetZydqList_3010.zYName)
}

// string pici = 2;
inline void C_GetZydqList_3010::clear_pici() {
  pici_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetZydqList_3010::pici() const {
  // @@protoc_insertion_point(field_get:C_GetZydqList_3010.pici)
  return _internal_pici();
}
inline void C_GetZydqList_3010::set_pici(const std::string& value) {
  _internal_set_pici(value);
  // @@protoc_insertion_point(field_set:C_GetZydqList_3010.pici)
}
inline std::string* C_GetZydqList_3010::mutable_pici() {
  // @@protoc_insertion_point(field_mutable:C_GetZydqList_3010.pici)
  return _internal_mutable_pici();
}
inline const std::string& C_GetZydqList_3010::_internal_pici() const {
  return pici_.GetNoArena();
}
inline void C_GetZydqList_3010::_internal_set_pici(const std::string& value) {
  
  pici_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetZydqList_3010::set_pici(std::string&& value) {
  
  pici_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetZydqList_3010.pici)
}
inline void C_GetZydqList_3010::set_pici(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pici_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetZydqList_3010.pici)
}
inline void C_GetZydqList_3010::set_pici(const char* value, size_t size) {
  
  pici_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetZydqList_3010.pici)
}
inline std::string* C_GetZydqList_3010::_internal_mutable_pici() {
  
  return pici_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetZydqList_3010::release_pici() {
  // @@protoc_insertion_point(field_release:C_GetZydqList_3010.pici)
  
  return pici_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetZydqList_3010::set_allocated_pici(std::string* pici) {
  if (pici != nullptr) {
    
  } else {
    
  }
  pici_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pici);
  // @@protoc_insertion_point(field_set_allocated:C_GetZydqList_3010.pici)
}

// string type = 3;
inline void C_GetZydqList_3010::clear_type() {
  type_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetZydqList_3010::type() const {
  // @@protoc_insertion_point(field_get:C_GetZydqList_3010.type)
  return _internal_type();
}
inline void C_GetZydqList_3010::set_type(const std::string& value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:C_GetZydqList_3010.type)
}
inline std::string* C_GetZydqList_3010::mutable_type() {
  // @@protoc_insertion_point(field_mutable:C_GetZydqList_3010.type)
  return _internal_mutable_type();
}
inline const std::string& C_GetZydqList_3010::_internal_type() const {
  return type_.GetNoArena();
}
inline void C_GetZydqList_3010::_internal_set_type(const std::string& value) {
  
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetZydqList_3010::set_type(std::string&& value) {
  
  type_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetZydqList_3010.type)
}
inline void C_GetZydqList_3010::set_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetZydqList_3010.type)
}
inline void C_GetZydqList_3010::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetZydqList_3010.type)
}
inline std::string* C_GetZydqList_3010::_internal_mutable_type() {
  
  return type_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetZydqList_3010::release_type() {
  // @@protoc_insertion_point(field_release:C_GetZydqList_3010.type)
  
  return type_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetZydqList_3010::set_allocated_type(std::string* type) {
  if (type != nullptr) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:C_GetZydqList_3010.type)
}

// int32 schoolIsAll = 4;
inline void C_GetZydqList_3010::clear_schoolisall() {
  schoolisall_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetZydqList_3010::_internal_schoolisall() const {
  return schoolisall_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetZydqList_3010::schoolisall() const {
  // @@protoc_insertion_point(field_get:C_GetZydqList_3010.schoolIsAll)
  return _internal_schoolisall();
}
inline void C_GetZydqList_3010::_internal_set_schoolisall(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  schoolisall_ = value;
}
inline void C_GetZydqList_3010::set_schoolisall(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_schoolisall(value);
  // @@protoc_insertion_point(field_set:C_GetZydqList_3010.schoolIsAll)
}

// int32 page = 5;
inline void C_GetZydqList_3010::clear_page() {
  page_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetZydqList_3010::_internal_page() const {
  return page_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetZydqList_3010::page() const {
  // @@protoc_insertion_point(field_get:C_GetZydqList_3010.page)
  return _internal_page();
}
inline void C_GetZydqList_3010::_internal_set_page(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  page_ = value;
}
inline void C_GetZydqList_3010::set_page(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:C_GetZydqList_3010.page)
}

// int32 limit = 6;
inline void C_GetZydqList_3010::clear_limit() {
  limit_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetZydqList_3010::_internal_limit() const {
  return limit_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetZydqList_3010::limit() const {
  // @@protoc_insertion_point(field_get:C_GetZydqList_3010.limit)
  return _internal_limit();
}
inline void C_GetZydqList_3010::_internal_set_limit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  limit_ = value;
}
inline void C_GetZydqList_3010::set_limit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_limit(value);
  // @@protoc_insertion_point(field_set:C_GetZydqList_3010.limit)
}

// -------------------------------------------------------------------

// S_GetZydqList_3011

// repeated .Xkml xkml = 1;
inline int S_GetZydqList_3011::_internal_xkml_size() const {
  return xkml_.size();
}
inline int S_GetZydqList_3011::xkml_size() const {
  return _internal_xkml_size();
}
inline void S_GetZydqList_3011::clear_xkml() {
  xkml_.Clear();
}
inline ::Xkml* S_GetZydqList_3011::mutable_xkml(int index) {
  // @@protoc_insertion_point(field_mutable:S_GetZydqList_3011.xkml)
  return xkml_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Xkml >*
S_GetZydqList_3011::mutable_xkml() {
  // @@protoc_insertion_point(field_mutable_list:S_GetZydqList_3011.xkml)
  return &xkml_;
}
inline const ::Xkml& S_GetZydqList_3011::_internal_xkml(int index) const {
  return xkml_.Get(index);
}
inline const ::Xkml& S_GetZydqList_3011::xkml(int index) const {
  // @@protoc_insertion_point(field_get:S_GetZydqList_3011.xkml)
  return _internal_xkml(index);
}
inline ::Xkml* S_GetZydqList_3011::_internal_add_xkml() {
  return xkml_.Add();
}
inline ::Xkml* S_GetZydqList_3011::add_xkml() {
  // @@protoc_insertion_point(field_add:S_GetZydqList_3011.xkml)
  return _internal_add_xkml();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Xkml >&
S_GetZydqList_3011::xkml() const {
  // @@protoc_insertion_point(field_list:S_GetZydqList_3011.xkml)
  return xkml_;
}

// .PagingInfo pagingInfo = 2;
inline bool S_GetZydqList_3011::_internal_has_paginginfo() const {
  return this != internal_default_instance() && paginginfo_ != nullptr;
}
inline bool S_GetZydqList_3011::has_paginginfo() const {
  return _internal_has_paginginfo();
}
inline void S_GetZydqList_3011::clear_paginginfo() {
  if (GetArenaNoVirtual() == nullptr && paginginfo_ != nullptr) {
    delete paginginfo_;
  }
  paginginfo_ = nullptr;
}
inline const ::PagingInfo& S_GetZydqList_3011::_internal_paginginfo() const {
  const ::PagingInfo* p = paginginfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::PagingInfo*>(
      &::_PagingInfo_default_instance_);
}
inline const ::PagingInfo& S_GetZydqList_3011::paginginfo() const {
  // @@protoc_insertion_point(field_get:S_GetZydqList_3011.pagingInfo)
  return _internal_paginginfo();
}
inline ::PagingInfo* S_GetZydqList_3011::release_paginginfo() {
  // @@protoc_insertion_point(field_release:S_GetZydqList_3011.pagingInfo)
  
  ::PagingInfo* temp = paginginfo_;
  paginginfo_ = nullptr;
  return temp;
}
inline ::PagingInfo* S_GetZydqList_3011::_internal_mutable_paginginfo() {
  
  if (paginginfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::PagingInfo>(GetArenaNoVirtual());
    paginginfo_ = p;
  }
  return paginginfo_;
}
inline ::PagingInfo* S_GetZydqList_3011::mutable_paginginfo() {
  // @@protoc_insertion_point(field_mutable:S_GetZydqList_3011.pagingInfo)
  return _internal_mutable_paginginfo();
}
inline void S_GetZydqList_3011::set_allocated_paginginfo(::PagingInfo* paginginfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete paginginfo_;
  }
  if (paginginfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      paginginfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, paginginfo, submessage_arena);
    }
    
  } else {
    
  }
  paginginfo_ = paginginfo;
  // @@protoc_insertion_point(field_set_allocated:S_GetZydqList_3011.pagingInfo)
}

// -------------------------------------------------------------------

// C_GetSeachFSXZYList_3012

// string kelei = 1;
inline void C_GetSeachFSXZYList_3012::clear_kelei() {
  kelei_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetSeachFSXZYList_3012::kelei() const {
  // @@protoc_insertion_point(field_get:C_GetSeachFSXZYList_3012.kelei)
  return _internal_kelei();
}
inline void C_GetSeachFSXZYList_3012::set_kelei(const std::string& value) {
  _internal_set_kelei(value);
  // @@protoc_insertion_point(field_set:C_GetSeachFSXZYList_3012.kelei)
}
inline std::string* C_GetSeachFSXZYList_3012::mutable_kelei() {
  // @@protoc_insertion_point(field_mutable:C_GetSeachFSXZYList_3012.kelei)
  return _internal_mutable_kelei();
}
inline const std::string& C_GetSeachFSXZYList_3012::_internal_kelei() const {
  return kelei_.GetNoArena();
}
inline void C_GetSeachFSXZYList_3012::_internal_set_kelei(const std::string& value) {
  
  kelei_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetSeachFSXZYList_3012::set_kelei(std::string&& value) {
  
  kelei_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetSeachFSXZYList_3012.kelei)
}
inline void C_GetSeachFSXZYList_3012::set_kelei(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  kelei_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetSeachFSXZYList_3012.kelei)
}
inline void C_GetSeachFSXZYList_3012::set_kelei(const char* value, size_t size) {
  
  kelei_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetSeachFSXZYList_3012.kelei)
}
inline std::string* C_GetSeachFSXZYList_3012::_internal_mutable_kelei() {
  
  return kelei_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetSeachFSXZYList_3012::release_kelei() {
  // @@protoc_insertion_point(field_release:C_GetSeachFSXZYList_3012.kelei)
  
  return kelei_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetSeachFSXZYList_3012::set_allocated_kelei(std::string* kelei) {
  if (kelei != nullptr) {
    
  } else {
    
  }
  kelei_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), kelei);
  // @@protoc_insertion_point(field_set_allocated:C_GetSeachFSXZYList_3012.kelei)
}

// string zyName = 2;
inline void C_GetSeachFSXZYList_3012::clear_zyname() {
  zyname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetSeachFSXZYList_3012::zyname() const {
  // @@protoc_insertion_point(field_get:C_GetSeachFSXZYList_3012.zyName)
  return _internal_zyname();
}
inline void C_GetSeachFSXZYList_3012::set_zyname(const std::string& value) {
  _internal_set_zyname(value);
  // @@protoc_insertion_point(field_set:C_GetSeachFSXZYList_3012.zyName)
}
inline std::string* C_GetSeachFSXZYList_3012::mutable_zyname() {
  // @@protoc_insertion_point(field_mutable:C_GetSeachFSXZYList_3012.zyName)
  return _internal_mutable_zyname();
}
inline const std::string& C_GetSeachFSXZYList_3012::_internal_zyname() const {
  return zyname_.GetNoArena();
}
inline void C_GetSeachFSXZYList_3012::_internal_set_zyname(const std::string& value) {
  
  zyname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetSeachFSXZYList_3012::set_zyname(std::string&& value) {
  
  zyname_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetSeachFSXZYList_3012.zyName)
}
inline void C_GetSeachFSXZYList_3012::set_zyname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  zyname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetSeachFSXZYList_3012.zyName)
}
inline void C_GetSeachFSXZYList_3012::set_zyname(const char* value, size_t size) {
  
  zyname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetSeachFSXZYList_3012.zyName)
}
inline std::string* C_GetSeachFSXZYList_3012::_internal_mutable_zyname() {
  
  return zyname_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetSeachFSXZYList_3012::release_zyname() {
  // @@protoc_insertion_point(field_release:C_GetSeachFSXZYList_3012.zyName)
  
  return zyname_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetSeachFSXZYList_3012::set_allocated_zyname(std::string* zyname) {
  if (zyname != nullptr) {
    
  } else {
    
  }
  zyname_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), zyname);
  // @@protoc_insertion_point(field_set_allocated:C_GetSeachFSXZYList_3012.zyName)
}

// string province = 3;
inline void C_GetSeachFSXZYList_3012::clear_province() {
  province_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetSeachFSXZYList_3012::province() const {
  // @@protoc_insertion_point(field_get:C_GetSeachFSXZYList_3012.province)
  return _internal_province();
}
inline void C_GetSeachFSXZYList_3012::set_province(const std::string& value) {
  _internal_set_province(value);
  // @@protoc_insertion_point(field_set:C_GetSeachFSXZYList_3012.province)
}
inline std::string* C_GetSeachFSXZYList_3012::mutable_province() {
  // @@protoc_insertion_point(field_mutable:C_GetSeachFSXZYList_3012.province)
  return _internal_mutable_province();
}
inline const std::string& C_GetSeachFSXZYList_3012::_internal_province() const {
  return province_.GetNoArena();
}
inline void C_GetSeachFSXZYList_3012::_internal_set_province(const std::string& value) {
  
  province_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetSeachFSXZYList_3012::set_province(std::string&& value) {
  
  province_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetSeachFSXZYList_3012.province)
}
inline void C_GetSeachFSXZYList_3012::set_province(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  province_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetSeachFSXZYList_3012.province)
}
inline void C_GetSeachFSXZYList_3012::set_province(const char* value, size_t size) {
  
  province_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetSeachFSXZYList_3012.province)
}
inline std::string* C_GetSeachFSXZYList_3012::_internal_mutable_province() {
  
  return province_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetSeachFSXZYList_3012::release_province() {
  // @@protoc_insertion_point(field_release:C_GetSeachFSXZYList_3012.province)
  
  return province_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetSeachFSXZYList_3012::set_allocated_province(std::string* province) {
  if (province != nullptr) {
    
  } else {
    
  }
  province_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), province);
  // @@protoc_insertion_point(field_set_allocated:C_GetSeachFSXZYList_3012.province)
}

// string type = 4;
inline void C_GetSeachFSXZYList_3012::clear_type() {
  type_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetSeachFSXZYList_3012::type() const {
  // @@protoc_insertion_point(field_get:C_GetSeachFSXZYList_3012.type)
  return _internal_type();
}
inline void C_GetSeachFSXZYList_3012::set_type(const std::string& value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:C_GetSeachFSXZYList_3012.type)
}
inline std::string* C_GetSeachFSXZYList_3012::mutable_type() {
  // @@protoc_insertion_point(field_mutable:C_GetSeachFSXZYList_3012.type)
  return _internal_mutable_type();
}
inline const std::string& C_GetSeachFSXZYList_3012::_internal_type() const {
  return type_.GetNoArena();
}
inline void C_GetSeachFSXZYList_3012::_internal_set_type(const std::string& value) {
  
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetSeachFSXZYList_3012::set_type(std::string&& value) {
  
  type_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetSeachFSXZYList_3012.type)
}
inline void C_GetSeachFSXZYList_3012::set_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetSeachFSXZYList_3012.type)
}
inline void C_GetSeachFSXZYList_3012::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetSeachFSXZYList_3012.type)
}
inline std::string* C_GetSeachFSXZYList_3012::_internal_mutable_type() {
  
  return type_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetSeachFSXZYList_3012::release_type() {
  // @@protoc_insertion_point(field_release:C_GetSeachFSXZYList_3012.type)
  
  return type_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetSeachFSXZYList_3012::set_allocated_type(std::string* type) {
  if (type != nullptr) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:C_GetSeachFSXZYList_3012.type)
}

// string pici = 5;
inline void C_GetSeachFSXZYList_3012::clear_pici() {
  pici_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetSeachFSXZYList_3012::pici() const {
  // @@protoc_insertion_point(field_get:C_GetSeachFSXZYList_3012.pici)
  return _internal_pici();
}
inline void C_GetSeachFSXZYList_3012::set_pici(const std::string& value) {
  _internal_set_pici(value);
  // @@protoc_insertion_point(field_set:C_GetSeachFSXZYList_3012.pici)
}
inline std::string* C_GetSeachFSXZYList_3012::mutable_pici() {
  // @@protoc_insertion_point(field_mutable:C_GetSeachFSXZYList_3012.pici)
  return _internal_mutable_pici();
}
inline const std::string& C_GetSeachFSXZYList_3012::_internal_pici() const {
  return pici_.GetNoArena();
}
inline void C_GetSeachFSXZYList_3012::_internal_set_pici(const std::string& value) {
  
  pici_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetSeachFSXZYList_3012::set_pici(std::string&& value) {
  
  pici_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetSeachFSXZYList_3012.pici)
}
inline void C_GetSeachFSXZYList_3012::set_pici(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pici_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetSeachFSXZYList_3012.pici)
}
inline void C_GetSeachFSXZYList_3012::set_pici(const char* value, size_t size) {
  
  pici_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetSeachFSXZYList_3012.pici)
}
inline std::string* C_GetSeachFSXZYList_3012::_internal_mutable_pici() {
  
  return pici_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetSeachFSXZYList_3012::release_pici() {
  // @@protoc_insertion_point(field_release:C_GetSeachFSXZYList_3012.pici)
  
  return pici_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetSeachFSXZYList_3012::set_allocated_pici(std::string* pici) {
  if (pici != nullptr) {
    
  } else {
    
  }
  pici_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pici);
  // @@protoc_insertion_point(field_set_allocated:C_GetSeachFSXZYList_3012.pici)
}

// string xueli = 6;
inline void C_GetSeachFSXZYList_3012::clear_xueli() {
  xueli_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetSeachFSXZYList_3012::xueli() const {
  // @@protoc_insertion_point(field_get:C_GetSeachFSXZYList_3012.xueli)
  return _internal_xueli();
}
inline void C_GetSeachFSXZYList_3012::set_xueli(const std::string& value) {
  _internal_set_xueli(value);
  // @@protoc_insertion_point(field_set:C_GetSeachFSXZYList_3012.xueli)
}
inline std::string* C_GetSeachFSXZYList_3012::mutable_xueli() {
  // @@protoc_insertion_point(field_mutable:C_GetSeachFSXZYList_3012.xueli)
  return _internal_mutable_xueli();
}
inline const std::string& C_GetSeachFSXZYList_3012::_internal_xueli() const {
  return xueli_.GetNoArena();
}
inline void C_GetSeachFSXZYList_3012::_internal_set_xueli(const std::string& value) {
  
  xueli_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetSeachFSXZYList_3012::set_xueli(std::string&& value) {
  
  xueli_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetSeachFSXZYList_3012.xueli)
}
inline void C_GetSeachFSXZYList_3012::set_xueli(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  xueli_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetSeachFSXZYList_3012.xueli)
}
inline void C_GetSeachFSXZYList_3012::set_xueli(const char* value, size_t size) {
  
  xueli_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetSeachFSXZYList_3012.xueli)
}
inline std::string* C_GetSeachFSXZYList_3012::_internal_mutable_xueli() {
  
  return xueli_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetSeachFSXZYList_3012::release_xueli() {
  // @@protoc_insertion_point(field_release:C_GetSeachFSXZYList_3012.xueli)
  
  return xueli_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetSeachFSXZYList_3012::set_allocated_xueli(std::string* xueli) {
  if (xueli != nullptr) {
    
  } else {
    
  }
  xueli_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), xueli);
  // @@protoc_insertion_point(field_set_allocated:C_GetSeachFSXZYList_3012.xueli)
}

// string kemu = 7;
inline void C_GetSeachFSXZYList_3012::clear_kemu() {
  kemu_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetSeachFSXZYList_3012::kemu() const {
  // @@protoc_insertion_point(field_get:C_GetSeachFSXZYList_3012.kemu)
  return _internal_kemu();
}
inline void C_GetSeachFSXZYList_3012::set_kemu(const std::string& value) {
  _internal_set_kemu(value);
  // @@protoc_insertion_point(field_set:C_GetSeachFSXZYList_3012.kemu)
}
inline std::string* C_GetSeachFSXZYList_3012::mutable_kemu() {
  // @@protoc_insertion_point(field_mutable:C_GetSeachFSXZYList_3012.kemu)
  return _internal_mutable_kemu();
}
inline const std::string& C_GetSeachFSXZYList_3012::_internal_kemu() const {
  return kemu_.GetNoArena();
}
inline void C_GetSeachFSXZYList_3012::_internal_set_kemu(const std::string& value) {
  
  kemu_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetSeachFSXZYList_3012::set_kemu(std::string&& value) {
  
  kemu_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetSeachFSXZYList_3012.kemu)
}
inline void C_GetSeachFSXZYList_3012::set_kemu(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  kemu_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetSeachFSXZYList_3012.kemu)
}
inline void C_GetSeachFSXZYList_3012::set_kemu(const char* value, size_t size) {
  
  kemu_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetSeachFSXZYList_3012.kemu)
}
inline std::string* C_GetSeachFSXZYList_3012::_internal_mutable_kemu() {
  
  return kemu_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetSeachFSXZYList_3012::release_kemu() {
  // @@protoc_insertion_point(field_release:C_GetSeachFSXZYList_3012.kemu)
  
  return kemu_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetSeachFSXZYList_3012::set_allocated_kemu(std::string* kemu) {
  if (kemu != nullptr) {
    
  } else {
    
  }
  kemu_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), kemu);
  // @@protoc_insertion_point(field_set_allocated:C_GetSeachFSXZYList_3012.kemu)
}

// int32 schoolIsAll = 8;
inline void C_GetSeachFSXZYList_3012::clear_schoolisall() {
  schoolisall_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetSeachFSXZYList_3012::_internal_schoolisall() const {
  return schoolisall_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetSeachFSXZYList_3012::schoolisall() const {
  // @@protoc_insertion_point(field_get:C_GetSeachFSXZYList_3012.schoolIsAll)
  return _internal_schoolisall();
}
inline void C_GetSeachFSXZYList_3012::_internal_set_schoolisall(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  schoolisall_ = value;
}
inline void C_GetSeachFSXZYList_3012::set_schoolisall(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_schoolisall(value);
  // @@protoc_insertion_point(field_set:C_GetSeachFSXZYList_3012.schoolIsAll)
}

// int32 startScore = 9;
inline void C_GetSeachFSXZYList_3012::clear_startscore() {
  startscore_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetSeachFSXZYList_3012::_internal_startscore() const {
  return startscore_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetSeachFSXZYList_3012::startscore() const {
  // @@protoc_insertion_point(field_get:C_GetSeachFSXZYList_3012.startScore)
  return _internal_startscore();
}
inline void C_GetSeachFSXZYList_3012::_internal_set_startscore(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  startscore_ = value;
}
inline void C_GetSeachFSXZYList_3012::set_startscore(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_startscore(value);
  // @@protoc_insertion_point(field_set:C_GetSeachFSXZYList_3012.startScore)
}

// int32 endScore = 10;
inline void C_GetSeachFSXZYList_3012::clear_endscore() {
  endscore_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetSeachFSXZYList_3012::_internal_endscore() const {
  return endscore_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetSeachFSXZYList_3012::endscore() const {
  // @@protoc_insertion_point(field_get:C_GetSeachFSXZYList_3012.endScore)
  return _internal_endscore();
}
inline void C_GetSeachFSXZYList_3012::_internal_set_endscore(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  endscore_ = value;
}
inline void C_GetSeachFSXZYList_3012::set_endscore(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_endscore(value);
  // @@protoc_insertion_point(field_set:C_GetSeachFSXZYList_3012.endScore)
}

// int32 page = 11;
inline void C_GetSeachFSXZYList_3012::clear_page() {
  page_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetSeachFSXZYList_3012::_internal_page() const {
  return page_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetSeachFSXZYList_3012::page() const {
  // @@protoc_insertion_point(field_get:C_GetSeachFSXZYList_3012.page)
  return _internal_page();
}
inline void C_GetSeachFSXZYList_3012::_internal_set_page(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  page_ = value;
}
inline void C_GetSeachFSXZYList_3012::set_page(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:C_GetSeachFSXZYList_3012.page)
}

// int32 limit = 12;
inline void C_GetSeachFSXZYList_3012::clear_limit() {
  limit_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetSeachFSXZYList_3012::_internal_limit() const {
  return limit_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetSeachFSXZYList_3012::limit() const {
  // @@protoc_insertion_point(field_get:C_GetSeachFSXZYList_3012.limit)
  return _internal_limit();
}
inline void C_GetSeachFSXZYList_3012::_internal_set_limit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  limit_ = value;
}
inline void C_GetSeachFSXZYList_3012::set_limit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_limit(value);
  // @@protoc_insertion_point(field_set:C_GetSeachFSXZYList_3012.limit)
}

// string sortFile = 13;
inline void C_GetSeachFSXZYList_3012::clear_sortfile() {
  sortfile_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetSeachFSXZYList_3012::sortfile() const {
  // @@protoc_insertion_point(field_get:C_GetSeachFSXZYList_3012.sortFile)
  return _internal_sortfile();
}
inline void C_GetSeachFSXZYList_3012::set_sortfile(const std::string& value) {
  _internal_set_sortfile(value);
  // @@protoc_insertion_point(field_set:C_GetSeachFSXZYList_3012.sortFile)
}
inline std::string* C_GetSeachFSXZYList_3012::mutable_sortfile() {
  // @@protoc_insertion_point(field_mutable:C_GetSeachFSXZYList_3012.sortFile)
  return _internal_mutable_sortfile();
}
inline const std::string& C_GetSeachFSXZYList_3012::_internal_sortfile() const {
  return sortfile_.GetNoArena();
}
inline void C_GetSeachFSXZYList_3012::_internal_set_sortfile(const std::string& value) {
  
  sortfile_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetSeachFSXZYList_3012::set_sortfile(std::string&& value) {
  
  sortfile_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetSeachFSXZYList_3012.sortFile)
}
inline void C_GetSeachFSXZYList_3012::set_sortfile(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  sortfile_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetSeachFSXZYList_3012.sortFile)
}
inline void C_GetSeachFSXZYList_3012::set_sortfile(const char* value, size_t size) {
  
  sortfile_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetSeachFSXZYList_3012.sortFile)
}
inline std::string* C_GetSeachFSXZYList_3012::_internal_mutable_sortfile() {
  
  return sortfile_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetSeachFSXZYList_3012::release_sortfile() {
  // @@protoc_insertion_point(field_release:C_GetSeachFSXZYList_3012.sortFile)
  
  return sortfile_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetSeachFSXZYList_3012::set_allocated_sortfile(std::string* sortfile) {
  if (sortfile != nullptr) {
    
  } else {
    
  }
  sortfile_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sortfile);
  // @@protoc_insertion_point(field_set_allocated:C_GetSeachFSXZYList_3012.sortFile)
}

// -------------------------------------------------------------------

// S_GetSeachFSXZYList_3013

// repeated .FSXZY fSXZY = 1;
inline int S_GetSeachFSXZYList_3013::_internal_fsxzy_size() const {
  return fsxzy_.size();
}
inline int S_GetSeachFSXZYList_3013::fsxzy_size() const {
  return _internal_fsxzy_size();
}
inline void S_GetSeachFSXZYList_3013::clear_fsxzy() {
  fsxzy_.Clear();
}
inline ::FSXZY* S_GetSeachFSXZYList_3013::mutable_fsxzy(int index) {
  // @@protoc_insertion_point(field_mutable:S_GetSeachFSXZYList_3013.fSXZY)
  return fsxzy_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::FSXZY >*
S_GetSeachFSXZYList_3013::mutable_fsxzy() {
  // @@protoc_insertion_point(field_mutable_list:S_GetSeachFSXZYList_3013.fSXZY)
  return &fsxzy_;
}
inline const ::FSXZY& S_GetSeachFSXZYList_3013::_internal_fsxzy(int index) const {
  return fsxzy_.Get(index);
}
inline const ::FSXZY& S_GetSeachFSXZYList_3013::fsxzy(int index) const {
  // @@protoc_insertion_point(field_get:S_GetSeachFSXZYList_3013.fSXZY)
  return _internal_fsxzy(index);
}
inline ::FSXZY* S_GetSeachFSXZYList_3013::_internal_add_fsxzy() {
  return fsxzy_.Add();
}
inline ::FSXZY* S_GetSeachFSXZYList_3013::add_fsxzy() {
  // @@protoc_insertion_point(field_add:S_GetSeachFSXZYList_3013.fSXZY)
  return _internal_add_fsxzy();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::FSXZY >&
S_GetSeachFSXZYList_3013::fsxzy() const {
  // @@protoc_insertion_point(field_list:S_GetSeachFSXZYList_3013.fSXZY)
  return fsxzy_;
}

// .PagingInfo pagingInfo = 2;
inline bool S_GetSeachFSXZYList_3013::_internal_has_paginginfo() const {
  return this != internal_default_instance() && paginginfo_ != nullptr;
}
inline bool S_GetSeachFSXZYList_3013::has_paginginfo() const {
  return _internal_has_paginginfo();
}
inline void S_GetSeachFSXZYList_3013::clear_paginginfo() {
  if (GetArenaNoVirtual() == nullptr && paginginfo_ != nullptr) {
    delete paginginfo_;
  }
  paginginfo_ = nullptr;
}
inline const ::PagingInfo& S_GetSeachFSXZYList_3013::_internal_paginginfo() const {
  const ::PagingInfo* p = paginginfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::PagingInfo*>(
      &::_PagingInfo_default_instance_);
}
inline const ::PagingInfo& S_GetSeachFSXZYList_3013::paginginfo() const {
  // @@protoc_insertion_point(field_get:S_GetSeachFSXZYList_3013.pagingInfo)
  return _internal_paginginfo();
}
inline ::PagingInfo* S_GetSeachFSXZYList_3013::release_paginginfo() {
  // @@protoc_insertion_point(field_release:S_GetSeachFSXZYList_3013.pagingInfo)
  
  ::PagingInfo* temp = paginginfo_;
  paginginfo_ = nullptr;
  return temp;
}
inline ::PagingInfo* S_GetSeachFSXZYList_3013::_internal_mutable_paginginfo() {
  
  if (paginginfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::PagingInfo>(GetArenaNoVirtual());
    paginginfo_ = p;
  }
  return paginginfo_;
}
inline ::PagingInfo* S_GetSeachFSXZYList_3013::mutable_paginginfo() {
  // @@protoc_insertion_point(field_mutable:S_GetSeachFSXZYList_3013.pagingInfo)
  return _internal_mutable_paginginfo();
}
inline void S_GetSeachFSXZYList_3013::set_allocated_paginginfo(::PagingInfo* paginginfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete paginginfo_;
  }
  if (paginginfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      paginginfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, paginginfo, submessage_arena);
    }
    
  } else {
    
  }
  paginginfo_ = paginginfo;
  // @@protoc_insertion_point(field_set_allocated:S_GetSeachFSXZYList_3013.pagingInfo)
}

// -------------------------------------------------------------------

// C_GetZyzdxList_3014

// string zyName = 1;
inline void C_GetZyzdxList_3014::clear_zyname() {
  zyname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetZyzdxList_3014::zyname() const {
  // @@protoc_insertion_point(field_get:C_GetZyzdxList_3014.zyName)
  return _internal_zyname();
}
inline void C_GetZyzdxList_3014::set_zyname(const std::string& value) {
  _internal_set_zyname(value);
  // @@protoc_insertion_point(field_set:C_GetZyzdxList_3014.zyName)
}
inline std::string* C_GetZyzdxList_3014::mutable_zyname() {
  // @@protoc_insertion_point(field_mutable:C_GetZyzdxList_3014.zyName)
  return _internal_mutable_zyname();
}
inline const std::string& C_GetZyzdxList_3014::_internal_zyname() const {
  return zyname_.GetNoArena();
}
inline void C_GetZyzdxList_3014::_internal_set_zyname(const std::string& value) {
  
  zyname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetZyzdxList_3014::set_zyname(std::string&& value) {
  
  zyname_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetZyzdxList_3014.zyName)
}
inline void C_GetZyzdxList_3014::set_zyname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  zyname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetZyzdxList_3014.zyName)
}
inline void C_GetZyzdxList_3014::set_zyname(const char* value, size_t size) {
  
  zyname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetZyzdxList_3014.zyName)
}
inline std::string* C_GetZyzdxList_3014::_internal_mutable_zyname() {
  
  return zyname_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetZyzdxList_3014::release_zyname() {
  // @@protoc_insertion_point(field_release:C_GetZyzdxList_3014.zyName)
  
  return zyname_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetZyzdxList_3014::set_allocated_zyname(std::string* zyname) {
  if (zyname != nullptr) {
    
  } else {
    
  }
  zyname_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), zyname);
  // @@protoc_insertion_point(field_set_allocated:C_GetZyzdxList_3014.zyName)
}

// string province = 2;
inline void C_GetZyzdxList_3014::clear_province() {
  province_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetZyzdxList_3014::province() const {
  // @@protoc_insertion_point(field_get:C_GetZyzdxList_3014.province)
  return _internal_province();
}
inline void C_GetZyzdxList_3014::set_province(const std::string& value) {
  _internal_set_province(value);
  // @@protoc_insertion_point(field_set:C_GetZyzdxList_3014.province)
}
inline std::string* C_GetZyzdxList_3014::mutable_province() {
  // @@protoc_insertion_point(field_mutable:C_GetZyzdxList_3014.province)
  return _internal_mutable_province();
}
inline const std::string& C_GetZyzdxList_3014::_internal_province() const {
  return province_.GetNoArena();
}
inline void C_GetZyzdxList_3014::_internal_set_province(const std::string& value) {
  
  province_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetZyzdxList_3014::set_province(std::string&& value) {
  
  province_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetZyzdxList_3014.province)
}
inline void C_GetZyzdxList_3014::set_province(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  province_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetZyzdxList_3014.province)
}
inline void C_GetZyzdxList_3014::set_province(const char* value, size_t size) {
  
  province_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetZyzdxList_3014.province)
}
inline std::string* C_GetZyzdxList_3014::_internal_mutable_province() {
  
  return province_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetZyzdxList_3014::release_province() {
  // @@protoc_insertion_point(field_release:C_GetZyzdxList_3014.province)
  
  return province_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetZyzdxList_3014::set_allocated_province(std::string* province) {
  if (province != nullptr) {
    
  } else {
    
  }
  province_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), province);
  // @@protoc_insertion_point(field_set_allocated:C_GetZyzdxList_3014.province)
}

// string type = 3;
inline void C_GetZyzdxList_3014::clear_type() {
  type_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetZyzdxList_3014::type() const {
  // @@protoc_insertion_point(field_get:C_GetZyzdxList_3014.type)
  return _internal_type();
}
inline void C_GetZyzdxList_3014::set_type(const std::string& value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:C_GetZyzdxList_3014.type)
}
inline std::string* C_GetZyzdxList_3014::mutable_type() {
  // @@protoc_insertion_point(field_mutable:C_GetZyzdxList_3014.type)
  return _internal_mutable_type();
}
inline const std::string& C_GetZyzdxList_3014::_internal_type() const {
  return type_.GetNoArena();
}
inline void C_GetZyzdxList_3014::_internal_set_type(const std::string& value) {
  
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetZyzdxList_3014::set_type(std::string&& value) {
  
  type_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetZyzdxList_3014.type)
}
inline void C_GetZyzdxList_3014::set_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetZyzdxList_3014.type)
}
inline void C_GetZyzdxList_3014::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetZyzdxList_3014.type)
}
inline std::string* C_GetZyzdxList_3014::_internal_mutable_type() {
  
  return type_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetZyzdxList_3014::release_type() {
  // @@protoc_insertion_point(field_release:C_GetZyzdxList_3014.type)
  
  return type_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetZyzdxList_3014::set_allocated_type(std::string* type) {
  if (type != nullptr) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:C_GetZyzdxList_3014.type)
}

// string xueli = 4;
inline void C_GetZyzdxList_3014::clear_xueli() {
  xueli_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetZyzdxList_3014::xueli() const {
  // @@protoc_insertion_point(field_get:C_GetZyzdxList_3014.xueli)
  return _internal_xueli();
}
inline void C_GetZyzdxList_3014::set_xueli(const std::string& value) {
  _internal_set_xueli(value);
  // @@protoc_insertion_point(field_set:C_GetZyzdxList_3014.xueli)
}
inline std::string* C_GetZyzdxList_3014::mutable_xueli() {
  // @@protoc_insertion_point(field_mutable:C_GetZyzdxList_3014.xueli)
  return _internal_mutable_xueli();
}
inline const std::string& C_GetZyzdxList_3014::_internal_xueli() const {
  return xueli_.GetNoArena();
}
inline void C_GetZyzdxList_3014::_internal_set_xueli(const std::string& value) {
  
  xueli_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetZyzdxList_3014::set_xueli(std::string&& value) {
  
  xueli_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetZyzdxList_3014.xueli)
}
inline void C_GetZyzdxList_3014::set_xueli(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  xueli_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetZyzdxList_3014.xueli)
}
inline void C_GetZyzdxList_3014::set_xueli(const char* value, size_t size) {
  
  xueli_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetZyzdxList_3014.xueli)
}
inline std::string* C_GetZyzdxList_3014::_internal_mutable_xueli() {
  
  return xueli_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetZyzdxList_3014::release_xueli() {
  // @@protoc_insertion_point(field_release:C_GetZyzdxList_3014.xueli)
  
  return xueli_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetZyzdxList_3014::set_allocated_xueli(std::string* xueli) {
  if (xueli != nullptr) {
    
  } else {
    
  }
  xueli_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), xueli);
  // @@protoc_insertion_point(field_set_allocated:C_GetZyzdxList_3014.xueli)
}

// string pici = 5;
inline void C_GetZyzdxList_3014::clear_pici() {
  pici_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetZyzdxList_3014::pici() const {
  // @@protoc_insertion_point(field_get:C_GetZyzdxList_3014.pici)
  return _internal_pici();
}
inline void C_GetZyzdxList_3014::set_pici(const std::string& value) {
  _internal_set_pici(value);
  // @@protoc_insertion_point(field_set:C_GetZyzdxList_3014.pici)
}
inline std::string* C_GetZyzdxList_3014::mutable_pici() {
  // @@protoc_insertion_point(field_mutable:C_GetZyzdxList_3014.pici)
  return _internal_mutable_pici();
}
inline const std::string& C_GetZyzdxList_3014::_internal_pici() const {
  return pici_.GetNoArena();
}
inline void C_GetZyzdxList_3014::_internal_set_pici(const std::string& value) {
  
  pici_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetZyzdxList_3014::set_pici(std::string&& value) {
  
  pici_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetZyzdxList_3014.pici)
}
inline void C_GetZyzdxList_3014::set_pici(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pici_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetZyzdxList_3014.pici)
}
inline void C_GetZyzdxList_3014::set_pici(const char* value, size_t size) {
  
  pici_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetZyzdxList_3014.pici)
}
inline std::string* C_GetZyzdxList_3014::_internal_mutable_pici() {
  
  return pici_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetZyzdxList_3014::release_pici() {
  // @@protoc_insertion_point(field_release:C_GetZyzdxList_3014.pici)
  
  return pici_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetZyzdxList_3014::set_allocated_pici(std::string* pici) {
  if (pici != nullptr) {
    
  } else {
    
  }
  pici_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pici);
  // @@protoc_insertion_point(field_set_allocated:C_GetZyzdxList_3014.pici)
}

// string kemu = 6;
inline void C_GetZyzdxList_3014::clear_kemu() {
  kemu_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetZyzdxList_3014::kemu() const {
  // @@protoc_insertion_point(field_get:C_GetZyzdxList_3014.kemu)
  return _internal_kemu();
}
inline void C_GetZyzdxList_3014::set_kemu(const std::string& value) {
  _internal_set_kemu(value);
  // @@protoc_insertion_point(field_set:C_GetZyzdxList_3014.kemu)
}
inline std::string* C_GetZyzdxList_3014::mutable_kemu() {
  // @@protoc_insertion_point(field_mutable:C_GetZyzdxList_3014.kemu)
  return _internal_mutable_kemu();
}
inline const std::string& C_GetZyzdxList_3014::_internal_kemu() const {
  return kemu_.GetNoArena();
}
inline void C_GetZyzdxList_3014::_internal_set_kemu(const std::string& value) {
  
  kemu_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetZyzdxList_3014::set_kemu(std::string&& value) {
  
  kemu_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetZyzdxList_3014.kemu)
}
inline void C_GetZyzdxList_3014::set_kemu(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  kemu_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetZyzdxList_3014.kemu)
}
inline void C_GetZyzdxList_3014::set_kemu(const char* value, size_t size) {
  
  kemu_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetZyzdxList_3014.kemu)
}
inline std::string* C_GetZyzdxList_3014::_internal_mutable_kemu() {
  
  return kemu_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetZyzdxList_3014::release_kemu() {
  // @@protoc_insertion_point(field_release:C_GetZyzdxList_3014.kemu)
  
  return kemu_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetZyzdxList_3014::set_allocated_kemu(std::string* kemu) {
  if (kemu != nullptr) {
    
  } else {
    
  }
  kemu_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), kemu);
  // @@protoc_insertion_point(field_set_allocated:C_GetZyzdxList_3014.kemu)
}

// int32 schoolIsAll = 7;
inline void C_GetZyzdxList_3014::clear_schoolisall() {
  schoolisall_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetZyzdxList_3014::_internal_schoolisall() const {
  return schoolisall_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetZyzdxList_3014::schoolisall() const {
  // @@protoc_insertion_point(field_get:C_GetZyzdxList_3014.schoolIsAll)
  return _internal_schoolisall();
}
inline void C_GetZyzdxList_3014::_internal_set_schoolisall(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  schoolisall_ = value;
}
inline void C_GetZyzdxList_3014::set_schoolisall(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_schoolisall(value);
  // @@protoc_insertion_point(field_set:C_GetZyzdxList_3014.schoolIsAll)
}

// int32 startScore = 8;
inline void C_GetZyzdxList_3014::clear_startscore() {
  startscore_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetZyzdxList_3014::_internal_startscore() const {
  return startscore_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetZyzdxList_3014::startscore() const {
  // @@protoc_insertion_point(field_get:C_GetZyzdxList_3014.startScore)
  return _internal_startscore();
}
inline void C_GetZyzdxList_3014::_internal_set_startscore(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  startscore_ = value;
}
inline void C_GetZyzdxList_3014::set_startscore(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_startscore(value);
  // @@protoc_insertion_point(field_set:C_GetZyzdxList_3014.startScore)
}

// int32 endScore = 9;
inline void C_GetZyzdxList_3014::clear_endscore() {
  endscore_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetZyzdxList_3014::_internal_endscore() const {
  return endscore_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetZyzdxList_3014::endscore() const {
  // @@protoc_insertion_point(field_get:C_GetZyzdxList_3014.endScore)
  return _internal_endscore();
}
inline void C_GetZyzdxList_3014::_internal_set_endscore(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  endscore_ = value;
}
inline void C_GetZyzdxList_3014::set_endscore(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_endscore(value);
  // @@protoc_insertion_point(field_set:C_GetZyzdxList_3014.endScore)
}

// int32 page = 10;
inline void C_GetZyzdxList_3014::clear_page() {
  page_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetZyzdxList_3014::_internal_page() const {
  return page_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetZyzdxList_3014::page() const {
  // @@protoc_insertion_point(field_get:C_GetZyzdxList_3014.page)
  return _internal_page();
}
inline void C_GetZyzdxList_3014::_internal_set_page(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  page_ = value;
}
inline void C_GetZyzdxList_3014::set_page(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:C_GetZyzdxList_3014.page)
}

// int32 limit = 12;
inline void C_GetZyzdxList_3014::clear_limit() {
  limit_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetZyzdxList_3014::_internal_limit() const {
  return limit_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 C_GetZyzdxList_3014::limit() const {
  // @@protoc_insertion_point(field_get:C_GetZyzdxList_3014.limit)
  return _internal_limit();
}
inline void C_GetZyzdxList_3014::_internal_set_limit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  limit_ = value;
}
inline void C_GetZyzdxList_3014::set_limit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_limit(value);
  // @@protoc_insertion_point(field_set:C_GetZyzdxList_3014.limit)
}

// string sortFile = 13;
inline void C_GetZyzdxList_3014::clear_sortfile() {
  sortfile_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& C_GetZyzdxList_3014::sortfile() const {
  // @@protoc_insertion_point(field_get:C_GetZyzdxList_3014.sortFile)
  return _internal_sortfile();
}
inline void C_GetZyzdxList_3014::set_sortfile(const std::string& value) {
  _internal_set_sortfile(value);
  // @@protoc_insertion_point(field_set:C_GetZyzdxList_3014.sortFile)
}
inline std::string* C_GetZyzdxList_3014::mutable_sortfile() {
  // @@protoc_insertion_point(field_mutable:C_GetZyzdxList_3014.sortFile)
  return _internal_mutable_sortfile();
}
inline const std::string& C_GetZyzdxList_3014::_internal_sortfile() const {
  return sortfile_.GetNoArena();
}
inline void C_GetZyzdxList_3014::_internal_set_sortfile(const std::string& value) {
  
  sortfile_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void C_GetZyzdxList_3014::set_sortfile(std::string&& value) {
  
  sortfile_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_GetZyzdxList_3014.sortFile)
}
inline void C_GetZyzdxList_3014::set_sortfile(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  sortfile_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_GetZyzdxList_3014.sortFile)
}
inline void C_GetZyzdxList_3014::set_sortfile(const char* value, size_t size) {
  
  sortfile_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_GetZyzdxList_3014.sortFile)
}
inline std::string* C_GetZyzdxList_3014::_internal_mutable_sortfile() {
  
  return sortfile_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* C_GetZyzdxList_3014::release_sortfile() {
  // @@protoc_insertion_point(field_release:C_GetZyzdxList_3014.sortFile)
  
  return sortfile_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void C_GetZyzdxList_3014::set_allocated_sortfile(std::string* sortfile) {
  if (sortfile != nullptr) {
    
  } else {
    
  }
  sortfile_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sortfile);
  // @@protoc_insertion_point(field_set_allocated:C_GetZyzdxList_3014.sortFile)
}

// -------------------------------------------------------------------

// S_GetZyzdxList_3015

// repeated .Zyzdx zyzdx = 1;
inline int S_GetZyzdxList_3015::_internal_zyzdx_size() const {
  return zyzdx_.size();
}
inline int S_GetZyzdxList_3015::zyzdx_size() const {
  return _internal_zyzdx_size();
}
inline void S_GetZyzdxList_3015::clear_zyzdx() {
  zyzdx_.Clear();
}
inline ::Zyzdx* S_GetZyzdxList_3015::mutable_zyzdx(int index) {
  // @@protoc_insertion_point(field_mutable:S_GetZyzdxList_3015.zyzdx)
  return zyzdx_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Zyzdx >*
S_GetZyzdxList_3015::mutable_zyzdx() {
  // @@protoc_insertion_point(field_mutable_list:S_GetZyzdxList_3015.zyzdx)
  return &zyzdx_;
}
inline const ::Zyzdx& S_GetZyzdxList_3015::_internal_zyzdx(int index) const {
  return zyzdx_.Get(index);
}
inline const ::Zyzdx& S_GetZyzdxList_3015::zyzdx(int index) const {
  // @@protoc_insertion_point(field_get:S_GetZyzdxList_3015.zyzdx)
  return _internal_zyzdx(index);
}
inline ::Zyzdx* S_GetZyzdxList_3015::_internal_add_zyzdx() {
  return zyzdx_.Add();
}
inline ::Zyzdx* S_GetZyzdxList_3015::add_zyzdx() {
  // @@protoc_insertion_point(field_add:S_GetZyzdxList_3015.zyzdx)
  return _internal_add_zyzdx();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Zyzdx >&
S_GetZyzdxList_3015::zyzdx() const {
  // @@protoc_insertion_point(field_list:S_GetZyzdxList_3015.zyzdx)
  return zyzdx_;
}

// .PagingInfo pagingInfo = 9;
inline bool S_GetZyzdxList_3015::_internal_has_paginginfo() const {
  return this != internal_default_instance() && paginginfo_ != nullptr;
}
inline bool S_GetZyzdxList_3015::has_paginginfo() const {
  return _internal_has_paginginfo();
}
inline void S_GetZyzdxList_3015::clear_paginginfo() {
  if (GetArenaNoVirtual() == nullptr && paginginfo_ != nullptr) {
    delete paginginfo_;
  }
  paginginfo_ = nullptr;
}
inline const ::PagingInfo& S_GetZyzdxList_3015::_internal_paginginfo() const {
  const ::PagingInfo* p = paginginfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::PagingInfo*>(
      &::_PagingInfo_default_instance_);
}
inline const ::PagingInfo& S_GetZyzdxList_3015::paginginfo() const {
  // @@protoc_insertion_point(field_get:S_GetZyzdxList_3015.pagingInfo)
  return _internal_paginginfo();
}
inline ::PagingInfo* S_GetZyzdxList_3015::release_paginginfo() {
  // @@protoc_insertion_point(field_release:S_GetZyzdxList_3015.pagingInfo)
  
  ::PagingInfo* temp = paginginfo_;
  paginginfo_ = nullptr;
  return temp;
}
inline ::PagingInfo* S_GetZyzdxList_3015::_internal_mutable_paginginfo() {
  
  if (paginginfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::PagingInfo>(GetArenaNoVirtual());
    paginginfo_ = p;
  }
  return paginginfo_;
}
inline ::PagingInfo* S_GetZyzdxList_3015::mutable_paginginfo() {
  // @@protoc_insertion_point(field_mutable:S_GetZyzdxList_3015.pagingInfo)
  return _internal_mutable_paginginfo();
}
inline void S_GetZyzdxList_3015::set_allocated_paginginfo(::PagingInfo* paginginfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete paginginfo_;
  }
  if (paginginfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      paginginfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, paginginfo, submessage_arena);
    }
    
  } else {
    
  }
  paginginfo_ = paginginfo;
  // @@protoc_insertion_point(field_set_allocated:S_GetZyzdxList_3015.pagingInfo)
}

// -------------------------------------------------------------------

// ZntjInfo

// fixed64 id = 1;
inline void ZntjInfo::clear_id() {
  id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ZntjInfo::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ZntjInfo::id() const {
  // @@protoc_insertion_point(field_get:ZntjInfo.id)
  return _internal_id();
}
inline void ZntjInfo::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  id_ = value;
}
inline void ZntjInfo::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:ZntjInfo.id)
}

// string logoPath = 2;
inline void ZntjInfo::clear_logopath() {
  logopath_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ZntjInfo::logopath() const {
  // @@protoc_insertion_point(field_get:ZntjInfo.logoPath)
  return _internal_logopath();
}
inline void ZntjInfo::set_logopath(const std::string& value) {
  _internal_set_logopath(value);
  // @@protoc_insertion_point(field_set:ZntjInfo.logoPath)
}
inline std::string* ZntjInfo::mutable_logopath() {
  // @@protoc_insertion_point(field_mutable:ZntjInfo.logoPath)
  return _internal_mutable_logopath();
}
inline const std::string& ZntjInfo::_internal_logopath() const {
  return logopath_.GetNoArena();
}
inline void ZntjInfo::_internal_set_logopath(const std::string& value) {
  
  logopath_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ZntjInfo::set_logopath(std::string&& value) {
  
  logopath_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZntjInfo.logoPath)
}
inline void ZntjInfo::set_logopath(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  logopath_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZntjInfo.logoPath)
}
inline void ZntjInfo::set_logopath(const char* value, size_t size) {
  
  logopath_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZntjInfo.logoPath)
}
inline std::string* ZntjInfo::_internal_mutable_logopath() {
  
  return logopath_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ZntjInfo::release_logopath() {
  // @@protoc_insertion_point(field_release:ZntjInfo.logoPath)
  
  return logopath_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ZntjInfo::set_allocated_logopath(std::string* logopath) {
  if (logopath != nullptr) {
    
  } else {
    
  }
  logopath_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), logopath);
  // @@protoc_insertion_point(field_set_allocated:ZntjInfo.logoPath)
}

// string name = 3;
inline void ZntjInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ZntjInfo::name() const {
  // @@protoc_insertion_point(field_get:ZntjInfo.name)
  return _internal_name();
}
inline void ZntjInfo::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:ZntjInfo.name)
}
inline std::string* ZntjInfo::mutable_name() {
  // @@protoc_insertion_point(field_mutable:ZntjInfo.name)
  return _internal_mutable_name();
}
inline const std::string& ZntjInfo::_internal_name() const {
  return name_.GetNoArena();
}
inline void ZntjInfo::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ZntjInfo::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZntjInfo.name)
}
inline void ZntjInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZntjInfo.name)
}
inline void ZntjInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZntjInfo.name)
}
inline std::string* ZntjInfo::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ZntjInfo::release_name() {
  // @@protoc_insertion_point(field_release:ZntjInfo.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ZntjInfo::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ZntjInfo.name)
}

// string lqgl = 4;
inline void ZntjInfo::clear_lqgl() {
  lqgl_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ZntjInfo::lqgl() const {
  // @@protoc_insertion_point(field_get:ZntjInfo.lqgl)
  return _internal_lqgl();
}
inline void ZntjInfo::set_lqgl(const std::string& value) {
  _internal_set_lqgl(value);
  // @@protoc_insertion_point(field_set:ZntjInfo.lqgl)
}
inline std::string* ZntjInfo::mutable_lqgl() {
  // @@protoc_insertion_point(field_mutable:ZntjInfo.lqgl)
  return _internal_mutable_lqgl();
}
inline const std::string& ZntjInfo::_internal_lqgl() const {
  return lqgl_.GetNoArena();
}
inline void ZntjInfo::_internal_set_lqgl(const std::string& value) {
  
  lqgl_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ZntjInfo::set_lqgl(std::string&& value) {
  
  lqgl_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZntjInfo.lqgl)
}
inline void ZntjInfo::set_lqgl(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  lqgl_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZntjInfo.lqgl)
}
inline void ZntjInfo::set_lqgl(const char* value, size_t size) {
  
  lqgl_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZntjInfo.lqgl)
}
inline std::string* ZntjInfo::_internal_mutable_lqgl() {
  
  return lqgl_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ZntjInfo::release_lqgl() {
  // @@protoc_insertion_point(field_release:ZntjInfo.lqgl)
  
  return lqgl_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ZntjInfo::set_allocated_lqgl(std::string* lqgl) {
  if (lqgl != nullptr) {
    
  } else {
    
  }
  lqgl_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), lqgl);
  // @@protoc_insertion_point(field_set_allocated:ZntjInfo.lqgl)
}

// string lqpc = 5;
inline void ZntjInfo::clear_lqpc() {
  lqpc_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ZntjInfo::lqpc() const {
  // @@protoc_insertion_point(field_get:ZntjInfo.lqpc)
  return _internal_lqpc();
}
inline void ZntjInfo::set_lqpc(const std::string& value) {
  _internal_set_lqpc(value);
  // @@protoc_insertion_point(field_set:ZntjInfo.lqpc)
}
inline std::string* ZntjInfo::mutable_lqpc() {
  // @@protoc_insertion_point(field_mutable:ZntjInfo.lqpc)
  return _internal_mutable_lqpc();
}
inline const std::string& ZntjInfo::_internal_lqpc() const {
  return lqpc_.GetNoArena();
}
inline void ZntjInfo::_internal_set_lqpc(const std::string& value) {
  
  lqpc_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ZntjInfo::set_lqpc(std::string&& value) {
  
  lqpc_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZntjInfo.lqpc)
}
inline void ZntjInfo::set_lqpc(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  lqpc_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZntjInfo.lqpc)
}
inline void ZntjInfo::set_lqpc(const char* value, size_t size) {
  
  lqpc_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZntjInfo.lqpc)
}
inline std::string* ZntjInfo::_internal_mutable_lqpc() {
  
  return lqpc_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ZntjInfo::release_lqpc() {
  // @@protoc_insertion_point(field_release:ZntjInfo.lqpc)
  
  return lqpc_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ZntjInfo::set_allocated_lqpc(std::string* lqpc) {
  if (lqpc != nullptr) {
    
  } else {
    
  }
  lqpc_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), lqpc);
  // @@protoc_insertion_point(field_set_allocated:ZntjInfo.lqpc)
}

// string tdx = 6;
inline void ZntjInfo::clear_tdx() {
  tdx_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ZntjInfo::tdx() const {
  // @@protoc_insertion_point(field_get:ZntjInfo.tdx)
  return _internal_tdx();
}
inline void ZntjInfo::set_tdx(const std::string& value) {
  _internal_set_tdx(value);
  // @@protoc_insertion_point(field_set:ZntjInfo.tdx)
}
inline std::string* ZntjInfo::mutable_tdx() {
  // @@protoc_insertion_point(field_mutable:ZntjInfo.tdx)
  return _internal_mutable_tdx();
}
inline const std::string& ZntjInfo::_internal_tdx() const {
  return tdx_.GetNoArena();
}
inline void ZntjInfo::_internal_set_tdx(const std::string& value) {
  
  tdx_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ZntjInfo::set_tdx(std::string&& value) {
  
  tdx_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZntjInfo.tdx)
}
inline void ZntjInfo::set_tdx(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  tdx_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZntjInfo.tdx)
}
inline void ZntjInfo::set_tdx(const char* value, size_t size) {
  
  tdx_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZntjInfo.tdx)
}
inline std::string* ZntjInfo::_internal_mutable_tdx() {
  
  return tdx_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ZntjInfo::release_tdx() {
  // @@protoc_insertion_point(field_release:ZntjInfo.tdx)
  
  return tdx_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ZntjInfo::set_allocated_tdx(std::string* tdx) {
  if (tdx != nullptr) {
    
  } else {
    
  }
  tdx_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tdx);
  // @@protoc_insertion_point(field_set_allocated:ZntjInfo.tdx)
}

// string rmzy = 7;
inline void ZntjInfo::clear_rmzy() {
  rmzy_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ZntjInfo::rmzy() const {
  // @@protoc_insertion_point(field_get:ZntjInfo.rmzy)
  return _internal_rmzy();
}
inline void ZntjInfo::set_rmzy(const std::string& value) {
  _internal_set_rmzy(value);
  // @@protoc_insertion_point(field_set:ZntjInfo.rmzy)
}
inline std::string* ZntjInfo::mutable_rmzy() {
  // @@protoc_insertion_point(field_mutable:ZntjInfo.rmzy)
  return _internal_mutable_rmzy();
}
inline const std::string& ZntjInfo::_internal_rmzy() const {
  return rmzy_.GetNoArena();
}
inline void ZntjInfo::_internal_set_rmzy(const std::string& value) {
  
  rmzy_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ZntjInfo::set_rmzy(std::string&& value) {
  
  rmzy_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZntjInfo.rmzy)
}
inline void ZntjInfo::set_rmzy(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  rmzy_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZntjInfo.rmzy)
}
inline void ZntjInfo::set_rmzy(const char* value, size_t size) {
  
  rmzy_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZntjInfo.rmzy)
}
inline std::string* ZntjInfo::_internal_mutable_rmzy() {
  
  return rmzy_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ZntjInfo::release_rmzy() {
  // @@protoc_insertion_point(field_release:ZntjInfo.rmzy)
  
  return rmzy_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ZntjInfo::set_allocated_rmzy(std::string* rmzy) {
  if (rmzy != nullptr) {
    
  } else {
    
  }
  rmzy_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), rmzy);
  // @@protoc_insertion_point(field_set_allocated:ZntjInfo.rmzy)
}

// string xxpm = 8;
inline void ZntjInfo::clear_xxpm() {
  xxpm_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ZntjInfo::xxpm() const {
  // @@protoc_insertion_point(field_get:ZntjInfo.xxpm)
  return _internal_xxpm();
}
inline void ZntjInfo::set_xxpm(const std::string& value) {
  _internal_set_xxpm(value);
  // @@protoc_insertion_point(field_set:ZntjInfo.xxpm)
}
inline std::string* ZntjInfo::mutable_xxpm() {
  // @@protoc_insertion_point(field_mutable:ZntjInfo.xxpm)
  return _internal_mutable_xxpm();
}
inline const std::string& ZntjInfo::_internal_xxpm() const {
  return xxpm_.GetNoArena();
}
inline void ZntjInfo::_internal_set_xxpm(const std::string& value) {
  
  xxpm_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ZntjInfo::set_xxpm(std::string&& value) {
  
  xxpm_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZntjInfo.xxpm)
}
inline void ZntjInfo::set_xxpm(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  xxpm_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZntjInfo.xxpm)
}
inline void ZntjInfo::set_xxpm(const char* value, size_t size) {
  
  xxpm_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZntjInfo.xxpm)
}
inline std::string* ZntjInfo::_internal_mutable_xxpm() {
  
  return xxpm_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ZntjInfo::release_xxpm() {
  // @@protoc_insertion_point(field_release:ZntjInfo.xxpm)
  
  return xxpm_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ZntjInfo::set_allocated_xxpm(std::string* xxpm) {
  if (xxpm != nullptr) {
    
  } else {
    
  }
  xxpm_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), xxpm);
  // @@protoc_insertion_point(field_set_allocated:ZntjInfo.xxpm)
}

// string type = 9;
inline void ZntjInfo::clear_type() {
  type_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ZntjInfo::type() const {
  // @@protoc_insertion_point(field_get:ZntjInfo.type)
  return _internal_type();
}
inline void ZntjInfo::set_type(const std::string& value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:ZntjInfo.type)
}
inline std::string* ZntjInfo::mutable_type() {
  // @@protoc_insertion_point(field_mutable:ZntjInfo.type)
  return _internal_mutable_type();
}
inline const std::string& ZntjInfo::_internal_type() const {
  return type_.GetNoArena();
}
inline void ZntjInfo::_internal_set_type(const std::string& value) {
  
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ZntjInfo::set_type(std::string&& value) {
  
  type_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZntjInfo.type)
}
inline void ZntjInfo::set_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZntjInfo.type)
}
inline void ZntjInfo::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZntjInfo.type)
}
inline std::string* ZntjInfo::_internal_mutable_type() {
  
  return type_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ZntjInfo::release_type() {
  // @@protoc_insertion_point(field_release:ZntjInfo.type)
  
  return type_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ZntjInfo::set_allocated_type(std::string* type) {
  if (type != nullptr) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:ZntjInfo.type)
}

// string level = 10;
inline void ZntjInfo::clear_level() {
  level_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ZntjInfo::level() const {
  // @@protoc_insertion_point(field_get:ZntjInfo.level)
  return _internal_level();
}
inline void ZntjInfo::set_level(const std::string& value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:ZntjInfo.level)
}
inline std::string* ZntjInfo::mutable_level() {
  // @@protoc_insertion_point(field_mutable:ZntjInfo.level)
  return _internal_mutable_level();
}
inline const std::string& ZntjInfo::_internal_level() const {
  return level_.GetNoArena();
}
inline void ZntjInfo::_internal_set_level(const std::string& value) {
  
  level_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ZntjInfo::set_level(std::string&& value) {
  
  level_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZntjInfo.level)
}
inline void ZntjInfo::set_level(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  level_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZntjInfo.level)
}
inline void ZntjInfo::set_level(const char* value, size_t size) {
  
  level_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZntjInfo.level)
}
inline std::string* ZntjInfo::_internal_mutable_level() {
  
  return level_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ZntjInfo::release_level() {
  // @@protoc_insertion_point(field_release:ZntjInfo.level)
  
  return level_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ZntjInfo::set_allocated_level(std::string* level) {
  if (level != nullptr) {
    
  } else {
    
  }
  level_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), level);
  // @@protoc_insertion_point(field_set_allocated:ZntjInfo.level)
}

// -------------------------------------------------------------------

// PagingInfo

// fixed64 rowcount = 1;
inline void PagingInfo::clear_rowcount() {
  rowcount_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PagingInfo::_internal_rowcount() const {
  return rowcount_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PagingInfo::rowcount() const {
  // @@protoc_insertion_point(field_get:PagingInfo.rowcount)
  return _internal_rowcount();
}
inline void PagingInfo::_internal_set_rowcount(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  rowcount_ = value;
}
inline void PagingInfo::set_rowcount(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_rowcount(value);
  // @@protoc_insertion_point(field_set:PagingInfo.rowcount)
}

// fixed64 pageCount = 2;
inline void PagingInfo::clear_pagecount() {
  pagecount_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PagingInfo::_internal_pagecount() const {
  return pagecount_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PagingInfo::pagecount() const {
  // @@protoc_insertion_point(field_get:PagingInfo.pageCount)
  return _internal_pagecount();
}
inline void PagingInfo::_internal_set_pagecount(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  pagecount_ = value;
}
inline void PagingInfo::set_pagecount(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_pagecount(value);
  // @@protoc_insertion_point(field_set:PagingInfo.pageCount)
}

// fixed64 pageNo = 3;
inline void PagingInfo::clear_pageno() {
  pageno_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PagingInfo::_internal_pageno() const {
  return pageno_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PagingInfo::pageno() const {
  // @@protoc_insertion_point(field_get:PagingInfo.pageNo)
  return _internal_pageno();
}
inline void PagingInfo::_internal_set_pageno(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  pageno_ = value;
}
inline void PagingInfo::set_pageno(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_pageno(value);
  // @@protoc_insertion_point(field_set:PagingInfo.pageNo)
}

// fixed64 pageSize = 4;
inline void PagingInfo::clear_pagesize() {
  pagesize_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PagingInfo::_internal_pagesize() const {
  return pagesize_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PagingInfo::pagesize() const {
  // @@protoc_insertion_point(field_get:PagingInfo.pageSize)
  return _internal_pagesize();
}
inline void PagingInfo::_internal_set_pagesize(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  pagesize_ = value;
}
inline void PagingInfo::set_pagesize(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_pagesize(value);
  // @@protoc_insertion_point(field_set:PagingInfo.pageSize)
}

// fixed64 startLimt = 5;
inline void PagingInfo::clear_startlimt() {
  startlimt_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PagingInfo::_internal_startlimt() const {
  return startlimt_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PagingInfo::startlimt() const {
  // @@protoc_insertion_point(field_get:PagingInfo.startLimt)
  return _internal_startlimt();
}
inline void PagingInfo::_internal_set_startlimt(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  startlimt_ = value;
}
inline void PagingInfo::set_startlimt(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_startlimt(value);
  // @@protoc_insertion_point(field_set:PagingInfo.startLimt)
}

// -------------------------------------------------------------------

// SeachSchool

// fixed64 id = 1;
inline void SeachSchool::clear_id() {
  id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SeachSchool::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SeachSchool::id() const {
  // @@protoc_insertion_point(field_get:SeachSchool.id)
  return _internal_id();
}
inline void SeachSchool::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  id_ = value;
}
inline void SeachSchool::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:SeachSchool.id)
}

// string name = 2;
inline void SeachSchool::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SeachSchool::name() const {
  // @@protoc_insertion_point(field_get:SeachSchool.name)
  return _internal_name();
}
inline void SeachSchool::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:SeachSchool.name)
}
inline std::string* SeachSchool::mutable_name() {
  // @@protoc_insertion_point(field_mutable:SeachSchool.name)
  return _internal_mutable_name();
}
inline const std::string& SeachSchool::_internal_name() const {
  return name_.GetNoArena();
}
inline void SeachSchool::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SeachSchool::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SeachSchool.name)
}
inline void SeachSchool::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SeachSchool.name)
}
inline void SeachSchool::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SeachSchool.name)
}
inline std::string* SeachSchool::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SeachSchool::release_name() {
  // @@protoc_insertion_point(field_release:SeachSchool.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SeachSchool::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:SeachSchool.name)
}

// string logoPath = 3;
inline void SeachSchool::clear_logopath() {
  logopath_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SeachSchool::logopath() const {
  // @@protoc_insertion_point(field_get:SeachSchool.logoPath)
  return _internal_logopath();
}
inline void SeachSchool::set_logopath(const std::string& value) {
  _internal_set_logopath(value);
  // @@protoc_insertion_point(field_set:SeachSchool.logoPath)
}
inline std::string* SeachSchool::mutable_logopath() {
  // @@protoc_insertion_point(field_mutable:SeachSchool.logoPath)
  return _internal_mutable_logopath();
}
inline const std::string& SeachSchool::_internal_logopath() const {
  return logopath_.GetNoArena();
}
inline void SeachSchool::_internal_set_logopath(const std::string& value) {
  
  logopath_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SeachSchool::set_logopath(std::string&& value) {
  
  logopath_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SeachSchool.logoPath)
}
inline void SeachSchool::set_logopath(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  logopath_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SeachSchool.logoPath)
}
inline void SeachSchool::set_logopath(const char* value, size_t size) {
  
  logopath_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SeachSchool.logoPath)
}
inline std::string* SeachSchool::_internal_mutable_logopath() {
  
  return logopath_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SeachSchool::release_logopath() {
  // @@protoc_insertion_point(field_release:SeachSchool.logoPath)
  
  return logopath_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SeachSchool::set_allocated_logopath(std::string* logopath) {
  if (logopath != nullptr) {
    
  } else {
    
  }
  logopath_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), logopath);
  // @@protoc_insertion_point(field_set_allocated:SeachSchool.logoPath)
}

// string lqgl = 4;
inline void SeachSchool::clear_lqgl() {
  lqgl_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SeachSchool::lqgl() const {
  // @@protoc_insertion_point(field_get:SeachSchool.lqgl)
  return _internal_lqgl();
}
inline void SeachSchool::set_lqgl(const std::string& value) {
  _internal_set_lqgl(value);
  // @@protoc_insertion_point(field_set:SeachSchool.lqgl)
}
inline std::string* SeachSchool::mutable_lqgl() {
  // @@protoc_insertion_point(field_mutable:SeachSchool.lqgl)
  return _internal_mutable_lqgl();
}
inline const std::string& SeachSchool::_internal_lqgl() const {
  return lqgl_.GetNoArena();
}
inline void SeachSchool::_internal_set_lqgl(const std::string& value) {
  
  lqgl_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SeachSchool::set_lqgl(std::string&& value) {
  
  lqgl_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SeachSchool.lqgl)
}
inline void SeachSchool::set_lqgl(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  lqgl_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SeachSchool.lqgl)
}
inline void SeachSchool::set_lqgl(const char* value, size_t size) {
  
  lqgl_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SeachSchool.lqgl)
}
inline std::string* SeachSchool::_internal_mutable_lqgl() {
  
  return lqgl_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SeachSchool::release_lqgl() {
  // @@protoc_insertion_point(field_release:SeachSchool.lqgl)
  
  return lqgl_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SeachSchool::set_allocated_lqgl(std::string* lqgl) {
  if (lqgl != nullptr) {
    
  } else {
    
  }
  lqgl_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), lqgl);
  // @@protoc_insertion_point(field_set_allocated:SeachSchool.lqgl)
}

// string lqpc = 5;
inline void SeachSchool::clear_lqpc() {
  lqpc_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SeachSchool::lqpc() const {
  // @@protoc_insertion_point(field_get:SeachSchool.lqpc)
  return _internal_lqpc();
}
inline void SeachSchool::set_lqpc(const std::string& value) {
  _internal_set_lqpc(value);
  // @@protoc_insertion_point(field_set:SeachSchool.lqpc)
}
inline std::string* SeachSchool::mutable_lqpc() {
  // @@protoc_insertion_point(field_mutable:SeachSchool.lqpc)
  return _internal_mutable_lqpc();
}
inline const std::string& SeachSchool::_internal_lqpc() const {
  return lqpc_.GetNoArena();
}
inline void SeachSchool::_internal_set_lqpc(const std::string& value) {
  
  lqpc_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SeachSchool::set_lqpc(std::string&& value) {
  
  lqpc_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SeachSchool.lqpc)
}
inline void SeachSchool::set_lqpc(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  lqpc_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SeachSchool.lqpc)
}
inline void SeachSchool::set_lqpc(const char* value, size_t size) {
  
  lqpc_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SeachSchool.lqpc)
}
inline std::string* SeachSchool::_internal_mutable_lqpc() {
  
  return lqpc_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SeachSchool::release_lqpc() {
  // @@protoc_insertion_point(field_release:SeachSchool.lqpc)
  
  return lqpc_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SeachSchool::set_allocated_lqpc(std::string* lqpc) {
  if (lqpc != nullptr) {
    
  } else {
    
  }
  lqpc_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), lqpc);
  // @@protoc_insertion_point(field_set_allocated:SeachSchool.lqpc)
}

// string tdx = 6;
inline void SeachSchool::clear_tdx() {
  tdx_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SeachSchool::tdx() const {
  // @@protoc_insertion_point(field_get:SeachSchool.tdx)
  return _internal_tdx();
}
inline void SeachSchool::set_tdx(const std::string& value) {
  _internal_set_tdx(value);
  // @@protoc_insertion_point(field_set:SeachSchool.tdx)
}
inline std::string* SeachSchool::mutable_tdx() {
  // @@protoc_insertion_point(field_mutable:SeachSchool.tdx)
  return _internal_mutable_tdx();
}
inline const std::string& SeachSchool::_internal_tdx() const {
  return tdx_.GetNoArena();
}
inline void SeachSchool::_internal_set_tdx(const std::string& value) {
  
  tdx_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SeachSchool::set_tdx(std::string&& value) {
  
  tdx_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SeachSchool.tdx)
}
inline void SeachSchool::set_tdx(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  tdx_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SeachSchool.tdx)
}
inline void SeachSchool::set_tdx(const char* value, size_t size) {
  
  tdx_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SeachSchool.tdx)
}
inline std::string* SeachSchool::_internal_mutable_tdx() {
  
  return tdx_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SeachSchool::release_tdx() {
  // @@protoc_insertion_point(field_release:SeachSchool.tdx)
  
  return tdx_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SeachSchool::set_allocated_tdx(std::string* tdx) {
  if (tdx != nullptr) {
    
  } else {
    
  }
  tdx_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tdx);
  // @@protoc_insertion_point(field_set_allocated:SeachSchool.tdx)
}

// string rmzy = 7;
inline void SeachSchool::clear_rmzy() {
  rmzy_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SeachSchool::rmzy() const {
  // @@protoc_insertion_point(field_get:SeachSchool.rmzy)
  return _internal_rmzy();
}
inline void SeachSchool::set_rmzy(const std::string& value) {
  _internal_set_rmzy(value);
  // @@protoc_insertion_point(field_set:SeachSchool.rmzy)
}
inline std::string* SeachSchool::mutable_rmzy() {
  // @@protoc_insertion_point(field_mutable:SeachSchool.rmzy)
  return _internal_mutable_rmzy();
}
inline const std::string& SeachSchool::_internal_rmzy() const {
  return rmzy_.GetNoArena();
}
inline void SeachSchool::_internal_set_rmzy(const std::string& value) {
  
  rmzy_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SeachSchool::set_rmzy(std::string&& value) {
  
  rmzy_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SeachSchool.rmzy)
}
inline void SeachSchool::set_rmzy(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  rmzy_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SeachSchool.rmzy)
}
inline void SeachSchool::set_rmzy(const char* value, size_t size) {
  
  rmzy_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SeachSchool.rmzy)
}
inline std::string* SeachSchool::_internal_mutable_rmzy() {
  
  return rmzy_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SeachSchool::release_rmzy() {
  // @@protoc_insertion_point(field_release:SeachSchool.rmzy)
  
  return rmzy_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SeachSchool::set_allocated_rmzy(std::string* rmzy) {
  if (rmzy != nullptr) {
    
  } else {
    
  }
  rmzy_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), rmzy);
  // @@protoc_insertion_point(field_set_allocated:SeachSchool.rmzy)
}

// string type = 8;
inline void SeachSchool::clear_type() {
  type_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SeachSchool::type() const {
  // @@protoc_insertion_point(field_get:SeachSchool.type)
  return _internal_type();
}
inline void SeachSchool::set_type(const std::string& value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:SeachSchool.type)
}
inline std::string* SeachSchool::mutable_type() {
  // @@protoc_insertion_point(field_mutable:SeachSchool.type)
  return _internal_mutable_type();
}
inline const std::string& SeachSchool::_internal_type() const {
  return type_.GetNoArena();
}
inline void SeachSchool::_internal_set_type(const std::string& value) {
  
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SeachSchool::set_type(std::string&& value) {
  
  type_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SeachSchool.type)
}
inline void SeachSchool::set_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SeachSchool.type)
}
inline void SeachSchool::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SeachSchool.type)
}
inline std::string* SeachSchool::_internal_mutable_type() {
  
  return type_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SeachSchool::release_type() {
  // @@protoc_insertion_point(field_release:SeachSchool.type)
  
  return type_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SeachSchool::set_allocated_type(std::string* type) {
  if (type != nullptr) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:SeachSchool.type)
}

// string level = 9;
inline void SeachSchool::clear_level() {
  level_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SeachSchool::level() const {
  // @@protoc_insertion_point(field_get:SeachSchool.level)
  return _internal_level();
}
inline void SeachSchool::set_level(const std::string& value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:SeachSchool.level)
}
inline std::string* SeachSchool::mutable_level() {
  // @@protoc_insertion_point(field_mutable:SeachSchool.level)
  return _internal_mutable_level();
}
inline const std::string& SeachSchool::_internal_level() const {
  return level_.GetNoArena();
}
inline void SeachSchool::_internal_set_level(const std::string& value) {
  
  level_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SeachSchool::set_level(std::string&& value) {
  
  level_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SeachSchool.level)
}
inline void SeachSchool::set_level(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  level_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SeachSchool.level)
}
inline void SeachSchool::set_level(const char* value, size_t size) {
  
  level_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SeachSchool.level)
}
inline std::string* SeachSchool::_internal_mutable_level() {
  
  return level_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SeachSchool::release_level() {
  // @@protoc_insertion_point(field_release:SeachSchool.level)
  
  return level_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SeachSchool::set_allocated_level(std::string* level) {
  if (level != nullptr) {
    
  } else {
    
  }
  level_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), level);
  // @@protoc_insertion_point(field_set_allocated:SeachSchool.level)
}

// -------------------------------------------------------------------

// SeachScore

// fixed64 id = 1;
inline void SeachScore::clear_id() {
  id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SeachScore::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SeachScore::id() const {
  // @@protoc_insertion_point(field_get:SeachScore.id)
  return _internal_id();
}
inline void SeachScore::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  id_ = value;
}
inline void SeachScore::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:SeachScore.id)
}

// string name = 2;
inline void SeachScore::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SeachScore::name() const {
  // @@protoc_insertion_point(field_get:SeachScore.name)
  return _internal_name();
}
inline void SeachScore::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:SeachScore.name)
}
inline std::string* SeachScore::mutable_name() {
  // @@protoc_insertion_point(field_mutable:SeachScore.name)
  return _internal_mutable_name();
}
inline const std::string& SeachScore::_internal_name() const {
  return name_.GetNoArena();
}
inline void SeachScore::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SeachScore::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SeachScore.name)
}
inline void SeachScore::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SeachScore.name)
}
inline void SeachScore::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SeachScore.name)
}
inline std::string* SeachScore::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SeachScore::release_name() {
  // @@protoc_insertion_point(field_release:SeachScore.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SeachScore::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:SeachScore.name)
}

// string logoPath = 3;
inline void SeachScore::clear_logopath() {
  logopath_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SeachScore::logopath() const {
  // @@protoc_insertion_point(field_get:SeachScore.logoPath)
  return _internal_logopath();
}
inline void SeachScore::set_logopath(const std::string& value) {
  _internal_set_logopath(value);
  // @@protoc_insertion_point(field_set:SeachScore.logoPath)
}
inline std::string* SeachScore::mutable_logopath() {
  // @@protoc_insertion_point(field_mutable:SeachScore.logoPath)
  return _internal_mutable_logopath();
}
inline const std::string& SeachScore::_internal_logopath() const {
  return logopath_.GetNoArena();
}
inline void SeachScore::_internal_set_logopath(const std::string& value) {
  
  logopath_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SeachScore::set_logopath(std::string&& value) {
  
  logopath_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SeachScore.logoPath)
}
inline void SeachScore::set_logopath(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  logopath_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SeachScore.logoPath)
}
inline void SeachScore::set_logopath(const char* value, size_t size) {
  
  logopath_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SeachScore.logoPath)
}
inline std::string* SeachScore::_internal_mutable_logopath() {
  
  return logopath_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SeachScore::release_logopath() {
  // @@protoc_insertion_point(field_release:SeachScore.logoPath)
  
  return logopath_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SeachScore::set_allocated_logopath(std::string* logopath) {
  if (logopath != nullptr) {
    
  } else {
    
  }
  logopath_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), logopath);
  // @@protoc_insertion_point(field_set_allocated:SeachScore.logoPath)
}

// string type = 4;
inline void SeachScore::clear_type() {
  type_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SeachScore::type() const {
  // @@protoc_insertion_point(field_get:SeachScore.type)
  return _internal_type();
}
inline void SeachScore::set_type(const std::string& value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:SeachScore.type)
}
inline std::string* SeachScore::mutable_type() {
  // @@protoc_insertion_point(field_mutable:SeachScore.type)
  return _internal_mutable_type();
}
inline const std::string& SeachScore::_internal_type() const {
  return type_.GetNoArena();
}
inline void SeachScore::_internal_set_type(const std::string& value) {
  
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SeachScore::set_type(std::string&& value) {
  
  type_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SeachScore.type)
}
inline void SeachScore::set_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SeachScore.type)
}
inline void SeachScore::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SeachScore.type)
}
inline std::string* SeachScore::_internal_mutable_type() {
  
  return type_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SeachScore::release_type() {
  // @@protoc_insertion_point(field_release:SeachScore.type)
  
  return type_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SeachScore::set_allocated_type(std::string* type) {
  if (type != nullptr) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:SeachScore.type)
}

// string level = 5;
inline void SeachScore::clear_level() {
  level_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SeachScore::level() const {
  // @@protoc_insertion_point(field_get:SeachScore.level)
  return _internal_level();
}
inline void SeachScore::set_level(const std::string& value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:SeachScore.level)
}
inline std::string* SeachScore::mutable_level() {
  // @@protoc_insertion_point(field_mutable:SeachScore.level)
  return _internal_mutable_level();
}
inline const std::string& SeachScore::_internal_level() const {
  return level_.GetNoArena();
}
inline void SeachScore::_internal_set_level(const std::string& value) {
  
  level_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SeachScore::set_level(std::string&& value) {
  
  level_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SeachScore.level)
}
inline void SeachScore::set_level(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  level_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SeachScore.level)
}
inline void SeachScore::set_level(const char* value, size_t size) {
  
  level_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SeachScore.level)
}
inline std::string* SeachScore::_internal_mutable_level() {
  
  return level_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SeachScore::release_level() {
  // @@protoc_insertion_point(field_release:SeachScore.level)
  
  return level_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SeachScore::set_allocated_level(std::string* level) {
  if (level != nullptr) {
    
  } else {
    
  }
  level_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), level);
  // @@protoc_insertion_point(field_set_allocated:SeachScore.level)
}

// string stFsx1 = 6;
inline void SeachScore::clear_stfsx1() {
  stfsx1_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SeachScore::stfsx1() const {
  // @@protoc_insertion_point(field_get:SeachScore.stFsx1)
  return _internal_stfsx1();
}
inline void SeachScore::set_stfsx1(const std::string& value) {
  _internal_set_stfsx1(value);
  // @@protoc_insertion_point(field_set:SeachScore.stFsx1)
}
inline std::string* SeachScore::mutable_stfsx1() {
  // @@protoc_insertion_point(field_mutable:SeachScore.stFsx1)
  return _internal_mutable_stfsx1();
}
inline const std::string& SeachScore::_internal_stfsx1() const {
  return stfsx1_.GetNoArena();
}
inline void SeachScore::_internal_set_stfsx1(const std::string& value) {
  
  stfsx1_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SeachScore::set_stfsx1(std::string&& value) {
  
  stfsx1_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SeachScore.stFsx1)
}
inline void SeachScore::set_stfsx1(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  stfsx1_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SeachScore.stFsx1)
}
inline void SeachScore::set_stfsx1(const char* value, size_t size) {
  
  stfsx1_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SeachScore.stFsx1)
}
inline std::string* SeachScore::_internal_mutable_stfsx1() {
  
  return stfsx1_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SeachScore::release_stfsx1() {
  // @@protoc_insertion_point(field_release:SeachScore.stFsx1)
  
  return stfsx1_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SeachScore::set_allocated_stfsx1(std::string* stfsx1) {
  if (stfsx1 != nullptr) {
    
  } else {
    
  }
  stfsx1_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), stfsx1);
  // @@protoc_insertion_point(field_set_allocated:SeachScore.stFsx1)
}

// string ndFsx2 = 7;
inline void SeachScore::clear_ndfsx2() {
  ndfsx2_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SeachScore::ndfsx2() const {
  // @@protoc_insertion_point(field_get:SeachScore.ndFsx2)
  return _internal_ndfsx2();
}
inline void SeachScore::set_ndfsx2(const std::string& value) {
  _internal_set_ndfsx2(value);
  // @@protoc_insertion_point(field_set:SeachScore.ndFsx2)
}
inline std::string* SeachScore::mutable_ndfsx2() {
  // @@protoc_insertion_point(field_mutable:SeachScore.ndFsx2)
  return _internal_mutable_ndfsx2();
}
inline const std::string& SeachScore::_internal_ndfsx2() const {
  return ndfsx2_.GetNoArena();
}
inline void SeachScore::_internal_set_ndfsx2(const std::string& value) {
  
  ndfsx2_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SeachScore::set_ndfsx2(std::string&& value) {
  
  ndfsx2_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SeachScore.ndFsx2)
}
inline void SeachScore::set_ndfsx2(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  ndfsx2_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SeachScore.ndFsx2)
}
inline void SeachScore::set_ndfsx2(const char* value, size_t size) {
  
  ndfsx2_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SeachScore.ndFsx2)
}
inline std::string* SeachScore::_internal_mutable_ndfsx2() {
  
  return ndfsx2_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SeachScore::release_ndfsx2() {
  // @@protoc_insertion_point(field_release:SeachScore.ndFsx2)
  
  return ndfsx2_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SeachScore::set_allocated_ndfsx2(std::string* ndfsx2) {
  if (ndfsx2 != nullptr) {
    
  } else {
    
  }
  ndfsx2_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ndfsx2);
  // @@protoc_insertion_point(field_set_allocated:SeachScore.ndFsx2)
}

// string rdFsx3 = 8;
inline void SeachScore::clear_rdfsx3() {
  rdfsx3_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SeachScore::rdfsx3() const {
  // @@protoc_insertion_point(field_get:SeachScore.rdFsx3)
  return _internal_rdfsx3();
}
inline void SeachScore::set_rdfsx3(const std::string& value) {
  _internal_set_rdfsx3(value);
  // @@protoc_insertion_point(field_set:SeachScore.rdFsx3)
}
inline std::string* SeachScore::mutable_rdfsx3() {
  // @@protoc_insertion_point(field_mutable:SeachScore.rdFsx3)
  return _internal_mutable_rdfsx3();
}
inline const std::string& SeachScore::_internal_rdfsx3() const {
  return rdfsx3_.GetNoArena();
}
inline void SeachScore::_internal_set_rdfsx3(const std::string& value) {
  
  rdfsx3_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SeachScore::set_rdfsx3(std::string&& value) {
  
  rdfsx3_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SeachScore.rdFsx3)
}
inline void SeachScore::set_rdfsx3(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  rdfsx3_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SeachScore.rdFsx3)
}
inline void SeachScore::set_rdfsx3(const char* value, size_t size) {
  
  rdfsx3_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SeachScore.rdFsx3)
}
inline std::string* SeachScore::_internal_mutable_rdfsx3() {
  
  return rdfsx3_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SeachScore::release_rdfsx3() {
  // @@protoc_insertion_point(field_release:SeachScore.rdFsx3)
  
  return rdfsx3_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SeachScore::set_allocated_rdfsx3(std::string* rdfsx3) {
  if (rdfsx3 != nullptr) {
    
  } else {
    
  }
  rdfsx3_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), rdfsx3);
  // @@protoc_insertion_point(field_set_allocated:SeachScore.rdFsx3)
}

// -------------------------------------------------------------------

// SeachSKYX

// string lqyears = 1;
inline void SeachSKYX::clear_lqyears() {
  lqyears_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SeachSKYX::lqyears() const {
  // @@protoc_insertion_point(field_get:SeachSKYX.lqyears)
  return _internal_lqyears();
}
inline void SeachSKYX::set_lqyears(const std::string& value) {
  _internal_set_lqyears(value);
  // @@protoc_insertion_point(field_set:SeachSKYX.lqyears)
}
inline std::string* SeachSKYX::mutable_lqyears() {
  // @@protoc_insertion_point(field_mutable:SeachSKYX.lqyears)
  return _internal_mutable_lqyears();
}
inline const std::string& SeachSKYX::_internal_lqyears() const {
  return lqyears_.GetNoArena();
}
inline void SeachSKYX::_internal_set_lqyears(const std::string& value) {
  
  lqyears_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SeachSKYX::set_lqyears(std::string&& value) {
  
  lqyears_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SeachSKYX.lqyears)
}
inline void SeachSKYX::set_lqyears(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  lqyears_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SeachSKYX.lqyears)
}
inline void SeachSKYX::set_lqyears(const char* value, size_t size) {
  
  lqyears_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SeachSKYX.lqyears)
}
inline std::string* SeachSKYX::_internal_mutable_lqyears() {
  
  return lqyears_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SeachSKYX::release_lqyears() {
  // @@protoc_insertion_point(field_release:SeachSKYX.lqyears)
  
  return lqyears_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SeachSKYX::set_allocated_lqyears(std::string* lqyears) {
  if (lqyears != nullptr) {
    
  } else {
    
  }
  lqyears_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), lqyears);
  // @@protoc_insertion_point(field_set_allocated:SeachSKYX.lqyears)
}

// string province = 2;
inline void SeachSKYX::clear_province() {
  province_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SeachSKYX::province() const {
  // @@protoc_insertion_point(field_get:SeachSKYX.province)
  return _internal_province();
}
inline void SeachSKYX::set_province(const std::string& value) {
  _internal_set_province(value);
  // @@protoc_insertion_point(field_set:SeachSKYX.province)
}
inline std::string* SeachSKYX::mutable_province() {
  // @@protoc_insertion_point(field_mutable:SeachSKYX.province)
  return _internal_mutable_province();
}
inline const std::string& SeachSKYX::_internal_province() const {
  return province_.GetNoArena();
}
inline void SeachSKYX::_internal_set_province(const std::string& value) {
  
  province_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SeachSKYX::set_province(std::string&& value) {
  
  province_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SeachSKYX.province)
}
inline void SeachSKYX::set_province(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  province_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SeachSKYX.province)
}
inline void SeachSKYX::set_province(const char* value, size_t size) {
  
  province_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SeachSKYX.province)
}
inline std::string* SeachSKYX::_internal_mutable_province() {
  
  return province_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SeachSKYX::release_province() {
  // @@protoc_insertion_point(field_release:SeachSKYX.province)
  
  return province_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SeachSKYX::set_allocated_province(std::string* province) {
  if (province != nullptr) {
    
  } else {
    
  }
  province_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), province);
  // @@protoc_insertion_point(field_set_allocated:SeachSKYX.province)
}

// string kelei = 3;
inline void SeachSKYX::clear_kelei() {
  kelei_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SeachSKYX::kelei() const {
  // @@protoc_insertion_point(field_get:SeachSKYX.kelei)
  return _internal_kelei();
}
inline void SeachSKYX::set_kelei(const std::string& value) {
  _internal_set_kelei(value);
  // @@protoc_insertion_point(field_set:SeachSKYX.kelei)
}
inline std::string* SeachSKYX::mutable_kelei() {
  // @@protoc_insertion_point(field_mutable:SeachSKYX.kelei)
  return _internal_mutable_kelei();
}
inline const std::string& SeachSKYX::_internal_kelei() const {
  return kelei_.GetNoArena();
}
inline void SeachSKYX::_internal_set_kelei(const std::string& value) {
  
  kelei_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SeachSKYX::set_kelei(std::string&& value) {
  
  kelei_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SeachSKYX.kelei)
}
inline void SeachSKYX::set_kelei(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  kelei_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SeachSKYX.kelei)
}
inline void SeachSKYX::set_kelei(const char* value, size_t size) {
  
  kelei_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SeachSKYX.kelei)
}
inline std::string* SeachSKYX::_internal_mutable_kelei() {
  
  return kelei_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SeachSKYX::release_kelei() {
  // @@protoc_insertion_point(field_release:SeachSKYX.kelei)
  
  return kelei_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SeachSKYX::set_allocated_kelei(std::string* kelei) {
  if (kelei != nullptr) {
    
  } else {
    
  }
  kelei_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), kelei);
  // @@protoc_insertion_point(field_set_allocated:SeachSKYX.kelei)
}

// string pici = 4;
inline void SeachSKYX::clear_pici() {
  pici_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SeachSKYX::pici() const {
  // @@protoc_insertion_point(field_get:SeachSKYX.pici)
  return _internal_pici();
}
inline void SeachSKYX::set_pici(const std::string& value) {
  _internal_set_pici(value);
  // @@protoc_insertion_point(field_set:SeachSKYX.pici)
}
inline std::string* SeachSKYX::mutable_pici() {
  // @@protoc_insertion_point(field_mutable:SeachSKYX.pici)
  return _internal_mutable_pici();
}
inline const std::string& SeachSKYX::_internal_pici() const {
  return pici_.GetNoArena();
}
inline void SeachSKYX::_internal_set_pici(const std::string& value) {
  
  pici_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SeachSKYX::set_pici(std::string&& value) {
  
  pici_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SeachSKYX.pici)
}
inline void SeachSKYX::set_pici(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pici_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SeachSKYX.pici)
}
inline void SeachSKYX::set_pici(const char* value, size_t size) {
  
  pici_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SeachSKYX.pici)
}
inline std::string* SeachSKYX::_internal_mutable_pici() {
  
  return pici_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SeachSKYX::release_pici() {
  // @@protoc_insertion_point(field_release:SeachSKYX.pici)
  
  return pici_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SeachSKYX::set_allocated_pici(std::string* pici) {
  if (pici != nullptr) {
    
  } else {
    
  }
  pici_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pici);
  // @@protoc_insertion_point(field_set_allocated:SeachSKYX.pici)
}

// int64 zdScroe = 5;
inline void SeachSKYX::clear_zdscroe() {
  zdscroe_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 SeachSKYX::_internal_zdscroe() const {
  return zdscroe_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 SeachSKYX::zdscroe() const {
  // @@protoc_insertion_point(field_get:SeachSKYX.zdScroe)
  return _internal_zdscroe();
}
inline void SeachSKYX::_internal_set_zdscroe(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  zdscroe_ = value;
}
inline void SeachSKYX::set_zdscroe(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_zdscroe(value);
  // @@protoc_insertion_point(field_set:SeachSKYX.zdScroe)
}

// -------------------------------------------------------------------

// SeachYYPM

// fixed64 id = 1;
inline void SeachYYPM::clear_id() {
  id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SeachYYPM::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SeachYYPM::id() const {
  // @@protoc_insertion_point(field_get:SeachYYPM.id)
  return _internal_id();
}
inline void SeachYYPM::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  id_ = value;
}
inline void SeachYYPM::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:SeachYYPM.id)
}

// string name = 2;
inline void SeachYYPM::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SeachYYPM::name() const {
  // @@protoc_insertion_point(field_get:SeachYYPM.name)
  return _internal_name();
}
inline void SeachYYPM::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:SeachYYPM.name)
}
inline std::string* SeachYYPM::mutable_name() {
  // @@protoc_insertion_point(field_mutable:SeachYYPM.name)
  return _internal_mutable_name();
}
inline const std::string& SeachYYPM::_internal_name() const {
  return name_.GetNoArena();
}
inline void SeachYYPM::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SeachYYPM::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SeachYYPM.name)
}
inline void SeachYYPM::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SeachYYPM.name)
}
inline void SeachYYPM::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SeachYYPM.name)
}
inline std::string* SeachYYPM::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SeachYYPM::release_name() {
  // @@protoc_insertion_point(field_release:SeachYYPM.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SeachYYPM::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:SeachYYPM.name)
}

// string logoPath = 3;
inline void SeachYYPM::clear_logopath() {
  logopath_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SeachYYPM::logopath() const {
  // @@protoc_insertion_point(field_get:SeachYYPM.logoPath)
  return _internal_logopath();
}
inline void SeachYYPM::set_logopath(const std::string& value) {
  _internal_set_logopath(value);
  // @@protoc_insertion_point(field_set:SeachYYPM.logoPath)
}
inline std::string* SeachYYPM::mutable_logopath() {
  // @@protoc_insertion_point(field_mutable:SeachYYPM.logoPath)
  return _internal_mutable_logopath();
}
inline const std::string& SeachYYPM::_internal_logopath() const {
  return logopath_.GetNoArena();
}
inline void SeachYYPM::_internal_set_logopath(const std::string& value) {
  
  logopath_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SeachYYPM::set_logopath(std::string&& value) {
  
  logopath_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SeachYYPM.logoPath)
}
inline void SeachYYPM::set_logopath(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  logopath_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SeachYYPM.logoPath)
}
inline void SeachYYPM::set_logopath(const char* value, size_t size) {
  
  logopath_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SeachYYPM.logoPath)
}
inline std::string* SeachYYPM::_internal_mutable_logopath() {
  
  return logopath_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SeachYYPM::release_logopath() {
  // @@protoc_insertion_point(field_release:SeachYYPM.logoPath)
  
  return logopath_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SeachYYPM::set_allocated_logopath(std::string* logopath) {
  if (logopath != nullptr) {
    
  } else {
    
  }
  logopath_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), logopath);
  // @@protoc_insertion_point(field_set_allocated:SeachYYPM.logoPath)
}

// string type = 4;
inline void SeachYYPM::clear_type() {
  type_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SeachYYPM::type() const {
  // @@protoc_insertion_point(field_get:SeachYYPM.type)
  return _internal_type();
}
inline void SeachYYPM::set_type(const std::string& value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:SeachYYPM.type)
}
inline std::string* SeachYYPM::mutable_type() {
  // @@protoc_insertion_point(field_mutable:SeachYYPM.type)
  return _internal_mutable_type();
}
inline const std::string& SeachYYPM::_internal_type() const {
  return type_.GetNoArena();
}
inline void SeachYYPM::_internal_set_type(const std::string& value) {
  
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SeachYYPM::set_type(std::string&& value) {
  
  type_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SeachYYPM.type)
}
inline void SeachYYPM::set_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SeachYYPM.type)
}
inline void SeachYYPM::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SeachYYPM.type)
}
inline std::string* SeachYYPM::_internal_mutable_type() {
  
  return type_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SeachYYPM::release_type() {
  // @@protoc_insertion_point(field_release:SeachYYPM.type)
  
  return type_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SeachYYPM::set_allocated_type(std::string* type) {
  if (type != nullptr) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:SeachYYPM.type)
}

// string level = 5;
inline void SeachYYPM::clear_level() {
  level_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SeachYYPM::level() const {
  // @@protoc_insertion_point(field_get:SeachYYPM.level)
  return _internal_level();
}
inline void SeachYYPM::set_level(const std::string& value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:SeachYYPM.level)
}
inline std::string* SeachYYPM::mutable_level() {
  // @@protoc_insertion_point(field_mutable:SeachYYPM.level)
  return _internal_mutable_level();
}
inline const std::string& SeachYYPM::_internal_level() const {
  return level_.GetNoArena();
}
inline void SeachYYPM::_internal_set_level(const std::string& value) {
  
  level_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SeachYYPM::set_level(std::string&& value) {
  
  level_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SeachYYPM.level)
}
inline void SeachYYPM::set_level(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  level_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SeachYYPM.level)
}
inline void SeachYYPM::set_level(const char* value, size_t size) {
  
  level_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SeachYYPM.level)
}
inline std::string* SeachYYPM::_internal_mutable_level() {
  
  return level_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SeachYYPM::release_level() {
  // @@protoc_insertion_point(field_release:SeachYYPM.level)
  
  return level_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SeachYYPM::set_allocated_level(std::string* level) {
  if (level != nullptr) {
    
  } else {
    
  }
  level_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), level);
  // @@protoc_insertion_point(field_set_allocated:SeachYYPM.level)
}

// string tlgxSort = 6;
inline void SeachYYPM::clear_tlgxsort() {
  tlgxsort_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SeachYYPM::tlgxsort() const {
  // @@protoc_insertion_point(field_get:SeachYYPM.tlgxSort)
  return _internal_tlgxsort();
}
inline void SeachYYPM::set_tlgxsort(const std::string& value) {
  _internal_set_tlgxsort(value);
  // @@protoc_insertion_point(field_set:SeachYYPM.tlgxSort)
}
inline std::string* SeachYYPM::mutable_tlgxsort() {
  // @@protoc_insertion_point(field_mutable:SeachYYPM.tlgxSort)
  return _internal_mutable_tlgxsort();
}
inline const std::string& SeachYYPM::_internal_tlgxsort() const {
  return tlgxsort_.GetNoArena();
}
inline void SeachYYPM::_internal_set_tlgxsort(const std::string& value) {
  
  tlgxsort_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SeachYYPM::set_tlgxsort(std::string&& value) {
  
  tlgxsort_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SeachYYPM.tlgxSort)
}
inline void SeachYYPM::set_tlgxsort(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  tlgxsort_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SeachYYPM.tlgxSort)
}
inline void SeachYYPM::set_tlgxsort(const char* value, size_t size) {
  
  tlgxsort_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SeachYYPM.tlgxSort)
}
inline std::string* SeachYYPM::_internal_mutable_tlgxsort() {
  
  return tlgxsort_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SeachYYPM::release_tlgxsort() {
  // @@protoc_insertion_point(field_release:SeachYYPM.tlgxSort)
  
  return tlgxsort_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SeachYYPM::set_allocated_tlgxsort(std::string* tlgxsort) {
  if (tlgxsort != nullptr) {
    
  } else {
    
  }
  tlgxsort_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tlgxsort);
  // @@protoc_insertion_point(field_set_allocated:SeachYYPM.tlgxSort)
}

// string provinceSort = 7;
inline void SeachYYPM::clear_provincesort() {
  provincesort_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SeachYYPM::provincesort() const {
  // @@protoc_insertion_point(field_get:SeachYYPM.provinceSort)
  return _internal_provincesort();
}
inline void SeachYYPM::set_provincesort(const std::string& value) {
  _internal_set_provincesort(value);
  // @@protoc_insertion_point(field_set:SeachYYPM.provinceSort)
}
inline std::string* SeachYYPM::mutable_provincesort() {
  // @@protoc_insertion_point(field_mutable:SeachYYPM.provinceSort)
  return _internal_mutable_provincesort();
}
inline const std::string& SeachYYPM::_internal_provincesort() const {
  return provincesort_.GetNoArena();
}
inline void SeachYYPM::_internal_set_provincesort(const std::string& value) {
  
  provincesort_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SeachYYPM::set_provincesort(std::string&& value) {
  
  provincesort_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SeachYYPM.provinceSort)
}
inline void SeachYYPM::set_provincesort(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  provincesort_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SeachYYPM.provinceSort)
}
inline void SeachYYPM::set_provincesort(const char* value, size_t size) {
  
  provincesort_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SeachYYPM.provinceSort)
}
inline std::string* SeachYYPM::_internal_mutable_provincesort() {
  
  return provincesort_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SeachYYPM::release_provincesort() {
  // @@protoc_insertion_point(field_release:SeachYYPM.provinceSort)
  
  return provincesort_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SeachYYPM::set_allocated_provincesort(std::string* provincesort) {
  if (provincesort != nullptr) {
    
  } else {
    
  }
  provincesort_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), provincesort);
  // @@protoc_insertion_point(field_set_allocated:SeachYYPM.provinceSort)
}

// string qsSort = 8;
inline void SeachYYPM::clear_qssort() {
  qssort_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SeachYYPM::qssort() const {
  // @@protoc_insertion_point(field_get:SeachYYPM.qsSort)
  return _internal_qssort();
}
inline void SeachYYPM::set_qssort(const std::string& value) {
  _internal_set_qssort(value);
  // @@protoc_insertion_point(field_set:SeachYYPM.qsSort)
}
inline std::string* SeachYYPM::mutable_qssort() {
  // @@protoc_insertion_point(field_mutable:SeachYYPM.qsSort)
  return _internal_mutable_qssort();
}
inline const std::string& SeachYYPM::_internal_qssort() const {
  return qssort_.GetNoArena();
}
inline void SeachYYPM::_internal_set_qssort(const std::string& value) {
  
  qssort_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SeachYYPM::set_qssort(std::string&& value) {
  
  qssort_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SeachYYPM.qsSort)
}
inline void SeachYYPM::set_qssort(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  qssort_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SeachYYPM.qsSort)
}
inline void SeachYYPM::set_qssort(const char* value, size_t size) {
  
  qssort_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SeachYYPM.qsSort)
}
inline std::string* SeachYYPM::_internal_mutable_qssort() {
  
  return qssort_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SeachYYPM::release_qssort() {
  // @@protoc_insertion_point(field_release:SeachYYPM.qsSort)
  
  return qssort_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SeachYYPM::set_allocated_qssort(std::string* qssort) {
  if (qssort != nullptr) {
    
  } else {
    
  }
  qssort_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), qssort);
  // @@protoc_insertion_point(field_set_allocated:SeachYYPM.qsSort)
}

// string wslSort = 9;
inline void SeachYYPM::clear_wslsort() {
  wslsort_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SeachYYPM::wslsort() const {
  // @@protoc_insertion_point(field_get:SeachYYPM.wslSort)
  return _internal_wslsort();
}
inline void SeachYYPM::set_wslsort(const std::string& value) {
  _internal_set_wslsort(value);
  // @@protoc_insertion_point(field_set:SeachYYPM.wslSort)
}
inline std::string* SeachYYPM::mutable_wslsort() {
  // @@protoc_insertion_point(field_mutable:SeachYYPM.wslSort)
  return _internal_mutable_wslsort();
}
inline const std::string& SeachYYPM::_internal_wslsort() const {
  return wslsort_.GetNoArena();
}
inline void SeachYYPM::_internal_set_wslsort(const std::string& value) {
  
  wslsort_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SeachYYPM::set_wslsort(std::string&& value) {
  
  wslsort_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SeachYYPM.wslSort)
}
inline void SeachYYPM::set_wslsort(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  wslsort_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SeachYYPM.wslSort)
}
inline void SeachYYPM::set_wslsort(const char* value, size_t size) {
  
  wslsort_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SeachYYPM.wslSort)
}
inline std::string* SeachYYPM::_internal_mutable_wslsort() {
  
  return wslsort_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SeachYYPM::release_wslsort() {
  // @@protoc_insertion_point(field_release:SeachYYPM.wslSort)
  
  return wslsort_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SeachYYPM::set_allocated_wslsort(std::string* wslsort) {
  if (wslsort != nullptr) {
    
  } else {
    
  }
  wslsort_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), wslsort);
  // @@protoc_insertion_point(field_set_allocated:SeachYYPM.wslSort)
}

// string xyhSort = 10;
inline void SeachYYPM::clear_xyhsort() {
  xyhsort_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SeachYYPM::xyhsort() const {
  // @@protoc_insertion_point(field_get:SeachYYPM.xyhSort)
  return _internal_xyhsort();
}
inline void SeachYYPM::set_xyhsort(const std::string& value) {
  _internal_set_xyhsort(value);
  // @@protoc_insertion_point(field_set:SeachYYPM.xyhSort)
}
inline std::string* SeachYYPM::mutable_xyhsort() {
  // @@protoc_insertion_point(field_mutable:SeachYYPM.xyhSort)
  return _internal_mutable_xyhsort();
}
inline const std::string& SeachYYPM::_internal_xyhsort() const {
  return xyhsort_.GetNoArena();
}
inline void SeachYYPM::_internal_set_xyhsort(const std::string& value) {
  
  xyhsort_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SeachYYPM::set_xyhsort(std::string&& value) {
  
  xyhsort_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SeachYYPM.xyhSort)
}
inline void SeachYYPM::set_xyhsort(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  xyhsort_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SeachYYPM.xyhSort)
}
inline void SeachYYPM::set_xyhsort(const char* value, size_t size) {
  
  xyhsort_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SeachYYPM.xyhSort)
}
inline std::string* SeachYYPM::_internal_mutable_xyhsort() {
  
  return xyhsort_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SeachYYPM::release_xyhsort() {
  // @@protoc_insertion_point(field_release:SeachYYPM.xyhSort)
  
  return xyhsort_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SeachYYPM::set_allocated_xyhsort(std::string* xyhsort) {
  if (xyhsort != nullptr) {
    
  } else {
    
  }
  xyhsort_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), xyhsort);
  // @@protoc_insertion_point(field_set_allocated:SeachYYPM.xyhSort)
}

// string hot = 11;
inline void SeachYYPM::clear_hot() {
  hot_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SeachYYPM::hot() const {
  // @@protoc_insertion_point(field_get:SeachYYPM.hot)
  return _internal_hot();
}
inline void SeachYYPM::set_hot(const std::string& value) {
  _internal_set_hot(value);
  // @@protoc_insertion_point(field_set:SeachYYPM.hot)
}
inline std::string* SeachYYPM::mutable_hot() {
  // @@protoc_insertion_point(field_mutable:SeachYYPM.hot)
  return _internal_mutable_hot();
}
inline const std::string& SeachYYPM::_internal_hot() const {
  return hot_.GetNoArena();
}
inline void SeachYYPM::_internal_set_hot(const std::string& value) {
  
  hot_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SeachYYPM::set_hot(std::string&& value) {
  
  hot_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SeachYYPM.hot)
}
inline void SeachYYPM::set_hot(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  hot_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SeachYYPM.hot)
}
inline void SeachYYPM::set_hot(const char* value, size_t size) {
  
  hot_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SeachYYPM.hot)
}
inline std::string* SeachYYPM::_internal_mutable_hot() {
  
  return hot_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SeachYYPM::release_hot() {
  // @@protoc_insertion_point(field_release:SeachYYPM.hot)
  
  return hot_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SeachYYPM::set_allocated_hot(std::string* hot) {
  if (hot != nullptr) {
    
  } else {
    
  }
  hot_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), hot);
  // @@protoc_insertion_point(field_set_allocated:SeachYYPM.hot)
}

// string tdx = 12;
inline void SeachYYPM::clear_tdx() {
  tdx_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SeachYYPM::tdx() const {
  // @@protoc_insertion_point(field_get:SeachYYPM.tdx)
  return _internal_tdx();
}
inline void SeachYYPM::set_tdx(const std::string& value) {
  _internal_set_tdx(value);
  // @@protoc_insertion_point(field_set:SeachYYPM.tdx)
}
inline std::string* SeachYYPM::mutable_tdx() {
  // @@protoc_insertion_point(field_mutable:SeachYYPM.tdx)
  return _internal_mutable_tdx();
}
inline const std::string& SeachYYPM::_internal_tdx() const {
  return tdx_.GetNoArena();
}
inline void SeachYYPM::_internal_set_tdx(const std::string& value) {
  
  tdx_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SeachYYPM::set_tdx(std::string&& value) {
  
  tdx_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SeachYYPM.tdx)
}
inline void SeachYYPM::set_tdx(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  tdx_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SeachYYPM.tdx)
}
inline void SeachYYPM::set_tdx(const char* value, size_t size) {
  
  tdx_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SeachYYPM.tdx)
}
inline std::string* SeachYYPM::_internal_mutable_tdx() {
  
  return tdx_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SeachYYPM::release_tdx() {
  // @@protoc_insertion_point(field_release:SeachYYPM.tdx)
  
  return tdx_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SeachYYPM::set_allocated_tdx(std::string* tdx) {
  if (tdx != nullptr) {
    
  } else {
    
  }
  tdx_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tdx);
  // @@protoc_insertion_point(field_set_allocated:SeachYYPM.tdx)
}

// string diqu = 13;
inline void SeachYYPM::clear_diqu() {
  diqu_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SeachYYPM::diqu() const {
  // @@protoc_insertion_point(field_get:SeachYYPM.diqu)
  return _internal_diqu();
}
inline void SeachYYPM::set_diqu(const std::string& value) {
  _internal_set_diqu(value);
  // @@protoc_insertion_point(field_set:SeachYYPM.diqu)
}
inline std::string* SeachYYPM::mutable_diqu() {
  // @@protoc_insertion_point(field_mutable:SeachYYPM.diqu)
  return _internal_mutable_diqu();
}
inline const std::string& SeachYYPM::_internal_diqu() const {
  return diqu_.GetNoArena();
}
inline void SeachYYPM::_internal_set_diqu(const std::string& value) {
  
  diqu_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SeachYYPM::set_diqu(std::string&& value) {
  
  diqu_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SeachYYPM.diqu)
}
inline void SeachYYPM::set_diqu(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  diqu_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SeachYYPM.diqu)
}
inline void SeachYYPM::set_diqu(const char* value, size_t size) {
  
  diqu_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SeachYYPM.diqu)
}
inline std::string* SeachYYPM::_internal_mutable_diqu() {
  
  return diqu_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SeachYYPM::release_diqu() {
  // @@protoc_insertion_point(field_release:SeachYYPM.diqu)
  
  return diqu_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SeachYYPM::set_allocated_diqu(std::string* diqu) {
  if (diqu != nullptr) {
    
  } else {
    
  }
  diqu_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), diqu);
  // @@protoc_insertion_point(field_set_allocated:SeachYYPM.diqu)
}

// -------------------------------------------------------------------

// Xkml

// fixed64 id = 1;
inline void Xkml::clear_id() {
  id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Xkml::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Xkml::id() const {
  // @@protoc_insertion_point(field_get:Xkml.id)
  return _internal_id();
}
inline void Xkml::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  id_ = value;
}
inline void Xkml::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Xkml.id)
}

// string XKmlName = 2;
inline void Xkml::clear_xkmlname() {
  xkmlname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Xkml::xkmlname() const {
  // @@protoc_insertion_point(field_get:Xkml.XKmlName)
  return _internal_xkmlname();
}
inline void Xkml::set_xkmlname(const std::string& value) {
  _internal_set_xkmlname(value);
  // @@protoc_insertion_point(field_set:Xkml.XKmlName)
}
inline std::string* Xkml::mutable_xkmlname() {
  // @@protoc_insertion_point(field_mutable:Xkml.XKmlName)
  return _internal_mutable_xkmlname();
}
inline const std::string& Xkml::_internal_xkmlname() const {
  return xkmlname_.GetNoArena();
}
inline void Xkml::_internal_set_xkmlname(const std::string& value) {
  
  xkmlname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Xkml::set_xkmlname(std::string&& value) {
  
  xkmlname_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Xkml.XKmlName)
}
inline void Xkml::set_xkmlname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  xkmlname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Xkml.XKmlName)
}
inline void Xkml::set_xkmlname(const char* value, size_t size) {
  
  xkmlname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Xkml.XKmlName)
}
inline std::string* Xkml::_internal_mutable_xkmlname() {
  
  return xkmlname_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Xkml::release_xkmlname() {
  // @@protoc_insertion_point(field_release:Xkml.XKmlName)
  
  return xkmlname_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Xkml::set_allocated_xkmlname(std::string* xkmlname) {
  if (xkmlname != nullptr) {
    
  } else {
    
  }
  xkmlname_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), xkmlname);
  // @@protoc_insertion_point(field_set_allocated:Xkml.XKmlName)
}

// repeated .Yjxk yjxk = 3;
inline int Xkml::_internal_yjxk_size() const {
  return yjxk_.size();
}
inline int Xkml::yjxk_size() const {
  return _internal_yjxk_size();
}
inline void Xkml::clear_yjxk() {
  yjxk_.Clear();
}
inline ::Yjxk* Xkml::mutable_yjxk(int index) {
  // @@protoc_insertion_point(field_mutable:Xkml.yjxk)
  return yjxk_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Yjxk >*
Xkml::mutable_yjxk() {
  // @@protoc_insertion_point(field_mutable_list:Xkml.yjxk)
  return &yjxk_;
}
inline const ::Yjxk& Xkml::_internal_yjxk(int index) const {
  return yjxk_.Get(index);
}
inline const ::Yjxk& Xkml::yjxk(int index) const {
  // @@protoc_insertion_point(field_get:Xkml.yjxk)
  return _internal_yjxk(index);
}
inline ::Yjxk* Xkml::_internal_add_yjxk() {
  return yjxk_.Add();
}
inline ::Yjxk* Xkml::add_yjxk() {
  // @@protoc_insertion_point(field_add:Xkml.yjxk)
  return _internal_add_yjxk();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Yjxk >&
Xkml::yjxk() const {
  // @@protoc_insertion_point(field_list:Xkml.yjxk)
  return yjxk_;
}

// -------------------------------------------------------------------

// Yjxk

// fixed64 id = 1;
inline void Yjxk::clear_id() {
  id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Yjxk::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Yjxk::id() const {
  // @@protoc_insertion_point(field_get:Yjxk.id)
  return _internal_id();
}
inline void Yjxk::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  id_ = value;
}
inline void Yjxk::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Yjxk.id)
}

// string yjxkName = 2;
inline void Yjxk::clear_yjxkname() {
  yjxkname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Yjxk::yjxkname() const {
  // @@protoc_insertion_point(field_get:Yjxk.yjxkName)
  return _internal_yjxkname();
}
inline void Yjxk::set_yjxkname(const std::string& value) {
  _internal_set_yjxkname(value);
  // @@protoc_insertion_point(field_set:Yjxk.yjxkName)
}
inline std::string* Yjxk::mutable_yjxkname() {
  // @@protoc_insertion_point(field_mutable:Yjxk.yjxkName)
  return _internal_mutable_yjxkname();
}
inline const std::string& Yjxk::_internal_yjxkname() const {
  return yjxkname_.GetNoArena();
}
inline void Yjxk::_internal_set_yjxkname(const std::string& value) {
  
  yjxkname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Yjxk::set_yjxkname(std::string&& value) {
  
  yjxkname_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Yjxk.yjxkName)
}
inline void Yjxk::set_yjxkname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  yjxkname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Yjxk.yjxkName)
}
inline void Yjxk::set_yjxkname(const char* value, size_t size) {
  
  yjxkname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Yjxk.yjxkName)
}
inline std::string* Yjxk::_internal_mutable_yjxkname() {
  
  return yjxkname_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Yjxk::release_yjxkname() {
  // @@protoc_insertion_point(field_release:Yjxk.yjxkName)
  
  return yjxkname_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Yjxk::set_allocated_yjxkname(std::string* yjxkname) {
  if (yjxkname != nullptr) {
    
  } else {
    
  }
  yjxkname_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), yjxkname);
  // @@protoc_insertion_point(field_set_allocated:Yjxk.yjxkName)
}

// repeated .ZyInfo zyInfo = 3;
inline int Yjxk::_internal_zyinfo_size() const {
  return zyinfo_.size();
}
inline int Yjxk::zyinfo_size() const {
  return _internal_zyinfo_size();
}
inline void Yjxk::clear_zyinfo() {
  zyinfo_.Clear();
}
inline ::ZyInfo* Yjxk::mutable_zyinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Yjxk.zyInfo)
  return zyinfo_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ZyInfo >*
Yjxk::mutable_zyinfo() {
  // @@protoc_insertion_point(field_mutable_list:Yjxk.zyInfo)
  return &zyinfo_;
}
inline const ::ZyInfo& Yjxk::_internal_zyinfo(int index) const {
  return zyinfo_.Get(index);
}
inline const ::ZyInfo& Yjxk::zyinfo(int index) const {
  // @@protoc_insertion_point(field_get:Yjxk.zyInfo)
  return _internal_zyinfo(index);
}
inline ::ZyInfo* Yjxk::_internal_add_zyinfo() {
  return zyinfo_.Add();
}
inline ::ZyInfo* Yjxk::add_zyinfo() {
  // @@protoc_insertion_point(field_add:Yjxk.zyInfo)
  return _internal_add_zyinfo();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ZyInfo >&
Yjxk::zyinfo() const {
  // @@protoc_insertion_point(field_list:Yjxk.zyInfo)
  return zyinfo_;
}

// repeated .Xkyq xkyq = 4;
inline int Yjxk::_internal_xkyq_size() const {
  return xkyq_.size();
}
inline int Yjxk::xkyq_size() const {
  return _internal_xkyq_size();
}
inline void Yjxk::clear_xkyq() {
  xkyq_.Clear();
}
inline ::Xkyq* Yjxk::mutable_xkyq(int index) {
  // @@protoc_insertion_point(field_mutable:Yjxk.xkyq)
  return xkyq_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Xkyq >*
Yjxk::mutable_xkyq() {
  // @@protoc_insertion_point(field_mutable_list:Yjxk.xkyq)
  return &xkyq_;
}
inline const ::Xkyq& Yjxk::_internal_xkyq(int index) const {
  return xkyq_.Get(index);
}
inline const ::Xkyq& Yjxk::xkyq(int index) const {
  // @@protoc_insertion_point(field_get:Yjxk.xkyq)
  return _internal_xkyq(index);
}
inline ::Xkyq* Yjxk::_internal_add_xkyq() {
  return xkyq_.Add();
}
inline ::Xkyq* Yjxk::add_xkyq() {
  // @@protoc_insertion_point(field_add:Yjxk.xkyq)
  return _internal_add_xkyq();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Xkyq >&
Yjxk::xkyq() const {
  // @@protoc_insertion_point(field_list:Yjxk.xkyq)
  return xkyq_;
}

// -------------------------------------------------------------------

// Xkyq

// fixed64 id = 1;
inline void Xkyq::clear_id() {
  id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Xkyq::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Xkyq::id() const {
  // @@protoc_insertion_point(field_get:Xkyq.id)
  return _internal_id();
}
inline void Xkyq::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  id_ = value;
}
inline void Xkyq::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Xkyq.id)
}

// string xkyqName = 2;
inline void Xkyq::clear_xkyqname() {
  xkyqname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Xkyq::xkyqname() const {
  // @@protoc_insertion_point(field_get:Xkyq.xkyqName)
  return _internal_xkyqname();
}
inline void Xkyq::set_xkyqname(const std::string& value) {
  _internal_set_xkyqname(value);
  // @@protoc_insertion_point(field_set:Xkyq.xkyqName)
}
inline std::string* Xkyq::mutable_xkyqname() {
  // @@protoc_insertion_point(field_mutable:Xkyq.xkyqName)
  return _internal_mutable_xkyqname();
}
inline const std::string& Xkyq::_internal_xkyqname() const {
  return xkyqname_.GetNoArena();
}
inline void Xkyq::_internal_set_xkyqname(const std::string& value) {
  
  xkyqname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Xkyq::set_xkyqname(std::string&& value) {
  
  xkyqname_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Xkyq.xkyqName)
}
inline void Xkyq::set_xkyqname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  xkyqname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Xkyq.xkyqName)
}
inline void Xkyq::set_xkyqname(const char* value, size_t size) {
  
  xkyqname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Xkyq.xkyqName)
}
inline std::string* Xkyq::_internal_mutable_xkyqname() {
  
  return xkyqname_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Xkyq::release_xkyqname() {
  // @@protoc_insertion_point(field_release:Xkyq.xkyqName)
  
  return xkyqname_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Xkyq::set_allocated_xkyqname(std::string* xkyqname) {
  if (xkyqname != nullptr) {
    
  } else {
    
  }
  xkyqname_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), xkyqname);
  // @@protoc_insertion_point(field_set_allocated:Xkyq.xkyqName)
}

// -------------------------------------------------------------------

// FSXZY

// fixed64 id = 1;
inline void FSXZY::clear_id() {
  id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FSXZY::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FSXZY::id() const {
  // @@protoc_insertion_point(field_get:FSXZY.id)
  return _internal_id();
}
inline void FSXZY::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  id_ = value;
}
inline void FSXZY::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:FSXZY.id)
}

// string zyName = 2;
inline void FSXZY::clear_zyname() {
  zyname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& FSXZY::zyname() const {
  // @@protoc_insertion_point(field_get:FSXZY.zyName)
  return _internal_zyname();
}
inline void FSXZY::set_zyname(const std::string& value) {
  _internal_set_zyname(value);
  // @@protoc_insertion_point(field_set:FSXZY.zyName)
}
inline std::string* FSXZY::mutable_zyname() {
  // @@protoc_insertion_point(field_mutable:FSXZY.zyName)
  return _internal_mutable_zyname();
}
inline const std::string& FSXZY::_internal_zyname() const {
  return zyname_.GetNoArena();
}
inline void FSXZY::_internal_set_zyname(const std::string& value) {
  
  zyname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void FSXZY::set_zyname(std::string&& value) {
  
  zyname_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FSXZY.zyName)
}
inline void FSXZY::set_zyname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  zyname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FSXZY.zyName)
}
inline void FSXZY::set_zyname(const char* value, size_t size) {
  
  zyname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FSXZY.zyName)
}
inline std::string* FSXZY::_internal_mutable_zyname() {
  
  return zyname_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* FSXZY::release_zyname() {
  // @@protoc_insertion_point(field_release:FSXZY.zyName)
  
  return zyname_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void FSXZY::set_allocated_zyname(std::string* zyname) {
  if (zyname != nullptr) {
    
  } else {
    
  }
  zyname_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), zyname);
  // @@protoc_insertion_point(field_set_allocated:FSXZY.zyName)
}

// string zyTeSe = 3;
inline void FSXZY::clear_zytese() {
  zytese_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& FSXZY::zytese() const {
  // @@protoc_insertion_point(field_get:FSXZY.zyTeSe)
  return _internal_zytese();
}
inline void FSXZY::set_zytese(const std::string& value) {
  _internal_set_zytese(value);
  // @@protoc_insertion_point(field_set:FSXZY.zyTeSe)
}
inline std::string* FSXZY::mutable_zytese() {
  // @@protoc_insertion_point(field_mutable:FSXZY.zyTeSe)
  return _internal_mutable_zytese();
}
inline const std::string& FSXZY::_internal_zytese() const {
  return zytese_.GetNoArena();
}
inline void FSXZY::_internal_set_zytese(const std::string& value) {
  
  zytese_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void FSXZY::set_zytese(std::string&& value) {
  
  zytese_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FSXZY.zyTeSe)
}
inline void FSXZY::set_zytese(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  zytese_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FSXZY.zyTeSe)
}
inline void FSXZY::set_zytese(const char* value, size_t size) {
  
  zytese_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FSXZY.zyTeSe)
}
inline std::string* FSXZY::_internal_mutable_zytese() {
  
  return zytese_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* FSXZY::release_zytese() {
  // @@protoc_insertion_point(field_release:FSXZY.zyTeSe)
  
  return zytese_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void FSXZY::set_allocated_zytese(std::string* zytese) {
  if (zytese != nullptr) {
    
  } else {
    
  }
  zytese_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), zytese);
  // @@protoc_insertion_point(field_set_allocated:FSXZY.zyTeSe)
}

// string zyLqgl = 4;
inline void FSXZY::clear_zylqgl() {
  zylqgl_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& FSXZY::zylqgl() const {
  // @@protoc_insertion_point(field_get:FSXZY.zyLqgl)
  return _internal_zylqgl();
}
inline void FSXZY::set_zylqgl(const std::string& value) {
  _internal_set_zylqgl(value);
  // @@protoc_insertion_point(field_set:FSXZY.zyLqgl)
}
inline std::string* FSXZY::mutable_zylqgl() {
  // @@protoc_insertion_point(field_mutable:FSXZY.zyLqgl)
  return _internal_mutable_zylqgl();
}
inline const std::string& FSXZY::_internal_zylqgl() const {
  return zylqgl_.GetNoArena();
}
inline void FSXZY::_internal_set_zylqgl(const std::string& value) {
  
  zylqgl_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void FSXZY::set_zylqgl(std::string&& value) {
  
  zylqgl_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FSXZY.zyLqgl)
}
inline void FSXZY::set_zylqgl(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  zylqgl_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FSXZY.zyLqgl)
}
inline void FSXZY::set_zylqgl(const char* value, size_t size) {
  
  zylqgl_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FSXZY.zyLqgl)
}
inline std::string* FSXZY::_internal_mutable_zylqgl() {
  
  return zylqgl_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* FSXZY::release_zylqgl() {
  // @@protoc_insertion_point(field_release:FSXZY.zyLqgl)
  
  return zylqgl_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void FSXZY::set_allocated_zylqgl(std::string* zylqgl) {
  if (zylqgl != nullptr) {
    
  } else {
    
  }
  zylqgl_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), zylqgl);
  // @@protoc_insertion_point(field_set_allocated:FSXZY.zyLqgl)
}

// string lqpc = 5;
inline void FSXZY::clear_lqpc() {
  lqpc_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& FSXZY::lqpc() const {
  // @@protoc_insertion_point(field_get:FSXZY.lqpc)
  return _internal_lqpc();
}
inline void FSXZY::set_lqpc(const std::string& value) {
  _internal_set_lqpc(value);
  // @@protoc_insertion_point(field_set:FSXZY.lqpc)
}
inline std::string* FSXZY::mutable_lqpc() {
  // @@protoc_insertion_point(field_mutable:FSXZY.lqpc)
  return _internal_mutable_lqpc();
}
inline const std::string& FSXZY::_internal_lqpc() const {
  return lqpc_.GetNoArena();
}
inline void FSXZY::_internal_set_lqpc(const std::string& value) {
  
  lqpc_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void FSXZY::set_lqpc(std::string&& value) {
  
  lqpc_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FSXZY.lqpc)
}
inline void FSXZY::set_lqpc(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  lqpc_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FSXZY.lqpc)
}
inline void FSXZY::set_lqpc(const char* value, size_t size) {
  
  lqpc_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FSXZY.lqpc)
}
inline std::string* FSXZY::_internal_mutable_lqpc() {
  
  return lqpc_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* FSXZY::release_lqpc() {
  // @@protoc_insertion_point(field_release:FSXZY.lqpc)
  
  return lqpc_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void FSXZY::set_allocated_lqpc(std::string* lqpc) {
  if (lqpc != nullptr) {
    
  } else {
    
  }
  lqpc_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), lqpc);
  // @@protoc_insertion_point(field_set_allocated:FSXZY.lqpc)
}

// string province = 6;
inline void FSXZY::clear_province() {
  province_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& FSXZY::province() const {
  // @@protoc_insertion_point(field_get:FSXZY.province)
  return _internal_province();
}
inline void FSXZY::set_province(const std::string& value) {
  _internal_set_province(value);
  // @@protoc_insertion_point(field_set:FSXZY.province)
}
inline std::string* FSXZY::mutable_province() {
  // @@protoc_insertion_point(field_mutable:FSXZY.province)
  return _internal_mutable_province();
}
inline const std::string& FSXZY::_internal_province() const {
  return province_.GetNoArena();
}
inline void FSXZY::_internal_set_province(const std::string& value) {
  
  province_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void FSXZY::set_province(std::string&& value) {
  
  province_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FSXZY.province)
}
inline void FSXZY::set_province(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  province_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FSXZY.province)
}
inline void FSXZY::set_province(const char* value, size_t size) {
  
  province_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FSXZY.province)
}
inline std::string* FSXZY::_internal_mutable_province() {
  
  return province_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* FSXZY::release_province() {
  // @@protoc_insertion_point(field_release:FSXZY.province)
  
  return province_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void FSXZY::set_allocated_province(std::string* province) {
  if (province != nullptr) {
    
  } else {
    
  }
  province_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), province);
  // @@protoc_insertion_point(field_set_allocated:FSXZY.province)
}

// string xkyq = 7;
inline void FSXZY::clear_xkyq() {
  xkyq_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& FSXZY::xkyq() const {
  // @@protoc_insertion_point(field_get:FSXZY.xkyq)
  return _internal_xkyq();
}
inline void FSXZY::set_xkyq(const std::string& value) {
  _internal_set_xkyq(value);
  // @@protoc_insertion_point(field_set:FSXZY.xkyq)
}
inline std::string* FSXZY::mutable_xkyq() {
  // @@protoc_insertion_point(field_mutable:FSXZY.xkyq)
  return _internal_mutable_xkyq();
}
inline const std::string& FSXZY::_internal_xkyq() const {
  return xkyq_.GetNoArena();
}
inline void FSXZY::_internal_set_xkyq(const std::string& value) {
  
  xkyq_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void FSXZY::set_xkyq(std::string&& value) {
  
  xkyq_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FSXZY.xkyq)
}
inline void FSXZY::set_xkyq(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  xkyq_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FSXZY.xkyq)
}
inline void FSXZY::set_xkyq(const char* value, size_t size) {
  
  xkyq_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FSXZY.xkyq)
}
inline std::string* FSXZY::_internal_mutable_xkyq() {
  
  return xkyq_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* FSXZY::release_xkyq() {
  // @@protoc_insertion_point(field_release:FSXZY.xkyq)
  
  return xkyq_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void FSXZY::set_allocated_xkyq(std::string* xkyq) {
  if (xkyq != nullptr) {
    
  } else {
    
  }
  xkyq_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), xkyq);
  // @@protoc_insertion_point(field_set_allocated:FSXZY.xkyq)
}

// string stYearLine1 = 8;
inline void FSXZY::clear_styearline1() {
  styearline1_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& FSXZY::styearline1() const {
  // @@protoc_insertion_point(field_get:FSXZY.stYearLine1)
  return _internal_styearline1();
}
inline void FSXZY::set_styearline1(const std::string& value) {
  _internal_set_styearline1(value);
  // @@protoc_insertion_point(field_set:FSXZY.stYearLine1)
}
inline std::string* FSXZY::mutable_styearline1() {
  // @@protoc_insertion_point(field_mutable:FSXZY.stYearLine1)
  return _internal_mutable_styearline1();
}
inline const std::string& FSXZY::_internal_styearline1() const {
  return styearline1_.GetNoArena();
}
inline void FSXZY::_internal_set_styearline1(const std::string& value) {
  
  styearline1_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void FSXZY::set_styearline1(std::string&& value) {
  
  styearline1_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FSXZY.stYearLine1)
}
inline void FSXZY::set_styearline1(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  styearline1_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FSXZY.stYearLine1)
}
inline void FSXZY::set_styearline1(const char* value, size_t size) {
  
  styearline1_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FSXZY.stYearLine1)
}
inline std::string* FSXZY::_internal_mutable_styearline1() {
  
  return styearline1_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* FSXZY::release_styearline1() {
  // @@protoc_insertion_point(field_release:FSXZY.stYearLine1)
  
  return styearline1_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void FSXZY::set_allocated_styearline1(std::string* styearline1) {
  if (styearline1 != nullptr) {
    
  } else {
    
  }
  styearline1_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), styearline1);
  // @@protoc_insertion_point(field_set_allocated:FSXZY.stYearLine1)
}

// -------------------------------------------------------------------

// Zyzdx

// fixed64 id = 1;
inline void Zyzdx::clear_id() {
  id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Zyzdx::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Zyzdx::id() const {
  // @@protoc_insertion_point(field_get:Zyzdx.id)
  return _internal_id();
}
inline void Zyzdx::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  id_ = value;
}
inline void Zyzdx::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Zyzdx.id)
}

// string name = 2;
inline void Zyzdx::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Zyzdx::name() const {
  // @@protoc_insertion_point(field_get:Zyzdx.name)
  return _internal_name();
}
inline void Zyzdx::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:Zyzdx.name)
}
inline std::string* Zyzdx::mutable_name() {
  // @@protoc_insertion_point(field_mutable:Zyzdx.name)
  return _internal_mutable_name();
}
inline const std::string& Zyzdx::_internal_name() const {
  return name_.GetNoArena();
}
inline void Zyzdx::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Zyzdx::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Zyzdx.name)
}
inline void Zyzdx::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Zyzdx.name)
}
inline void Zyzdx::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Zyzdx.name)
}
inline std::string* Zyzdx::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Zyzdx::release_name() {
  // @@protoc_insertion_point(field_release:Zyzdx.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Zyzdx::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Zyzdx.name)
}

// string logoPath = 3;
inline void Zyzdx::clear_logopath() {
  logopath_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Zyzdx::logopath() const {
  // @@protoc_insertion_point(field_get:Zyzdx.logoPath)
  return _internal_logopath();
}
inline void Zyzdx::set_logopath(const std::string& value) {
  _internal_set_logopath(value);
  // @@protoc_insertion_point(field_set:Zyzdx.logoPath)
}
inline std::string* Zyzdx::mutable_logopath() {
  // @@protoc_insertion_point(field_mutable:Zyzdx.logoPath)
  return _internal_mutable_logopath();
}
inline const std::string& Zyzdx::_internal_logopath() const {
  return logopath_.GetNoArena();
}
inline void Zyzdx::_internal_set_logopath(const std::string& value) {
  
  logopath_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Zyzdx::set_logopath(std::string&& value) {
  
  logopath_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Zyzdx.logoPath)
}
inline void Zyzdx::set_logopath(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  logopath_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Zyzdx.logoPath)
}
inline void Zyzdx::set_logopath(const char* value, size_t size) {
  
  logopath_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Zyzdx.logoPath)
}
inline std::string* Zyzdx::_internal_mutable_logopath() {
  
  return logopath_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Zyzdx::release_logopath() {
  // @@protoc_insertion_point(field_release:Zyzdx.logoPath)
  
  return logopath_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Zyzdx::set_allocated_logopath(std::string* logopath) {
  if (logopath != nullptr) {
    
  } else {
    
  }
  logopath_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), logopath);
  // @@protoc_insertion_point(field_set_allocated:Zyzdx.logoPath)
}

// string type = 4;
inline void Zyzdx::clear_type() {
  type_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Zyzdx::type() const {
  // @@protoc_insertion_point(field_get:Zyzdx.type)
  return _internal_type();
}
inline void Zyzdx::set_type(const std::string& value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:Zyzdx.type)
}
inline std::string* Zyzdx::mutable_type() {
  // @@protoc_insertion_point(field_mutable:Zyzdx.type)
  return _internal_mutable_type();
}
inline const std::string& Zyzdx::_internal_type() const {
  return type_.GetNoArena();
}
inline void Zyzdx::_internal_set_type(const std::string& value) {
  
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Zyzdx::set_type(std::string&& value) {
  
  type_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Zyzdx.type)
}
inline void Zyzdx::set_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Zyzdx.type)
}
inline void Zyzdx::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Zyzdx.type)
}
inline std::string* Zyzdx::_internal_mutable_type() {
  
  return type_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Zyzdx::release_type() {
  // @@protoc_insertion_point(field_release:Zyzdx.type)
  
  return type_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Zyzdx::set_allocated_type(std::string* type) {
  if (type != nullptr) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:Zyzdx.type)
}

// string level = 5;
inline void Zyzdx::clear_level() {
  level_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Zyzdx::level() const {
  // @@protoc_insertion_point(field_get:Zyzdx.level)
  return _internal_level();
}
inline void Zyzdx::set_level(const std::string& value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:Zyzdx.level)
}
inline std::string* Zyzdx::mutable_level() {
  // @@protoc_insertion_point(field_mutable:Zyzdx.level)
  return _internal_mutable_level();
}
inline const std::string& Zyzdx::_internal_level() const {
  return level_.GetNoArena();
}
inline void Zyzdx::_internal_set_level(const std::string& value) {
  
  level_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Zyzdx::set_level(std::string&& value) {
  
  level_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Zyzdx.level)
}
inline void Zyzdx::set_level(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  level_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Zyzdx.level)
}
inline void Zyzdx::set_level(const char* value, size_t size) {
  
  level_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Zyzdx.level)
}
inline std::string* Zyzdx::_internal_mutable_level() {
  
  return level_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Zyzdx::release_level() {
  // @@protoc_insertion_point(field_release:Zyzdx.level)
  
  return level_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Zyzdx::set_allocated_level(std::string* level) {
  if (level != nullptr) {
    
  } else {
    
  }
  level_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), level);
  // @@protoc_insertion_point(field_set_allocated:Zyzdx.level)
}

// string stYearLine1 = 6;
inline void Zyzdx::clear_styearline1() {
  styearline1_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Zyzdx::styearline1() const {
  // @@protoc_insertion_point(field_get:Zyzdx.stYearLine1)
  return _internal_styearline1();
}
inline void Zyzdx::set_styearline1(const std::string& value) {
  _internal_set_styearline1(value);
  // @@protoc_insertion_point(field_set:Zyzdx.stYearLine1)
}
inline std::string* Zyzdx::mutable_styearline1() {
  // @@protoc_insertion_point(field_mutable:Zyzdx.stYearLine1)
  return _internal_mutable_styearline1();
}
inline const std::string& Zyzdx::_internal_styearline1() const {
  return styearline1_.GetNoArena();
}
inline void Zyzdx::_internal_set_styearline1(const std::string& value) {
  
  styearline1_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Zyzdx::set_styearline1(std::string&& value) {
  
  styearline1_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Zyzdx.stYearLine1)
}
inline void Zyzdx::set_styearline1(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  styearline1_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Zyzdx.stYearLine1)
}
inline void Zyzdx::set_styearline1(const char* value, size_t size) {
  
  styearline1_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Zyzdx.stYearLine1)
}
inline std::string* Zyzdx::_internal_mutable_styearline1() {
  
  return styearline1_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Zyzdx::release_styearline1() {
  // @@protoc_insertion_point(field_release:Zyzdx.stYearLine1)
  
  return styearline1_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Zyzdx::set_allocated_styearline1(std::string* styearline1) {
  if (styearline1 != nullptr) {
    
  } else {
    
  }
  styearline1_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), styearline1);
  // @@protoc_insertion_point(field_set_allocated:Zyzdx.stYearLine1)
}

// string zyLqgl = 7;
inline void Zyzdx::clear_zylqgl() {
  zylqgl_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Zyzdx::zylqgl() const {
  // @@protoc_insertion_point(field_get:Zyzdx.zyLqgl)
  return _internal_zylqgl();
}
inline void Zyzdx::set_zylqgl(const std::string& value) {
  _internal_set_zylqgl(value);
  // @@protoc_insertion_point(field_set:Zyzdx.zyLqgl)
}
inline std::string* Zyzdx::mutable_zylqgl() {
  // @@protoc_insertion_point(field_mutable:Zyzdx.zyLqgl)
  return _internal_mutable_zylqgl();
}
inline const std::string& Zyzdx::_internal_zylqgl() const {
  return zylqgl_.GetNoArena();
}
inline void Zyzdx::_internal_set_zylqgl(const std::string& value) {
  
  zylqgl_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Zyzdx::set_zylqgl(std::string&& value) {
  
  zylqgl_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Zyzdx.zyLqgl)
}
inline void Zyzdx::set_zylqgl(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  zylqgl_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Zyzdx.zyLqgl)
}
inline void Zyzdx::set_zylqgl(const char* value, size_t size) {
  
  zylqgl_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Zyzdx.zyLqgl)
}
inline std::string* Zyzdx::_internal_mutable_zylqgl() {
  
  return zylqgl_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Zyzdx::release_zylqgl() {
  // @@protoc_insertion_point(field_release:Zyzdx.zyLqgl)
  
  return zylqgl_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Zyzdx::set_allocated_zylqgl(std::string* zylqgl) {
  if (zylqgl != nullptr) {
    
  } else {
    
  }
  zylqgl_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), zylqgl);
  // @@protoc_insertion_point(field_set_allocated:Zyzdx.zyLqgl)
}

// string zyName = 8;
inline void Zyzdx::clear_zyname() {
  zyname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Zyzdx::zyname() const {
  // @@protoc_insertion_point(field_get:Zyzdx.zyName)
  return _internal_zyname();
}
inline void Zyzdx::set_zyname(const std::string& value) {
  _internal_set_zyname(value);
  // @@protoc_insertion_point(field_set:Zyzdx.zyName)
}
inline std::string* Zyzdx::mutable_zyname() {
  // @@protoc_insertion_point(field_mutable:Zyzdx.zyName)
  return _internal_mutable_zyname();
}
inline const std::string& Zyzdx::_internal_zyname() const {
  return zyname_.GetNoArena();
}
inline void Zyzdx::_internal_set_zyname(const std::string& value) {
  
  zyname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Zyzdx::set_zyname(std::string&& value) {
  
  zyname_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Zyzdx.zyName)
}
inline void Zyzdx::set_zyname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  zyname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Zyzdx.zyName)
}
inline void Zyzdx::set_zyname(const char* value, size_t size) {
  
  zyname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Zyzdx.zyName)
}
inline std::string* Zyzdx::_internal_mutable_zyname() {
  
  return zyname_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Zyzdx::release_zyname() {
  // @@protoc_insertion_point(field_release:Zyzdx.zyName)
  
  return zyname_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Zyzdx::set_allocated_zyname(std::string* zyname) {
  if (zyname != nullptr) {
    
  } else {
    
  }
  zyname_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), zyname);
  // @@protoc_insertion_point(field_set_allocated:Zyzdx.zyName)
}

// string zyLev = 9;
inline void Zyzdx::clear_zylev() {
  zylev_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Zyzdx::zylev() const {
  // @@protoc_insertion_point(field_get:Zyzdx.zyLev)
  return _internal_zylev();
}
inline void Zyzdx::set_zylev(const std::string& value) {
  _internal_set_zylev(value);
  // @@protoc_insertion_point(field_set:Zyzdx.zyLev)
}
inline std::string* Zyzdx::mutable_zylev() {
  // @@protoc_insertion_point(field_mutable:Zyzdx.zyLev)
  return _internal_mutable_zylev();
}
inline const std::string& Zyzdx::_internal_zylev() const {
  return zylev_.GetNoArena();
}
inline void Zyzdx::_internal_set_zylev(const std::string& value) {
  
  zylev_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Zyzdx::set_zylev(std::string&& value) {
  
  zylev_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Zyzdx.zyLev)
}
inline void Zyzdx::set_zylev(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  zylev_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Zyzdx.zyLev)
}
inline void Zyzdx::set_zylev(const char* value, size_t size) {
  
  zylev_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Zyzdx.zyLev)
}
inline std::string* Zyzdx::_internal_mutable_zylev() {
  
  return zylev_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Zyzdx::release_zylev() {
  // @@protoc_insertion_point(field_release:Zyzdx.zyLev)
  
  return zylev_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Zyzdx::set_allocated_zylev(std::string* zylev) {
  if (zylev != nullptr) {
    
  } else {
    
  }
  zylev_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), zylev);
  // @@protoc_insertion_point(field_set_allocated:Zyzdx.zyLev)
}

// fixed64 zyId = 10;
inline void Zyzdx::clear_zyid() {
  zyid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Zyzdx::_internal_zyid() const {
  return zyid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Zyzdx::zyid() const {
  // @@protoc_insertion_point(field_get:Zyzdx.zyId)
  return _internal_zyid();
}
inline void Zyzdx::_internal_set_zyid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  zyid_ = value;
}
inline void Zyzdx::set_zyid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_zyid(value);
  // @@protoc_insertion_point(field_set:Zyzdx.zyId)
}

// string xkyq = 11;
inline void Zyzdx::clear_xkyq() {
  xkyq_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Zyzdx::xkyq() const {
  // @@protoc_insertion_point(field_get:Zyzdx.xkyq)
  return _internal_xkyq();
}
inline void Zyzdx::set_xkyq(const std::string& value) {
  _internal_set_xkyq(value);
  // @@protoc_insertion_point(field_set:Zyzdx.xkyq)
}
inline std::string* Zyzdx::mutable_xkyq() {
  // @@protoc_insertion_point(field_mutable:Zyzdx.xkyq)
  return _internal_mutable_xkyq();
}
inline const std::string& Zyzdx::_internal_xkyq() const {
  return xkyq_.GetNoArena();
}
inline void Zyzdx::_internal_set_xkyq(const std::string& value) {
  
  xkyq_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Zyzdx::set_xkyq(std::string&& value) {
  
  xkyq_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Zyzdx.xkyq)
}
inline void Zyzdx::set_xkyq(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  xkyq_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Zyzdx.xkyq)
}
inline void Zyzdx::set_xkyq(const char* value, size_t size) {
  
  xkyq_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Zyzdx.xkyq)
}
inline std::string* Zyzdx::_internal_mutable_xkyq() {
  
  return xkyq_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Zyzdx::release_xkyq() {
  // @@protoc_insertion_point(field_release:Zyzdx.xkyq)
  
  return xkyq_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Zyzdx::set_allocated_xkyq(std::string* xkyq) {
  if (xkyq != nullptr) {
    
  } else {
    
  }
  xkyq_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), xkyq);
  // @@protoc_insertion_point(field_set_allocated:Zyzdx.xkyq)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_yzpm_2eproto
