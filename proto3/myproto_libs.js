// source: yzpm.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!


goog.provide('proto.C_ChangePwd_1004');
goog.provide('proto.C_GetDisciplineContrastResList_1024');
goog.provide('proto.C_GetDisciplineStoreUpResList_1020');
goog.provide('proto.C_GetPlanRecruit_2006');
goog.provide('proto.C_GetSchoolAdmitInfo_2002');
goog.provide('proto.C_GetSchoolContrastResList_1022');
goog.provide('proto.C_GetSchoolInfoById_2000');
goog.provide('proto.C_GetSchoolStoreUpResList_1008');
goog.provide('proto.C_GetSeachFSXZYList_3012');
goog.provide('proto.C_GetSeachSKYXList_3006');
goog.provide('proto.C_GetSeachSchoolList_3002');
goog.provide('proto.C_GetSeachScoreList_3004');
goog.provide('proto.C_GetSeachYYPMList_3008');
goog.provide('proto.C_GetXkyqInfo_2008');
goog.provide('proto.C_GetYxszInfo_2010');
goog.provide('proto.C_GetZntjInfoList_3000');
goog.provide('proto.C_GetZsjzInfo_2012');
goog.provide('proto.C_GetZyAdmitInfo_2004');
goog.provide('proto.C_GetZydqList_3010');
goog.provide('proto.C_GetZyzdxList_3014');
goog.provide('proto.C_LoginResByPhone_1002');
goog.provide('proto.C_LoginResByUser_1000');
goog.provide('proto.C_SaveAssessment_1026');
goog.provide('proto.C_SaveUserInfo_1006');
goog.provide('proto.C_SaveUserInfo_1028');
goog.provide('proto.DisciplineContrastRes');
goog.provide('proto.DisciplineStoreUpRes');
goog.provide('proto.FSXZY');
goog.provide('proto.PagingInfo');
goog.provide('proto.PlanRecruit');
goog.provide('proto.RetObj');
goog.provide('proto.S_ChangePwd_1005');
goog.provide('proto.S_GetDisciplineContrastResList_1025');
goog.provide('proto.S_GetDisciplineStoreUpResList_1021');
goog.provide('proto.S_GetPlanRecruit_2007');
goog.provide('proto.S_GetSchoolAdmitInfo_2003');
goog.provide('proto.S_GetSchoolContrastResList_1023');
goog.provide('proto.S_GetSchoolInfoById_2001');
goog.provide('proto.S_GetSchoolStoreUpResList_1009');
goog.provide('proto.S_GetSeachFSXZYList_3013');
goog.provide('proto.S_GetSeachSKYXList_3007');
goog.provide('proto.S_GetSeachSchoolList_3003');
goog.provide('proto.S_GetSeachScoreList_3005');
goog.provide('proto.S_GetSeachYYPMList_3009');
goog.provide('proto.S_GetXkyqInfo_2009');
goog.provide('proto.S_GetYxszInfo_2011');
goog.provide('proto.S_GetZntjInfoList_3001');
goog.provide('proto.S_GetZsjzInfo_2013');
goog.provide('proto.S_GetZyAdmitInfo_2005');
goog.provide('proto.S_GetZydqList_3011');
goog.provide('proto.S_GetZyzdxList_3015');
goog.provide('proto.S_LoginResByPhone_1003');
goog.provide('proto.S_LoginResByUser_1001');
goog.provide('proto.S_SaveAssessment_1027');
goog.provide('proto.S_SaveUserInfo_1007');
goog.provide('proto.S_SaveUserInfo_1029');
goog.provide('proto.SchoolAdmitInfo');
goog.provide('proto.SchoolContrastRes');
goog.provide('proto.SchoolInfo');
goog.provide('proto.SchoolStoreUpRes');
goog.provide('proto.SeachSKYX');
goog.provide('proto.SeachSchool');
goog.provide('proto.SeachScore');
goog.provide('proto.SeachYYPM');
goog.provide('proto.UsersRes');
goog.provide('proto.Xkml');
goog.provide('proto.Xkyq');
goog.provide('proto.XkyqInfo');
goog.provide('proto.Yjxk');
goog.provide('proto.YxszInfo');
goog.provide('proto.ZntjInfo');
goog.provide('proto.ZsjzInfo');
goog.provide('proto.ZyAdmitInfo');
goog.provide('proto.ZyInfo');
goog.provide('proto.Zyzdx');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.C_LoginResByUser_1000 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.C_LoginResByUser_1000, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.C_LoginResByUser_1000.displayName = 'proto.C_LoginResByUser_1000';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.S_LoginResByUser_1001 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.S_LoginResByUser_1001, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.S_LoginResByUser_1001.displayName = 'proto.S_LoginResByUser_1001';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.C_LoginResByPhone_1002 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.C_LoginResByPhone_1002, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.C_LoginResByPhone_1002.displayName = 'proto.C_LoginResByPhone_1002';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.S_LoginResByPhone_1003 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.S_LoginResByPhone_1003, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.S_LoginResByPhone_1003.displayName = 'proto.S_LoginResByPhone_1003';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.C_ChangePwd_1004 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.C_ChangePwd_1004, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.C_ChangePwd_1004.displayName = 'proto.C_ChangePwd_1004';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.S_ChangePwd_1005 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.S_ChangePwd_1005, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.S_ChangePwd_1005.displayName = 'proto.S_ChangePwd_1005';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.C_SaveUserInfo_1006 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.C_SaveUserInfo_1006, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.C_SaveUserInfo_1006.displayName = 'proto.C_SaveUserInfo_1006';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.S_SaveUserInfo_1007 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.S_SaveUserInfo_1007, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.S_SaveUserInfo_1007.displayName = 'proto.S_SaveUserInfo_1007';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.C_GetSchoolStoreUpResList_1008 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.C_GetSchoolStoreUpResList_1008, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.C_GetSchoolStoreUpResList_1008.displayName = 'proto.C_GetSchoolStoreUpResList_1008';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.S_GetSchoolStoreUpResList_1009 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.S_GetSchoolStoreUpResList_1009.repeatedFields_, null);
};
goog.inherits(proto.S_GetSchoolStoreUpResList_1009, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.S_GetSchoolStoreUpResList_1009.displayName = 'proto.S_GetSchoolStoreUpResList_1009';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.C_GetDisciplineStoreUpResList_1020 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.C_GetDisciplineStoreUpResList_1020, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.C_GetDisciplineStoreUpResList_1020.displayName = 'proto.C_GetDisciplineStoreUpResList_1020';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.S_GetDisciplineStoreUpResList_1021 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.S_GetDisciplineStoreUpResList_1021.repeatedFields_, null);
};
goog.inherits(proto.S_GetDisciplineStoreUpResList_1021, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.S_GetDisciplineStoreUpResList_1021.displayName = 'proto.S_GetDisciplineStoreUpResList_1021';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.C_GetSchoolContrastResList_1022 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.C_GetSchoolContrastResList_1022, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.C_GetSchoolContrastResList_1022.displayName = 'proto.C_GetSchoolContrastResList_1022';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.S_GetSchoolContrastResList_1023 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.S_GetSchoolContrastResList_1023.repeatedFields_, null);
};
goog.inherits(proto.S_GetSchoolContrastResList_1023, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.S_GetSchoolContrastResList_1023.displayName = 'proto.S_GetSchoolContrastResList_1023';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.C_GetDisciplineContrastResList_1024 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.C_GetDisciplineContrastResList_1024, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.C_GetDisciplineContrastResList_1024.displayName = 'proto.C_GetDisciplineContrastResList_1024';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.S_GetDisciplineContrastResList_1025 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.S_GetDisciplineContrastResList_1025.repeatedFields_, null);
};
goog.inherits(proto.S_GetDisciplineContrastResList_1025, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.S_GetDisciplineContrastResList_1025.displayName = 'proto.S_GetDisciplineContrastResList_1025';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.C_SaveAssessment_1026 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.C_SaveAssessment_1026, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.C_SaveAssessment_1026.displayName = 'proto.C_SaveAssessment_1026';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.S_SaveAssessment_1027 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.S_SaveAssessment_1027, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.S_SaveAssessment_1027.displayName = 'proto.S_SaveAssessment_1027';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.C_SaveUserInfo_1028 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.C_SaveUserInfo_1028, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.C_SaveUserInfo_1028.displayName = 'proto.C_SaveUserInfo_1028';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.S_SaveUserInfo_1029 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.S_SaveUserInfo_1029, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.S_SaveUserInfo_1029.displayName = 'proto.S_SaveUserInfo_1029';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RetObj = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.RetObj, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.RetObj.displayName = 'proto.RetObj';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.UsersRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.UsersRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.UsersRes.displayName = 'proto.UsersRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SchoolContrastRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SchoolContrastRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SchoolContrastRes.displayName = 'proto.SchoolContrastRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DisciplineContrastRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DisciplineContrastRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.DisciplineContrastRes.displayName = 'proto.DisciplineContrastRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SchoolStoreUpRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SchoolStoreUpRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SchoolStoreUpRes.displayName = 'proto.SchoolStoreUpRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DisciplineStoreUpRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DisciplineStoreUpRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.DisciplineStoreUpRes.displayName = 'proto.DisciplineStoreUpRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.C_GetSchoolInfoById_2000 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.C_GetSchoolInfoById_2000, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.C_GetSchoolInfoById_2000.displayName = 'proto.C_GetSchoolInfoById_2000';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.S_GetSchoolInfoById_2001 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.S_GetSchoolInfoById_2001, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.S_GetSchoolInfoById_2001.displayName = 'proto.S_GetSchoolInfoById_2001';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.C_GetSchoolAdmitInfo_2002 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.C_GetSchoolAdmitInfo_2002, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.C_GetSchoolAdmitInfo_2002.displayName = 'proto.C_GetSchoolAdmitInfo_2002';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.S_GetSchoolAdmitInfo_2003 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.S_GetSchoolAdmitInfo_2003.repeatedFields_, null);
};
goog.inherits(proto.S_GetSchoolAdmitInfo_2003, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.S_GetSchoolAdmitInfo_2003.displayName = 'proto.S_GetSchoolAdmitInfo_2003';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.C_GetZyAdmitInfo_2004 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.C_GetZyAdmitInfo_2004, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.C_GetZyAdmitInfo_2004.displayName = 'proto.C_GetZyAdmitInfo_2004';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.S_GetZyAdmitInfo_2005 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.S_GetZyAdmitInfo_2005.repeatedFields_, null);
};
goog.inherits(proto.S_GetZyAdmitInfo_2005, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.S_GetZyAdmitInfo_2005.displayName = 'proto.S_GetZyAdmitInfo_2005';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.C_GetPlanRecruit_2006 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.C_GetPlanRecruit_2006, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.C_GetPlanRecruit_2006.displayName = 'proto.C_GetPlanRecruit_2006';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.S_GetPlanRecruit_2007 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.S_GetPlanRecruit_2007.repeatedFields_, null);
};
goog.inherits(proto.S_GetPlanRecruit_2007, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.S_GetPlanRecruit_2007.displayName = 'proto.S_GetPlanRecruit_2007';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.C_GetXkyqInfo_2008 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.C_GetXkyqInfo_2008, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.C_GetXkyqInfo_2008.displayName = 'proto.C_GetXkyqInfo_2008';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.S_GetXkyqInfo_2009 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.S_GetXkyqInfo_2009.repeatedFields_, null);
};
goog.inherits(proto.S_GetXkyqInfo_2009, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.S_GetXkyqInfo_2009.displayName = 'proto.S_GetXkyqInfo_2009';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.C_GetYxszInfo_2010 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.C_GetYxszInfo_2010, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.C_GetYxszInfo_2010.displayName = 'proto.C_GetYxszInfo_2010';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.S_GetYxszInfo_2011 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.S_GetYxszInfo_2011.repeatedFields_, null);
};
goog.inherits(proto.S_GetYxszInfo_2011, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.S_GetYxszInfo_2011.displayName = 'proto.S_GetYxszInfo_2011';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.C_GetZsjzInfo_2012 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.C_GetZsjzInfo_2012, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.C_GetZsjzInfo_2012.displayName = 'proto.C_GetZsjzInfo_2012';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.S_GetZsjzInfo_2013 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.S_GetZsjzInfo_2013.repeatedFields_, null);
};
goog.inherits(proto.S_GetZsjzInfo_2013, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.S_GetZsjzInfo_2013.displayName = 'proto.S_GetZsjzInfo_2013';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SchoolInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SchoolInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SchoolInfo.displayName = 'proto.SchoolInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ZyInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ZyInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ZyInfo.displayName = 'proto.ZyInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SchoolAdmitInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SchoolAdmitInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SchoolAdmitInfo.displayName = 'proto.SchoolAdmitInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ZyAdmitInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ZyAdmitInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ZyAdmitInfo.displayName = 'proto.ZyAdmitInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PlanRecruit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PlanRecruit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PlanRecruit.displayName = 'proto.PlanRecruit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.XkyqInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.XkyqInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.XkyqInfo.displayName = 'proto.XkyqInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.YxszInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.YxszInfo.repeatedFields_, null);
};
goog.inherits(proto.YxszInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.YxszInfo.displayName = 'proto.YxszInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ZsjzInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ZsjzInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ZsjzInfo.displayName = 'proto.ZsjzInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.C_GetZntjInfoList_3000 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.C_GetZntjInfoList_3000, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.C_GetZntjInfoList_3000.displayName = 'proto.C_GetZntjInfoList_3000';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.S_GetZntjInfoList_3001 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.S_GetZntjInfoList_3001.repeatedFields_, null);
};
goog.inherits(proto.S_GetZntjInfoList_3001, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.S_GetZntjInfoList_3001.displayName = 'proto.S_GetZntjInfoList_3001';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.C_GetSeachSchoolList_3002 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.C_GetSeachSchoolList_3002, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.C_GetSeachSchoolList_3002.displayName = 'proto.C_GetSeachSchoolList_3002';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.S_GetSeachSchoolList_3003 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.S_GetSeachSchoolList_3003.repeatedFields_, null);
};
goog.inherits(proto.S_GetSeachSchoolList_3003, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.S_GetSeachSchoolList_3003.displayName = 'proto.S_GetSeachSchoolList_3003';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.C_GetSeachScoreList_3004 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.C_GetSeachScoreList_3004, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.C_GetSeachScoreList_3004.displayName = 'proto.C_GetSeachScoreList_3004';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.S_GetSeachScoreList_3005 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.S_GetSeachScoreList_3005.repeatedFields_, null);
};
goog.inherits(proto.S_GetSeachScoreList_3005, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.S_GetSeachScoreList_3005.displayName = 'proto.S_GetSeachScoreList_3005';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.C_GetSeachSKYXList_3006 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.C_GetSeachSKYXList_3006, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.C_GetSeachSKYXList_3006.displayName = 'proto.C_GetSeachSKYXList_3006';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.S_GetSeachSKYXList_3007 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.S_GetSeachSKYXList_3007.repeatedFields_, null);
};
goog.inherits(proto.S_GetSeachSKYXList_3007, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.S_GetSeachSKYXList_3007.displayName = 'proto.S_GetSeachSKYXList_3007';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.C_GetSeachYYPMList_3008 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.C_GetSeachYYPMList_3008, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.C_GetSeachYYPMList_3008.displayName = 'proto.C_GetSeachYYPMList_3008';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.S_GetSeachYYPMList_3009 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.S_GetSeachYYPMList_3009.repeatedFields_, null);
};
goog.inherits(proto.S_GetSeachYYPMList_3009, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.S_GetSeachYYPMList_3009.displayName = 'proto.S_GetSeachYYPMList_3009';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.C_GetZydqList_3010 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.C_GetZydqList_3010, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.C_GetZydqList_3010.displayName = 'proto.C_GetZydqList_3010';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.S_GetZydqList_3011 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.S_GetZydqList_3011.repeatedFields_, null);
};
goog.inherits(proto.S_GetZydqList_3011, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.S_GetZydqList_3011.displayName = 'proto.S_GetZydqList_3011';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.C_GetSeachFSXZYList_3012 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.C_GetSeachFSXZYList_3012, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.C_GetSeachFSXZYList_3012.displayName = 'proto.C_GetSeachFSXZYList_3012';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.S_GetSeachFSXZYList_3013 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.S_GetSeachFSXZYList_3013.repeatedFields_, null);
};
goog.inherits(proto.S_GetSeachFSXZYList_3013, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.S_GetSeachFSXZYList_3013.displayName = 'proto.S_GetSeachFSXZYList_3013';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.C_GetZyzdxList_3014 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.C_GetZyzdxList_3014, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.C_GetZyzdxList_3014.displayName = 'proto.C_GetZyzdxList_3014';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.S_GetZyzdxList_3015 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.S_GetZyzdxList_3015.repeatedFields_, null);
};
goog.inherits(proto.S_GetZyzdxList_3015, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.S_GetZyzdxList_3015.displayName = 'proto.S_GetZyzdxList_3015';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ZntjInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ZntjInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ZntjInfo.displayName = 'proto.ZntjInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PagingInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PagingInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PagingInfo.displayName = 'proto.PagingInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SeachSchool = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SeachSchool, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SeachSchool.displayName = 'proto.SeachSchool';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SeachScore = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SeachScore, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SeachScore.displayName = 'proto.SeachScore';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SeachSKYX = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SeachSKYX, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SeachSKYX.displayName = 'proto.SeachSKYX';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SeachYYPM = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SeachYYPM, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SeachYYPM.displayName = 'proto.SeachYYPM';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Xkml = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Xkml.repeatedFields_, null);
};
goog.inherits(proto.Xkml, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Xkml.displayName = 'proto.Xkml';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yjxk = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Yjxk.repeatedFields_, null);
};
goog.inherits(proto.Yjxk, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yjxk.displayName = 'proto.Yjxk';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Xkyq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Xkyq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Xkyq.displayName = 'proto.Xkyq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FSXZY = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.FSXZY, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.FSXZY.displayName = 'proto.FSXZY';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Zyzdx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Zyzdx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Zyzdx.displayName = 'proto.Zyzdx';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.C_LoginResByUser_1000.prototype.toObject = function(opt_includeInstance) {
  return proto.C_LoginResByUser_1000.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.C_LoginResByUser_1000} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_LoginResByUser_1000.toObject = function(includeInstance, msg) {
  var f, obj = {
    tel: jspb.Message.getFieldWithDefault(msg, 1, ""),
    yzm: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.C_LoginResByUser_1000}
 */
proto.C_LoginResByUser_1000.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.C_LoginResByUser_1000;
  return proto.C_LoginResByUser_1000.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.C_LoginResByUser_1000} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.C_LoginResByUser_1000}
 */
proto.C_LoginResByUser_1000.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTel(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setYzm(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.C_LoginResByUser_1000.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.C_LoginResByUser_1000.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.C_LoginResByUser_1000} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_LoginResByUser_1000.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getYzm();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string tel = 1;
 * @return {string}
 */
proto.C_LoginResByUser_1000.prototype.getTel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_LoginResByUser_1000} returns this
 */
proto.C_LoginResByUser_1000.prototype.setTel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string yzm = 2;
 * @return {string}
 */
proto.C_LoginResByUser_1000.prototype.getYzm = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_LoginResByUser_1000} returns this
 */
proto.C_LoginResByUser_1000.prototype.setYzm = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.S_LoginResByUser_1001.prototype.toObject = function(opt_includeInstance) {
  return proto.S_LoginResByUser_1001.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.S_LoginResByUser_1001} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_LoginResByUser_1001.toObject = function(includeInstance, msg) {
  var f, obj = {
    usersres: (f = msg.getUsersres()) && proto.UsersRes.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.S_LoginResByUser_1001}
 */
proto.S_LoginResByUser_1001.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.S_LoginResByUser_1001;
  return proto.S_LoginResByUser_1001.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.S_LoginResByUser_1001} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.S_LoginResByUser_1001}
 */
proto.S_LoginResByUser_1001.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.UsersRes;
      reader.readMessage(value,proto.UsersRes.deserializeBinaryFromReader);
      msg.setUsersres(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.S_LoginResByUser_1001.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.S_LoginResByUser_1001.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.S_LoginResByUser_1001} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_LoginResByUser_1001.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsersres();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.UsersRes.serializeBinaryToWriter
    );
  }
};


/**
 * optional UsersRes usersRes = 1;
 * @return {?proto.UsersRes}
 */
proto.S_LoginResByUser_1001.prototype.getUsersres = function() {
  return /** @type{?proto.UsersRes} */ (
    jspb.Message.getWrapperField(this, proto.UsersRes, 1));
};


/**
 * @param {?proto.UsersRes|undefined} value
 * @return {!proto.S_LoginResByUser_1001} returns this
*/
proto.S_LoginResByUser_1001.prototype.setUsersres = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.S_LoginResByUser_1001} returns this
 */
proto.S_LoginResByUser_1001.prototype.clearUsersres = function() {
  return this.setUsersres(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.S_LoginResByUser_1001.prototype.hasUsersres = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.C_LoginResByPhone_1002.prototype.toObject = function(opt_includeInstance) {
  return proto.C_LoginResByPhone_1002.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.C_LoginResByPhone_1002} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_LoginResByPhone_1002.toObject = function(includeInstance, msg) {
  var f, obj = {
    tel: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pwd: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.C_LoginResByPhone_1002}
 */
proto.C_LoginResByPhone_1002.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.C_LoginResByPhone_1002;
  return proto.C_LoginResByPhone_1002.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.C_LoginResByPhone_1002} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.C_LoginResByPhone_1002}
 */
proto.C_LoginResByPhone_1002.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTel(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPwd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.C_LoginResByPhone_1002.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.C_LoginResByPhone_1002.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.C_LoginResByPhone_1002} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_LoginResByPhone_1002.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPwd();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string tel = 1;
 * @return {string}
 */
proto.C_LoginResByPhone_1002.prototype.getTel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_LoginResByPhone_1002} returns this
 */
proto.C_LoginResByPhone_1002.prototype.setTel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string pwd = 2;
 * @return {string}
 */
proto.C_LoginResByPhone_1002.prototype.getPwd = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_LoginResByPhone_1002} returns this
 */
proto.C_LoginResByPhone_1002.prototype.setPwd = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.S_LoginResByPhone_1003.prototype.toObject = function(opt_includeInstance) {
  return proto.S_LoginResByPhone_1003.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.S_LoginResByPhone_1003} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_LoginResByPhone_1003.toObject = function(includeInstance, msg) {
  var f, obj = {
    usersres: (f = msg.getUsersres()) && proto.UsersRes.toObject(includeInstance, f),
    retobj: (f = msg.getRetobj()) && proto.RetObj.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.S_LoginResByPhone_1003}
 */
proto.S_LoginResByPhone_1003.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.S_LoginResByPhone_1003;
  return proto.S_LoginResByPhone_1003.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.S_LoginResByPhone_1003} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.S_LoginResByPhone_1003}
 */
proto.S_LoginResByPhone_1003.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.UsersRes;
      reader.readMessage(value,proto.UsersRes.deserializeBinaryFromReader);
      msg.setUsersres(value);
      break;
    case 2:
      var value = new proto.RetObj;
      reader.readMessage(value,proto.RetObj.deserializeBinaryFromReader);
      msg.setRetobj(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.S_LoginResByPhone_1003.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.S_LoginResByPhone_1003.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.S_LoginResByPhone_1003} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_LoginResByPhone_1003.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsersres();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.UsersRes.serializeBinaryToWriter
    );
  }
  f = message.getRetobj();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.RetObj.serializeBinaryToWriter
    );
  }
};


/**
 * optional UsersRes usersRes = 1;
 * @return {?proto.UsersRes}
 */
proto.S_LoginResByPhone_1003.prototype.getUsersres = function() {
  return /** @type{?proto.UsersRes} */ (
    jspb.Message.getWrapperField(this, proto.UsersRes, 1));
};


/**
 * @param {?proto.UsersRes|undefined} value
 * @return {!proto.S_LoginResByPhone_1003} returns this
*/
proto.S_LoginResByPhone_1003.prototype.setUsersres = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.S_LoginResByPhone_1003} returns this
 */
proto.S_LoginResByPhone_1003.prototype.clearUsersres = function() {
  return this.setUsersres(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.S_LoginResByPhone_1003.prototype.hasUsersres = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RetObj retObj = 2;
 * @return {?proto.RetObj}
 */
proto.S_LoginResByPhone_1003.prototype.getRetobj = function() {
  return /** @type{?proto.RetObj} */ (
    jspb.Message.getWrapperField(this, proto.RetObj, 2));
};


/**
 * @param {?proto.RetObj|undefined} value
 * @return {!proto.S_LoginResByPhone_1003} returns this
*/
proto.S_LoginResByPhone_1003.prototype.setRetobj = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.S_LoginResByPhone_1003} returns this
 */
proto.S_LoginResByPhone_1003.prototype.clearRetobj = function() {
  return this.setRetobj(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.S_LoginResByPhone_1003.prototype.hasRetobj = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.C_ChangePwd_1004.prototype.toObject = function(opt_includeInstance) {
  return proto.C_ChangePwd_1004.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.C_ChangePwd_1004} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_ChangePwd_1004.toObject = function(includeInstance, msg) {
  var f, obj = {
    tel: jspb.Message.getFieldWithDefault(msg, 1, ""),
    yzm: jspb.Message.getFieldWithDefault(msg, 2, ""),
    newpwd: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.C_ChangePwd_1004}
 */
proto.C_ChangePwd_1004.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.C_ChangePwd_1004;
  return proto.C_ChangePwd_1004.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.C_ChangePwd_1004} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.C_ChangePwd_1004}
 */
proto.C_ChangePwd_1004.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTel(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setYzm(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNewpwd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.C_ChangePwd_1004.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.C_ChangePwd_1004.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.C_ChangePwd_1004} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_ChangePwd_1004.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getYzm();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNewpwd();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string tel = 1;
 * @return {string}
 */
proto.C_ChangePwd_1004.prototype.getTel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_ChangePwd_1004} returns this
 */
proto.C_ChangePwd_1004.prototype.setTel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string yzm = 2;
 * @return {string}
 */
proto.C_ChangePwd_1004.prototype.getYzm = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_ChangePwd_1004} returns this
 */
proto.C_ChangePwd_1004.prototype.setYzm = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string newPwd = 3;
 * @return {string}
 */
proto.C_ChangePwd_1004.prototype.getNewpwd = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_ChangePwd_1004} returns this
 */
proto.C_ChangePwd_1004.prototype.setNewpwd = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.S_ChangePwd_1005.prototype.toObject = function(opt_includeInstance) {
  return proto.S_ChangePwd_1005.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.S_ChangePwd_1005} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_ChangePwd_1005.toObject = function(includeInstance, msg) {
  var f, obj = {
    retobj: (f = msg.getRetobj()) && proto.RetObj.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.S_ChangePwd_1005}
 */
proto.S_ChangePwd_1005.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.S_ChangePwd_1005;
  return proto.S_ChangePwd_1005.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.S_ChangePwd_1005} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.S_ChangePwd_1005}
 */
proto.S_ChangePwd_1005.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.RetObj;
      reader.readMessage(value,proto.RetObj.deserializeBinaryFromReader);
      msg.setRetobj(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.S_ChangePwd_1005.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.S_ChangePwd_1005.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.S_ChangePwd_1005} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_ChangePwd_1005.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRetobj();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.RetObj.serializeBinaryToWriter
    );
  }
};


/**
 * optional RetObj retObj = 1;
 * @return {?proto.RetObj}
 */
proto.S_ChangePwd_1005.prototype.getRetobj = function() {
  return /** @type{?proto.RetObj} */ (
    jspb.Message.getWrapperField(this, proto.RetObj, 1));
};


/**
 * @param {?proto.RetObj|undefined} value
 * @return {!proto.S_ChangePwd_1005} returns this
*/
proto.S_ChangePwd_1005.prototype.setRetobj = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.S_ChangePwd_1005} returns this
 */
proto.S_ChangePwd_1005.prototype.clearRetobj = function() {
  return this.setRetobj(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.S_ChangePwd_1005.prototype.hasRetobj = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.C_SaveUserInfo_1006.prototype.toObject = function(opt_includeInstance) {
  return proto.C_SaveUserInfo_1006.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.C_SaveUserInfo_1006} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_SaveUserInfo_1006.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    ssp: jspb.Message.getFieldWithDefault(msg, 5, ""),
    examyear: jspb.Message.getFieldWithDefault(msg, 6, ""),
    examprescore: jspb.Message.getFieldWithDefault(msg, 7, ""),
    role: jspb.Message.getFieldWithDefault(msg, 8, ""),
    examsubject: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.C_SaveUserInfo_1006}
 */
proto.C_SaveUserInfo_1006.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.C_SaveUserInfo_1006;
  return proto.C_SaveUserInfo_1006.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.C_SaveUserInfo_1006} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.C_SaveUserInfo_1006}
 */
proto.C_SaveUserInfo_1006.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSsp(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setExamyear(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setExamprescore(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setRole(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setExamsubject(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.C_SaveUserInfo_1006.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.C_SaveUserInfo_1006.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.C_SaveUserInfo_1006} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_SaveUserInfo_1006.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
  f = message.getSsp();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getExamyear();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getExamprescore();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getRole();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getExamsubject();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional fixed64 id = 1;
 * @return {number}
 */
proto.C_SaveUserInfo_1006.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_SaveUserInfo_1006} returns this
 */
proto.C_SaveUserInfo_1006.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string ssp = 5;
 * @return {string}
 */
proto.C_SaveUserInfo_1006.prototype.getSsp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_SaveUserInfo_1006} returns this
 */
proto.C_SaveUserInfo_1006.prototype.setSsp = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string examYear = 6;
 * @return {string}
 */
proto.C_SaveUserInfo_1006.prototype.getExamyear = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_SaveUserInfo_1006} returns this
 */
proto.C_SaveUserInfo_1006.prototype.setExamyear = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string examPreScore = 7;
 * @return {string}
 */
proto.C_SaveUserInfo_1006.prototype.getExamprescore = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_SaveUserInfo_1006} returns this
 */
proto.C_SaveUserInfo_1006.prototype.setExamprescore = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string role = 8;
 * @return {string}
 */
proto.C_SaveUserInfo_1006.prototype.getRole = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_SaveUserInfo_1006} returns this
 */
proto.C_SaveUserInfo_1006.prototype.setRole = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string examSubject = 9;
 * @return {string}
 */
proto.C_SaveUserInfo_1006.prototype.getExamsubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_SaveUserInfo_1006} returns this
 */
proto.C_SaveUserInfo_1006.prototype.setExamsubject = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.S_SaveUserInfo_1007.prototype.toObject = function(opt_includeInstance) {
  return proto.S_SaveUserInfo_1007.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.S_SaveUserInfo_1007} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_SaveUserInfo_1007.toObject = function(includeInstance, msg) {
  var f, obj = {
    retobj: (f = msg.getRetobj()) && proto.RetObj.toObject(includeInstance, f),
    usersres: (f = msg.getUsersres()) && proto.UsersRes.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.S_SaveUserInfo_1007}
 */
proto.S_SaveUserInfo_1007.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.S_SaveUserInfo_1007;
  return proto.S_SaveUserInfo_1007.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.S_SaveUserInfo_1007} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.S_SaveUserInfo_1007}
 */
proto.S_SaveUserInfo_1007.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.RetObj;
      reader.readMessage(value,proto.RetObj.deserializeBinaryFromReader);
      msg.setRetobj(value);
      break;
    case 2:
      var value = new proto.UsersRes;
      reader.readMessage(value,proto.UsersRes.deserializeBinaryFromReader);
      msg.setUsersres(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.S_SaveUserInfo_1007.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.S_SaveUserInfo_1007.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.S_SaveUserInfo_1007} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_SaveUserInfo_1007.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRetobj();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.RetObj.serializeBinaryToWriter
    );
  }
  f = message.getUsersres();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.UsersRes.serializeBinaryToWriter
    );
  }
};


/**
 * optional RetObj retObj = 1;
 * @return {?proto.RetObj}
 */
proto.S_SaveUserInfo_1007.prototype.getRetobj = function() {
  return /** @type{?proto.RetObj} */ (
    jspb.Message.getWrapperField(this, proto.RetObj, 1));
};


/**
 * @param {?proto.RetObj|undefined} value
 * @return {!proto.S_SaveUserInfo_1007} returns this
*/
proto.S_SaveUserInfo_1007.prototype.setRetobj = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.S_SaveUserInfo_1007} returns this
 */
proto.S_SaveUserInfo_1007.prototype.clearRetobj = function() {
  return this.setRetobj(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.S_SaveUserInfo_1007.prototype.hasRetobj = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional UsersRes usersRes = 2;
 * @return {?proto.UsersRes}
 */
proto.S_SaveUserInfo_1007.prototype.getUsersres = function() {
  return /** @type{?proto.UsersRes} */ (
    jspb.Message.getWrapperField(this, proto.UsersRes, 2));
};


/**
 * @param {?proto.UsersRes|undefined} value
 * @return {!proto.S_SaveUserInfo_1007} returns this
*/
proto.S_SaveUserInfo_1007.prototype.setUsersres = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.S_SaveUserInfo_1007} returns this
 */
proto.S_SaveUserInfo_1007.prototype.clearUsersres = function() {
  return this.setUsersres(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.S_SaveUserInfo_1007.prototype.hasUsersres = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.C_GetSchoolStoreUpResList_1008.prototype.toObject = function(opt_includeInstance) {
  return proto.C_GetSchoolStoreUpResList_1008.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.C_GetSchoolStoreUpResList_1008} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_GetSchoolStoreUpResList_1008.toObject = function(includeInstance, msg) {
  var f, obj = {
    userid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.C_GetSchoolStoreUpResList_1008}
 */
proto.C_GetSchoolStoreUpResList_1008.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.C_GetSchoolStoreUpResList_1008;
  return proto.C_GetSchoolStoreUpResList_1008.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.C_GetSchoolStoreUpResList_1008} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.C_GetSchoolStoreUpResList_1008}
 */
proto.C_GetSchoolStoreUpResList_1008.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setUserid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.C_GetSchoolStoreUpResList_1008.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.C_GetSchoolStoreUpResList_1008.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.C_GetSchoolStoreUpResList_1008} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_GetSchoolStoreUpResList_1008.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserid();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
};


/**
 * optional fixed64 userID = 1;
 * @return {number}
 */
proto.C_GetSchoolStoreUpResList_1008.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_GetSchoolStoreUpResList_1008} returns this
 */
proto.C_GetSchoolStoreUpResList_1008.prototype.setUserid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.S_GetSchoolStoreUpResList_1009.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.S_GetSchoolStoreUpResList_1009.prototype.toObject = function(opt_includeInstance) {
  return proto.S_GetSchoolStoreUpResList_1009.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.S_GetSchoolStoreUpResList_1009} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_GetSchoolStoreUpResList_1009.toObject = function(includeInstance, msg) {
  var f, obj = {
    schoolstoreupreslistList: jspb.Message.toObjectList(msg.getSchoolstoreupreslistList(),
    proto.SchoolStoreUpRes.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.S_GetSchoolStoreUpResList_1009}
 */
proto.S_GetSchoolStoreUpResList_1009.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.S_GetSchoolStoreUpResList_1009;
  return proto.S_GetSchoolStoreUpResList_1009.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.S_GetSchoolStoreUpResList_1009} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.S_GetSchoolStoreUpResList_1009}
 */
proto.S_GetSchoolStoreUpResList_1009.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.SchoolStoreUpRes;
      reader.readMessage(value,proto.SchoolStoreUpRes.deserializeBinaryFromReader);
      msg.addSchoolstoreupreslist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.S_GetSchoolStoreUpResList_1009.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.S_GetSchoolStoreUpResList_1009.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.S_GetSchoolStoreUpResList_1009} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_GetSchoolStoreUpResList_1009.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchoolstoreupreslistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.SchoolStoreUpRes.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SchoolStoreUpRes schoolStoreUpResList = 1;
 * @return {!Array<!proto.SchoolStoreUpRes>}
 */
proto.S_GetSchoolStoreUpResList_1009.prototype.getSchoolstoreupreslistList = function() {
  return /** @type{!Array<!proto.SchoolStoreUpRes>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.SchoolStoreUpRes, 1));
};


/**
 * @param {!Array<!proto.SchoolStoreUpRes>} value
 * @return {!proto.S_GetSchoolStoreUpResList_1009} returns this
*/
proto.S_GetSchoolStoreUpResList_1009.prototype.setSchoolstoreupreslistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.SchoolStoreUpRes=} opt_value
 * @param {number=} opt_index
 * @return {!proto.SchoolStoreUpRes}
 */
proto.S_GetSchoolStoreUpResList_1009.prototype.addSchoolstoreupreslist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.SchoolStoreUpRes, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.S_GetSchoolStoreUpResList_1009} returns this
 */
proto.S_GetSchoolStoreUpResList_1009.prototype.clearSchoolstoreupreslistList = function() {
  return this.setSchoolstoreupreslistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.C_GetDisciplineStoreUpResList_1020.prototype.toObject = function(opt_includeInstance) {
  return proto.C_GetDisciplineStoreUpResList_1020.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.C_GetDisciplineStoreUpResList_1020} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_GetDisciplineStoreUpResList_1020.toObject = function(includeInstance, msg) {
  var f, obj = {
    userid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.C_GetDisciplineStoreUpResList_1020}
 */
proto.C_GetDisciplineStoreUpResList_1020.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.C_GetDisciplineStoreUpResList_1020;
  return proto.C_GetDisciplineStoreUpResList_1020.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.C_GetDisciplineStoreUpResList_1020} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.C_GetDisciplineStoreUpResList_1020}
 */
proto.C_GetDisciplineStoreUpResList_1020.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setUserid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.C_GetDisciplineStoreUpResList_1020.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.C_GetDisciplineStoreUpResList_1020.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.C_GetDisciplineStoreUpResList_1020} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_GetDisciplineStoreUpResList_1020.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserid();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
};


/**
 * optional fixed64 userID = 1;
 * @return {number}
 */
proto.C_GetDisciplineStoreUpResList_1020.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_GetDisciplineStoreUpResList_1020} returns this
 */
proto.C_GetDisciplineStoreUpResList_1020.prototype.setUserid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.S_GetDisciplineStoreUpResList_1021.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.S_GetDisciplineStoreUpResList_1021.prototype.toObject = function(opt_includeInstance) {
  return proto.S_GetDisciplineStoreUpResList_1021.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.S_GetDisciplineStoreUpResList_1021} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_GetDisciplineStoreUpResList_1021.toObject = function(includeInstance, msg) {
  var f, obj = {
    disciplinestoreupreslisList: jspb.Message.toObjectList(msg.getDisciplinestoreupreslisList(),
    proto.DisciplineStoreUpRes.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.S_GetDisciplineStoreUpResList_1021}
 */
proto.S_GetDisciplineStoreUpResList_1021.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.S_GetDisciplineStoreUpResList_1021;
  return proto.S_GetDisciplineStoreUpResList_1021.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.S_GetDisciplineStoreUpResList_1021} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.S_GetDisciplineStoreUpResList_1021}
 */
proto.S_GetDisciplineStoreUpResList_1021.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.DisciplineStoreUpRes;
      reader.readMessage(value,proto.DisciplineStoreUpRes.deserializeBinaryFromReader);
      msg.addDisciplinestoreupreslis(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.S_GetDisciplineStoreUpResList_1021.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.S_GetDisciplineStoreUpResList_1021.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.S_GetDisciplineStoreUpResList_1021} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_GetDisciplineStoreUpResList_1021.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDisciplinestoreupreslisList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.DisciplineStoreUpRes.serializeBinaryToWriter
    );
  }
};


/**
 * repeated DisciplineStoreUpRes disciplineStoreUpResLis = 1;
 * @return {!Array<!proto.DisciplineStoreUpRes>}
 */
proto.S_GetDisciplineStoreUpResList_1021.prototype.getDisciplinestoreupreslisList = function() {
  return /** @type{!Array<!proto.DisciplineStoreUpRes>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.DisciplineStoreUpRes, 1));
};


/**
 * @param {!Array<!proto.DisciplineStoreUpRes>} value
 * @return {!proto.S_GetDisciplineStoreUpResList_1021} returns this
*/
proto.S_GetDisciplineStoreUpResList_1021.prototype.setDisciplinestoreupreslisList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.DisciplineStoreUpRes=} opt_value
 * @param {number=} opt_index
 * @return {!proto.DisciplineStoreUpRes}
 */
proto.S_GetDisciplineStoreUpResList_1021.prototype.addDisciplinestoreupreslis = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.DisciplineStoreUpRes, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.S_GetDisciplineStoreUpResList_1021} returns this
 */
proto.S_GetDisciplineStoreUpResList_1021.prototype.clearDisciplinestoreupreslisList = function() {
  return this.setDisciplinestoreupreslisList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.C_GetSchoolContrastResList_1022.prototype.toObject = function(opt_includeInstance) {
  return proto.C_GetSchoolContrastResList_1022.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.C_GetSchoolContrastResList_1022} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_GetSchoolContrastResList_1022.toObject = function(includeInstance, msg) {
  var f, obj = {
    userid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.C_GetSchoolContrastResList_1022}
 */
proto.C_GetSchoolContrastResList_1022.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.C_GetSchoolContrastResList_1022;
  return proto.C_GetSchoolContrastResList_1022.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.C_GetSchoolContrastResList_1022} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.C_GetSchoolContrastResList_1022}
 */
proto.C_GetSchoolContrastResList_1022.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setUserid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.C_GetSchoolContrastResList_1022.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.C_GetSchoolContrastResList_1022.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.C_GetSchoolContrastResList_1022} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_GetSchoolContrastResList_1022.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserid();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
};


/**
 * optional fixed64 userID = 1;
 * @return {number}
 */
proto.C_GetSchoolContrastResList_1022.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_GetSchoolContrastResList_1022} returns this
 */
proto.C_GetSchoolContrastResList_1022.prototype.setUserid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.S_GetSchoolContrastResList_1023.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.S_GetSchoolContrastResList_1023.prototype.toObject = function(opt_includeInstance) {
  return proto.S_GetSchoolContrastResList_1023.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.S_GetSchoolContrastResList_1023} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_GetSchoolContrastResList_1023.toObject = function(includeInstance, msg) {
  var f, obj = {
    schoolcontrastreslistList: jspb.Message.toObjectList(msg.getSchoolcontrastreslistList(),
    proto.SchoolContrastRes.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.S_GetSchoolContrastResList_1023}
 */
proto.S_GetSchoolContrastResList_1023.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.S_GetSchoolContrastResList_1023;
  return proto.S_GetSchoolContrastResList_1023.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.S_GetSchoolContrastResList_1023} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.S_GetSchoolContrastResList_1023}
 */
proto.S_GetSchoolContrastResList_1023.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.SchoolContrastRes;
      reader.readMessage(value,proto.SchoolContrastRes.deserializeBinaryFromReader);
      msg.addSchoolcontrastreslist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.S_GetSchoolContrastResList_1023.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.S_GetSchoolContrastResList_1023.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.S_GetSchoolContrastResList_1023} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_GetSchoolContrastResList_1023.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchoolcontrastreslistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.SchoolContrastRes.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SchoolContrastRes schoolContrastResList = 1;
 * @return {!Array<!proto.SchoolContrastRes>}
 */
proto.S_GetSchoolContrastResList_1023.prototype.getSchoolcontrastreslistList = function() {
  return /** @type{!Array<!proto.SchoolContrastRes>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.SchoolContrastRes, 1));
};


/**
 * @param {!Array<!proto.SchoolContrastRes>} value
 * @return {!proto.S_GetSchoolContrastResList_1023} returns this
*/
proto.S_GetSchoolContrastResList_1023.prototype.setSchoolcontrastreslistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.SchoolContrastRes=} opt_value
 * @param {number=} opt_index
 * @return {!proto.SchoolContrastRes}
 */
proto.S_GetSchoolContrastResList_1023.prototype.addSchoolcontrastreslist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.SchoolContrastRes, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.S_GetSchoolContrastResList_1023} returns this
 */
proto.S_GetSchoolContrastResList_1023.prototype.clearSchoolcontrastreslistList = function() {
  return this.setSchoolcontrastreslistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.C_GetDisciplineContrastResList_1024.prototype.toObject = function(opt_includeInstance) {
  return proto.C_GetDisciplineContrastResList_1024.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.C_GetDisciplineContrastResList_1024} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_GetDisciplineContrastResList_1024.toObject = function(includeInstance, msg) {
  var f, obj = {
    userid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.C_GetDisciplineContrastResList_1024}
 */
proto.C_GetDisciplineContrastResList_1024.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.C_GetDisciplineContrastResList_1024;
  return proto.C_GetDisciplineContrastResList_1024.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.C_GetDisciplineContrastResList_1024} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.C_GetDisciplineContrastResList_1024}
 */
proto.C_GetDisciplineContrastResList_1024.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setUserid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.C_GetDisciplineContrastResList_1024.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.C_GetDisciplineContrastResList_1024.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.C_GetDisciplineContrastResList_1024} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_GetDisciplineContrastResList_1024.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserid();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
};


/**
 * optional fixed64 userID = 1;
 * @return {number}
 */
proto.C_GetDisciplineContrastResList_1024.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_GetDisciplineContrastResList_1024} returns this
 */
proto.C_GetDisciplineContrastResList_1024.prototype.setUserid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.S_GetDisciplineContrastResList_1025.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.S_GetDisciplineContrastResList_1025.prototype.toObject = function(opt_includeInstance) {
  return proto.S_GetDisciplineContrastResList_1025.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.S_GetDisciplineContrastResList_1025} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_GetDisciplineContrastResList_1025.toObject = function(includeInstance, msg) {
  var f, obj = {
    disciplinecontrastresList: jspb.Message.toObjectList(msg.getDisciplinecontrastresList(),
    proto.DisciplineContrastRes.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.S_GetDisciplineContrastResList_1025}
 */
proto.S_GetDisciplineContrastResList_1025.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.S_GetDisciplineContrastResList_1025;
  return proto.S_GetDisciplineContrastResList_1025.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.S_GetDisciplineContrastResList_1025} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.S_GetDisciplineContrastResList_1025}
 */
proto.S_GetDisciplineContrastResList_1025.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.DisciplineContrastRes;
      reader.readMessage(value,proto.DisciplineContrastRes.deserializeBinaryFromReader);
      msg.addDisciplinecontrastres(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.S_GetDisciplineContrastResList_1025.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.S_GetDisciplineContrastResList_1025.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.S_GetDisciplineContrastResList_1025} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_GetDisciplineContrastResList_1025.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDisciplinecontrastresList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.DisciplineContrastRes.serializeBinaryToWriter
    );
  }
};


/**
 * repeated DisciplineContrastRes disciplineContrastRes = 1;
 * @return {!Array<!proto.DisciplineContrastRes>}
 */
proto.S_GetDisciplineContrastResList_1025.prototype.getDisciplinecontrastresList = function() {
  return /** @type{!Array<!proto.DisciplineContrastRes>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.DisciplineContrastRes, 1));
};


/**
 * @param {!Array<!proto.DisciplineContrastRes>} value
 * @return {!proto.S_GetDisciplineContrastResList_1025} returns this
*/
proto.S_GetDisciplineContrastResList_1025.prototype.setDisciplinecontrastresList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.DisciplineContrastRes=} opt_value
 * @param {number=} opt_index
 * @return {!proto.DisciplineContrastRes}
 */
proto.S_GetDisciplineContrastResList_1025.prototype.addDisciplinecontrastres = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.DisciplineContrastRes, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.S_GetDisciplineContrastResList_1025} returns this
 */
proto.S_GetDisciplineContrastResList_1025.prototype.clearDisciplinecontrastresList = function() {
  return this.setDisciplinecontrastresList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.C_SaveAssessment_1026.prototype.toObject = function(opt_includeInstance) {
  return proto.C_SaveAssessment_1026.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.C_SaveAssessment_1026} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_SaveAssessment_1026.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    examprescore: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.C_SaveAssessment_1026}
 */
proto.C_SaveAssessment_1026.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.C_SaveAssessment_1026;
  return proto.C_SaveAssessment_1026.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.C_SaveAssessment_1026} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.C_SaveAssessment_1026}
 */
proto.C_SaveAssessment_1026.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setExamprescore(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.C_SaveAssessment_1026.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.C_SaveAssessment_1026.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.C_SaveAssessment_1026} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_SaveAssessment_1026.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
  f = message.getExamprescore();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional fixed64 id = 1;
 * @return {number}
 */
proto.C_SaveAssessment_1026.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_SaveAssessment_1026} returns this
 */
proto.C_SaveAssessment_1026.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string examPreScore = 7;
 * @return {string}
 */
proto.C_SaveAssessment_1026.prototype.getExamprescore = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_SaveAssessment_1026} returns this
 */
proto.C_SaveAssessment_1026.prototype.setExamprescore = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.S_SaveAssessment_1027.prototype.toObject = function(opt_includeInstance) {
  return proto.S_SaveAssessment_1027.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.S_SaveAssessment_1027} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_SaveAssessment_1027.toObject = function(includeInstance, msg) {
  var f, obj = {
    retobj: (f = msg.getRetobj()) && proto.RetObj.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.S_SaveAssessment_1027}
 */
proto.S_SaveAssessment_1027.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.S_SaveAssessment_1027;
  return proto.S_SaveAssessment_1027.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.S_SaveAssessment_1027} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.S_SaveAssessment_1027}
 */
proto.S_SaveAssessment_1027.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 7:
      var value = new proto.RetObj;
      reader.readMessage(value,proto.RetObj.deserializeBinaryFromReader);
      msg.setRetobj(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.S_SaveAssessment_1027.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.S_SaveAssessment_1027.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.S_SaveAssessment_1027} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_SaveAssessment_1027.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRetobj();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.RetObj.serializeBinaryToWriter
    );
  }
};


/**
 * optional RetObj retObj = 7;
 * @return {?proto.RetObj}
 */
proto.S_SaveAssessment_1027.prototype.getRetobj = function() {
  return /** @type{?proto.RetObj} */ (
    jspb.Message.getWrapperField(this, proto.RetObj, 7));
};


/**
 * @param {?proto.RetObj|undefined} value
 * @return {!proto.S_SaveAssessment_1027} returns this
*/
proto.S_SaveAssessment_1027.prototype.setRetobj = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.S_SaveAssessment_1027} returns this
 */
proto.S_SaveAssessment_1027.prototype.clearRetobj = function() {
  return this.setRetobj(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.S_SaveAssessment_1027.prototype.hasRetobj = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.C_SaveUserInfo_1028.prototype.toObject = function(opt_includeInstance) {
  return proto.C_SaveUserInfo_1028.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.C_SaveUserInfo_1028} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_SaveUserInfo_1028.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    examsubject: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.C_SaveUserInfo_1028}
 */
proto.C_SaveUserInfo_1028.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.C_SaveUserInfo_1028;
  return proto.C_SaveUserInfo_1028.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.C_SaveUserInfo_1028} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.C_SaveUserInfo_1028}
 */
proto.C_SaveUserInfo_1028.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setExamsubject(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.C_SaveUserInfo_1028.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.C_SaveUserInfo_1028.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.C_SaveUserInfo_1028} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_SaveUserInfo_1028.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
  f = message.getExamsubject();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional fixed64 id = 1;
 * @return {number}
 */
proto.C_SaveUserInfo_1028.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_SaveUserInfo_1028} returns this
 */
proto.C_SaveUserInfo_1028.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string examSubject = 7;
 * @return {string}
 */
proto.C_SaveUserInfo_1028.prototype.getExamsubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_SaveUserInfo_1028} returns this
 */
proto.C_SaveUserInfo_1028.prototype.setExamsubject = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.S_SaveUserInfo_1029.prototype.toObject = function(opt_includeInstance) {
  return proto.S_SaveUserInfo_1029.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.S_SaveUserInfo_1029} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_SaveUserInfo_1029.toObject = function(includeInstance, msg) {
  var f, obj = {
    retobj: (f = msg.getRetobj()) && proto.RetObj.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.S_SaveUserInfo_1029}
 */
proto.S_SaveUserInfo_1029.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.S_SaveUserInfo_1029;
  return proto.S_SaveUserInfo_1029.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.S_SaveUserInfo_1029} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.S_SaveUserInfo_1029}
 */
proto.S_SaveUserInfo_1029.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 7:
      var value = new proto.RetObj;
      reader.readMessage(value,proto.RetObj.deserializeBinaryFromReader);
      msg.setRetobj(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.S_SaveUserInfo_1029.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.S_SaveUserInfo_1029.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.S_SaveUserInfo_1029} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_SaveUserInfo_1029.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRetobj();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.RetObj.serializeBinaryToWriter
    );
  }
};


/**
 * optional RetObj retObj = 7;
 * @return {?proto.RetObj}
 */
proto.S_SaveUserInfo_1029.prototype.getRetobj = function() {
  return /** @type{?proto.RetObj} */ (
    jspb.Message.getWrapperField(this, proto.RetObj, 7));
};


/**
 * @param {?proto.RetObj|undefined} value
 * @return {!proto.S_SaveUserInfo_1029} returns this
*/
proto.S_SaveUserInfo_1029.prototype.setRetobj = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.S_SaveUserInfo_1029} returns this
 */
proto.S_SaveUserInfo_1029.prototype.clearRetobj = function() {
  return this.setRetobj(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.S_SaveUserInfo_1029.prototype.hasRetobj = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RetObj.prototype.toObject = function(opt_includeInstance) {
  return proto.RetObj.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RetObj} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.RetObj.toObject = function(includeInstance, msg) {
  var f, obj = {
    rescode: jspb.Message.getFieldWithDefault(msg, 1, 0),
    resinfo: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RetObj}
 */
proto.RetObj.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RetObj;
  return proto.RetObj.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RetObj} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RetObj}
 */
proto.RetObj.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setRescode(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setResinfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RetObj.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.RetObj.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.RetObj} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.RetObj.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRescode();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
  f = message.getResinfo();
  if (f !== 0) {
    writer.writeFixed64(
      2,
      f
    );
  }
};


/**
 * optional fixed64 resCode = 1;
 * @return {number}
 */
proto.RetObj.prototype.getRescode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.RetObj} returns this
 */
proto.RetObj.prototype.setRescode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional fixed64 resInfo = 2;
 * @return {number}
 */
proto.RetObj.prototype.getResinfo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.RetObj} returns this
 */
proto.RetObj.prototype.setResinfo = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.UsersRes.prototype.toObject = function(opt_includeInstance) {
  return proto.UsersRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.UsersRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.UsersRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    tel: jspb.Message.getFieldWithDefault(msg, 2, ""),
    picpath1: jspb.Message.getFieldWithDefault(msg, 3, ""),
    pwd: jspb.Message.getFieldWithDefault(msg, 4, ""),
    ssp: jspb.Message.getFieldWithDefault(msg, 5, ""),
    examyear: jspb.Message.getFieldWithDefault(msg, 6, ""),
    examprescore: jspb.Message.getFieldWithDefault(msg, 7, ""),
    role: jspb.Message.getFieldWithDefault(msg, 8, ""),
    examsubject: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.UsersRes}
 */
proto.UsersRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.UsersRes;
  return proto.UsersRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.UsersRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.UsersRes}
 */
proto.UsersRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTel(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPicpath1(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPwd(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSsp(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setExamyear(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setExamprescore(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setRole(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setExamsubject(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.UsersRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.UsersRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.UsersRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.UsersRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
  f = message.getTel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPicpath1();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPwd();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSsp();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getExamyear();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getExamprescore();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getRole();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getExamsubject();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional fixed64 id = 1;
 * @return {number}
 */
proto.UsersRes.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.UsersRes} returns this
 */
proto.UsersRes.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string tel = 2;
 * @return {string}
 */
proto.UsersRes.prototype.getTel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.UsersRes} returns this
 */
proto.UsersRes.prototype.setTel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string picPath1 = 3;
 * @return {string}
 */
proto.UsersRes.prototype.getPicpath1 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.UsersRes} returns this
 */
proto.UsersRes.prototype.setPicpath1 = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string pwd = 4;
 * @return {string}
 */
proto.UsersRes.prototype.getPwd = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.UsersRes} returns this
 */
proto.UsersRes.prototype.setPwd = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string ssp = 5;
 * @return {string}
 */
proto.UsersRes.prototype.getSsp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.UsersRes} returns this
 */
proto.UsersRes.prototype.setSsp = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string examYear = 6;
 * @return {string}
 */
proto.UsersRes.prototype.getExamyear = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.UsersRes} returns this
 */
proto.UsersRes.prototype.setExamyear = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string examPreScore = 7;
 * @return {string}
 */
proto.UsersRes.prototype.getExamprescore = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.UsersRes} returns this
 */
proto.UsersRes.prototype.setExamprescore = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string role = 8;
 * @return {string}
 */
proto.UsersRes.prototype.getRole = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.UsersRes} returns this
 */
proto.UsersRes.prototype.setRole = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string examSubject = 9;
 * @return {string}
 */
proto.UsersRes.prototype.getExamsubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.UsersRes} returns this
 */
proto.UsersRes.prototype.setExamsubject = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SchoolContrastRes.prototype.toObject = function(opt_includeInstance) {
  return proto.SchoolContrastRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SchoolContrastRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SchoolContrastRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    schoolid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    schoolname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    addtime: jspb.Message.getFieldWithDefault(msg, 3, ""),
    userid: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SchoolContrastRes}
 */
proto.SchoolContrastRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SchoolContrastRes;
  return proto.SchoolContrastRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SchoolContrastRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SchoolContrastRes}
 */
proto.SchoolContrastRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setSchoolid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchoolname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddtime(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SchoolContrastRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SchoolContrastRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SchoolContrastRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SchoolContrastRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchoolid();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
  f = message.getSchoolname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAddtime();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional fixed64 schoolId = 1;
 * @return {number}
 */
proto.SchoolContrastRes.prototype.getSchoolid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.SchoolContrastRes} returns this
 */
proto.SchoolContrastRes.prototype.setSchoolid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string schoolName = 2;
 * @return {string}
 */
proto.SchoolContrastRes.prototype.getSchoolname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.SchoolContrastRes} returns this
 */
proto.SchoolContrastRes.prototype.setSchoolname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string addTime = 3;
 * @return {string}
 */
proto.SchoolContrastRes.prototype.getAddtime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.SchoolContrastRes} returns this
 */
proto.SchoolContrastRes.prototype.setAddtime = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string userID = 4;
 * @return {string}
 */
proto.SchoolContrastRes.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.SchoolContrastRes} returns this
 */
proto.SchoolContrastRes.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DisciplineContrastRes.prototype.toObject = function(opt_includeInstance) {
  return proto.DisciplineContrastRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DisciplineContrastRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DisciplineContrastRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    zylid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    zyname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    addtime: jspb.Message.getFieldWithDefault(msg, 3, ""),
    userid: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DisciplineContrastRes}
 */
proto.DisciplineContrastRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DisciplineContrastRes;
  return proto.DisciplineContrastRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DisciplineContrastRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DisciplineContrastRes}
 */
proto.DisciplineContrastRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setZylid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setZyname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddtime(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DisciplineContrastRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DisciplineContrastRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DisciplineContrastRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DisciplineContrastRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getZylid();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
  f = message.getZyname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAddtime();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional fixed64 zylId = 1;
 * @return {number}
 */
proto.DisciplineContrastRes.prototype.getZylid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.DisciplineContrastRes} returns this
 */
proto.DisciplineContrastRes.prototype.setZylid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string zyName = 2;
 * @return {string}
 */
proto.DisciplineContrastRes.prototype.getZyname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.DisciplineContrastRes} returns this
 */
proto.DisciplineContrastRes.prototype.setZyname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string addTime = 3;
 * @return {string}
 */
proto.DisciplineContrastRes.prototype.getAddtime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.DisciplineContrastRes} returns this
 */
proto.DisciplineContrastRes.prototype.setAddtime = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string userID = 4;
 * @return {string}
 */
proto.DisciplineContrastRes.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.DisciplineContrastRes} returns this
 */
proto.DisciplineContrastRes.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SchoolStoreUpRes.prototype.toObject = function(opt_includeInstance) {
  return proto.SchoolStoreUpRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SchoolStoreUpRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SchoolStoreUpRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    schoolname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    addtime: jspb.Message.getFieldWithDefault(msg, 3, ""),
    userid: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SchoolStoreUpRes}
 */
proto.SchoolStoreUpRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SchoolStoreUpRes;
  return proto.SchoolStoreUpRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SchoolStoreUpRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SchoolStoreUpRes}
 */
proto.SchoolStoreUpRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchoolname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddtime(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SchoolStoreUpRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SchoolStoreUpRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SchoolStoreUpRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SchoolStoreUpRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
  f = message.getSchoolname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAddtime();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional fixed64 id = 1;
 * @return {number}
 */
proto.SchoolStoreUpRes.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.SchoolStoreUpRes} returns this
 */
proto.SchoolStoreUpRes.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string schoolName = 2;
 * @return {string}
 */
proto.SchoolStoreUpRes.prototype.getSchoolname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.SchoolStoreUpRes} returns this
 */
proto.SchoolStoreUpRes.prototype.setSchoolname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string addTime = 3;
 * @return {string}
 */
proto.SchoolStoreUpRes.prototype.getAddtime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.SchoolStoreUpRes} returns this
 */
proto.SchoolStoreUpRes.prototype.setAddtime = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string userID = 4;
 * @return {string}
 */
proto.SchoolStoreUpRes.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.SchoolStoreUpRes} returns this
 */
proto.SchoolStoreUpRes.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DisciplineStoreUpRes.prototype.toObject = function(opt_includeInstance) {
  return proto.DisciplineStoreUpRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DisciplineStoreUpRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DisciplineStoreUpRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    disciplinename: jspb.Message.getFieldWithDefault(msg, 2, ""),
    addtime: jspb.Message.getFieldWithDefault(msg, 3, ""),
    userid: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DisciplineStoreUpRes}
 */
proto.DisciplineStoreUpRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DisciplineStoreUpRes;
  return proto.DisciplineStoreUpRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DisciplineStoreUpRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DisciplineStoreUpRes}
 */
proto.DisciplineStoreUpRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisciplinename(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddtime(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DisciplineStoreUpRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DisciplineStoreUpRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DisciplineStoreUpRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DisciplineStoreUpRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
  f = message.getDisciplinename();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAddtime();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional fixed64 id = 1;
 * @return {number}
 */
proto.DisciplineStoreUpRes.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.DisciplineStoreUpRes} returns this
 */
proto.DisciplineStoreUpRes.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string disciplineName = 2;
 * @return {string}
 */
proto.DisciplineStoreUpRes.prototype.getDisciplinename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.DisciplineStoreUpRes} returns this
 */
proto.DisciplineStoreUpRes.prototype.setDisciplinename = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string addTime = 3;
 * @return {string}
 */
proto.DisciplineStoreUpRes.prototype.getAddtime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.DisciplineStoreUpRes} returns this
 */
proto.DisciplineStoreUpRes.prototype.setAddtime = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string userID = 4;
 * @return {string}
 */
proto.DisciplineStoreUpRes.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.DisciplineStoreUpRes} returns this
 */
proto.DisciplineStoreUpRes.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.C_GetSchoolInfoById_2000.prototype.toObject = function(opt_includeInstance) {
  return proto.C_GetSchoolInfoById_2000.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.C_GetSchoolInfoById_2000} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_GetSchoolInfoById_2000.toObject = function(includeInstance, msg) {
  var f, obj = {
    schoolid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.C_GetSchoolInfoById_2000}
 */
proto.C_GetSchoolInfoById_2000.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.C_GetSchoolInfoById_2000;
  return proto.C_GetSchoolInfoById_2000.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.C_GetSchoolInfoById_2000} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.C_GetSchoolInfoById_2000}
 */
proto.C_GetSchoolInfoById_2000.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setSchoolid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.C_GetSchoolInfoById_2000.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.C_GetSchoolInfoById_2000.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.C_GetSchoolInfoById_2000} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_GetSchoolInfoById_2000.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchoolid();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
};


/**
 * optional fixed64 schoolId = 1;
 * @return {number}
 */
proto.C_GetSchoolInfoById_2000.prototype.getSchoolid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_GetSchoolInfoById_2000} returns this
 */
proto.C_GetSchoolInfoById_2000.prototype.setSchoolid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.S_GetSchoolInfoById_2001.prototype.toObject = function(opt_includeInstance) {
  return proto.S_GetSchoolInfoById_2001.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.S_GetSchoolInfoById_2001} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_GetSchoolInfoById_2001.toObject = function(includeInstance, msg) {
  var f, obj = {
    schoolinfo: (f = msg.getSchoolinfo()) && proto.SchoolInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.S_GetSchoolInfoById_2001}
 */
proto.S_GetSchoolInfoById_2001.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.S_GetSchoolInfoById_2001;
  return proto.S_GetSchoolInfoById_2001.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.S_GetSchoolInfoById_2001} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.S_GetSchoolInfoById_2001}
 */
proto.S_GetSchoolInfoById_2001.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.SchoolInfo;
      reader.readMessage(value,proto.SchoolInfo.deserializeBinaryFromReader);
      msg.setSchoolinfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.S_GetSchoolInfoById_2001.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.S_GetSchoolInfoById_2001.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.S_GetSchoolInfoById_2001} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_GetSchoolInfoById_2001.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchoolinfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.SchoolInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional SchoolInfo schoolInfo = 1;
 * @return {?proto.SchoolInfo}
 */
proto.S_GetSchoolInfoById_2001.prototype.getSchoolinfo = function() {
  return /** @type{?proto.SchoolInfo} */ (
    jspb.Message.getWrapperField(this, proto.SchoolInfo, 1));
};


/**
 * @param {?proto.SchoolInfo|undefined} value
 * @return {!proto.S_GetSchoolInfoById_2001} returns this
*/
proto.S_GetSchoolInfoById_2001.prototype.setSchoolinfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.S_GetSchoolInfoById_2001} returns this
 */
proto.S_GetSchoolInfoById_2001.prototype.clearSchoolinfo = function() {
  return this.setSchoolinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.S_GetSchoolInfoById_2001.prototype.hasSchoolinfo = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.C_GetSchoolAdmitInfo_2002.prototype.toObject = function(opt_includeInstance) {
  return proto.C_GetSchoolAdmitInfo_2002.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.C_GetSchoolAdmitInfo_2002} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_GetSchoolAdmitInfo_2002.toObject = function(includeInstance, msg) {
  var f, obj = {
    schoolid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    year: jspb.Message.getFieldWithDefault(msg, 2, ""),
    province: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.C_GetSchoolAdmitInfo_2002}
 */
proto.C_GetSchoolAdmitInfo_2002.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.C_GetSchoolAdmitInfo_2002;
  return proto.C_GetSchoolAdmitInfo_2002.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.C_GetSchoolAdmitInfo_2002} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.C_GetSchoolAdmitInfo_2002}
 */
proto.C_GetSchoolAdmitInfo_2002.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setSchoolid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setYear(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvince(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.C_GetSchoolAdmitInfo_2002.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.C_GetSchoolAdmitInfo_2002.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.C_GetSchoolAdmitInfo_2002} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_GetSchoolAdmitInfo_2002.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchoolid();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
  f = message.getYear();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProvince();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional fixed64 schoolId = 1;
 * @return {number}
 */
proto.C_GetSchoolAdmitInfo_2002.prototype.getSchoolid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_GetSchoolAdmitInfo_2002} returns this
 */
proto.C_GetSchoolAdmitInfo_2002.prototype.setSchoolid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string year = 2;
 * @return {string}
 */
proto.C_GetSchoolAdmitInfo_2002.prototype.getYear = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetSchoolAdmitInfo_2002} returns this
 */
proto.C_GetSchoolAdmitInfo_2002.prototype.setYear = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string province = 3;
 * @return {string}
 */
proto.C_GetSchoolAdmitInfo_2002.prototype.getProvince = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetSchoolAdmitInfo_2002} returns this
 */
proto.C_GetSchoolAdmitInfo_2002.prototype.setProvince = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.S_GetSchoolAdmitInfo_2003.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.S_GetSchoolAdmitInfo_2003.prototype.toObject = function(opt_includeInstance) {
  return proto.S_GetSchoolAdmitInfo_2003.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.S_GetSchoolAdmitInfo_2003} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_GetSchoolAdmitInfo_2003.toObject = function(includeInstance, msg) {
  var f, obj = {
    schooladmitinfoList: jspb.Message.toObjectList(msg.getSchooladmitinfoList(),
    proto.SchoolAdmitInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.S_GetSchoolAdmitInfo_2003}
 */
proto.S_GetSchoolAdmitInfo_2003.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.S_GetSchoolAdmitInfo_2003;
  return proto.S_GetSchoolAdmitInfo_2003.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.S_GetSchoolAdmitInfo_2003} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.S_GetSchoolAdmitInfo_2003}
 */
proto.S_GetSchoolAdmitInfo_2003.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.SchoolAdmitInfo;
      reader.readMessage(value,proto.SchoolAdmitInfo.deserializeBinaryFromReader);
      msg.addSchooladmitinfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.S_GetSchoolAdmitInfo_2003.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.S_GetSchoolAdmitInfo_2003.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.S_GetSchoolAdmitInfo_2003} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_GetSchoolAdmitInfo_2003.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchooladmitinfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.SchoolAdmitInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SchoolAdmitInfo schoolAdmitInfo = 1;
 * @return {!Array<!proto.SchoolAdmitInfo>}
 */
proto.S_GetSchoolAdmitInfo_2003.prototype.getSchooladmitinfoList = function() {
  return /** @type{!Array<!proto.SchoolAdmitInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.SchoolAdmitInfo, 1));
};


/**
 * @param {!Array<!proto.SchoolAdmitInfo>} value
 * @return {!proto.S_GetSchoolAdmitInfo_2003} returns this
*/
proto.S_GetSchoolAdmitInfo_2003.prototype.setSchooladmitinfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.SchoolAdmitInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.SchoolAdmitInfo}
 */
proto.S_GetSchoolAdmitInfo_2003.prototype.addSchooladmitinfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.SchoolAdmitInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.S_GetSchoolAdmitInfo_2003} returns this
 */
proto.S_GetSchoolAdmitInfo_2003.prototype.clearSchooladmitinfoList = function() {
  return this.setSchooladmitinfoList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.C_GetZyAdmitInfo_2004.prototype.toObject = function(opt_includeInstance) {
  return proto.C_GetZyAdmitInfo_2004.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.C_GetZyAdmitInfo_2004} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_GetZyAdmitInfo_2004.toObject = function(includeInstance, msg) {
  var f, obj = {
    schoolid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    year: jspb.Message.getFieldWithDefault(msg, 2, ""),
    province: jspb.Message.getFieldWithDefault(msg, 3, ""),
    kelei: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.C_GetZyAdmitInfo_2004}
 */
proto.C_GetZyAdmitInfo_2004.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.C_GetZyAdmitInfo_2004;
  return proto.C_GetZyAdmitInfo_2004.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.C_GetZyAdmitInfo_2004} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.C_GetZyAdmitInfo_2004}
 */
proto.C_GetZyAdmitInfo_2004.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setSchoolid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setYear(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvince(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setKelei(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.C_GetZyAdmitInfo_2004.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.C_GetZyAdmitInfo_2004.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.C_GetZyAdmitInfo_2004} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_GetZyAdmitInfo_2004.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchoolid();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
  f = message.getYear();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProvince();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getKelei();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional fixed64 schoolId = 1;
 * @return {number}
 */
proto.C_GetZyAdmitInfo_2004.prototype.getSchoolid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_GetZyAdmitInfo_2004} returns this
 */
proto.C_GetZyAdmitInfo_2004.prototype.setSchoolid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string year = 2;
 * @return {string}
 */
proto.C_GetZyAdmitInfo_2004.prototype.getYear = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetZyAdmitInfo_2004} returns this
 */
proto.C_GetZyAdmitInfo_2004.prototype.setYear = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string province = 3;
 * @return {string}
 */
proto.C_GetZyAdmitInfo_2004.prototype.getProvince = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetZyAdmitInfo_2004} returns this
 */
proto.C_GetZyAdmitInfo_2004.prototype.setProvince = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string kelei = 4;
 * @return {string}
 */
proto.C_GetZyAdmitInfo_2004.prototype.getKelei = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetZyAdmitInfo_2004} returns this
 */
proto.C_GetZyAdmitInfo_2004.prototype.setKelei = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.S_GetZyAdmitInfo_2005.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.S_GetZyAdmitInfo_2005.prototype.toObject = function(opt_includeInstance) {
  return proto.S_GetZyAdmitInfo_2005.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.S_GetZyAdmitInfo_2005} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_GetZyAdmitInfo_2005.toObject = function(includeInstance, msg) {
  var f, obj = {
    zyadmitinfoList: jspb.Message.toObjectList(msg.getZyadmitinfoList(),
    proto.ZyAdmitInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.S_GetZyAdmitInfo_2005}
 */
proto.S_GetZyAdmitInfo_2005.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.S_GetZyAdmitInfo_2005;
  return proto.S_GetZyAdmitInfo_2005.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.S_GetZyAdmitInfo_2005} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.S_GetZyAdmitInfo_2005}
 */
proto.S_GetZyAdmitInfo_2005.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ZyAdmitInfo;
      reader.readMessage(value,proto.ZyAdmitInfo.deserializeBinaryFromReader);
      msg.addZyadmitinfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.S_GetZyAdmitInfo_2005.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.S_GetZyAdmitInfo_2005.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.S_GetZyAdmitInfo_2005} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_GetZyAdmitInfo_2005.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getZyadmitinfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ZyAdmitInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ZyAdmitInfo zyAdmitInfo = 1;
 * @return {!Array<!proto.ZyAdmitInfo>}
 */
proto.S_GetZyAdmitInfo_2005.prototype.getZyadmitinfoList = function() {
  return /** @type{!Array<!proto.ZyAdmitInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ZyAdmitInfo, 1));
};


/**
 * @param {!Array<!proto.ZyAdmitInfo>} value
 * @return {!proto.S_GetZyAdmitInfo_2005} returns this
*/
proto.S_GetZyAdmitInfo_2005.prototype.setZyadmitinfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ZyAdmitInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ZyAdmitInfo}
 */
proto.S_GetZyAdmitInfo_2005.prototype.addZyadmitinfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ZyAdmitInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.S_GetZyAdmitInfo_2005} returns this
 */
proto.S_GetZyAdmitInfo_2005.prototype.clearZyadmitinfoList = function() {
  return this.setZyadmitinfoList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.C_GetPlanRecruit_2006.prototype.toObject = function(opt_includeInstance) {
  return proto.C_GetPlanRecruit_2006.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.C_GetPlanRecruit_2006} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_GetPlanRecruit_2006.toObject = function(includeInstance, msg) {
  var f, obj = {
    schoolid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    year: jspb.Message.getFieldWithDefault(msg, 2, ""),
    province: jspb.Message.getFieldWithDefault(msg, 3, ""),
    kelei: jspb.Message.getFieldWithDefault(msg, 4, ""),
    pici: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.C_GetPlanRecruit_2006}
 */
proto.C_GetPlanRecruit_2006.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.C_GetPlanRecruit_2006;
  return proto.C_GetPlanRecruit_2006.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.C_GetPlanRecruit_2006} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.C_GetPlanRecruit_2006}
 */
proto.C_GetPlanRecruit_2006.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setSchoolid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setYear(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvince(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setKelei(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPici(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.C_GetPlanRecruit_2006.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.C_GetPlanRecruit_2006.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.C_GetPlanRecruit_2006} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_GetPlanRecruit_2006.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchoolid();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
  f = message.getYear();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProvince();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getKelei();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPici();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional fixed64 schoolId = 1;
 * @return {number}
 */
proto.C_GetPlanRecruit_2006.prototype.getSchoolid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_GetPlanRecruit_2006} returns this
 */
proto.C_GetPlanRecruit_2006.prototype.setSchoolid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string year = 2;
 * @return {string}
 */
proto.C_GetPlanRecruit_2006.prototype.getYear = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetPlanRecruit_2006} returns this
 */
proto.C_GetPlanRecruit_2006.prototype.setYear = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string province = 3;
 * @return {string}
 */
proto.C_GetPlanRecruit_2006.prototype.getProvince = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetPlanRecruit_2006} returns this
 */
proto.C_GetPlanRecruit_2006.prototype.setProvince = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string kelei = 4;
 * @return {string}
 */
proto.C_GetPlanRecruit_2006.prototype.getKelei = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetPlanRecruit_2006} returns this
 */
proto.C_GetPlanRecruit_2006.prototype.setKelei = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string pici = 5;
 * @return {string}
 */
proto.C_GetPlanRecruit_2006.prototype.getPici = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetPlanRecruit_2006} returns this
 */
proto.C_GetPlanRecruit_2006.prototype.setPici = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.S_GetPlanRecruit_2007.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.S_GetPlanRecruit_2007.prototype.toObject = function(opt_includeInstance) {
  return proto.S_GetPlanRecruit_2007.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.S_GetPlanRecruit_2007} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_GetPlanRecruit_2007.toObject = function(includeInstance, msg) {
  var f, obj = {
    planrecruitList: jspb.Message.toObjectList(msg.getPlanrecruitList(),
    proto.PlanRecruit.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.S_GetPlanRecruit_2007}
 */
proto.S_GetPlanRecruit_2007.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.S_GetPlanRecruit_2007;
  return proto.S_GetPlanRecruit_2007.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.S_GetPlanRecruit_2007} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.S_GetPlanRecruit_2007}
 */
proto.S_GetPlanRecruit_2007.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PlanRecruit;
      reader.readMessage(value,proto.PlanRecruit.deserializeBinaryFromReader);
      msg.addPlanrecruit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.S_GetPlanRecruit_2007.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.S_GetPlanRecruit_2007.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.S_GetPlanRecruit_2007} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_GetPlanRecruit_2007.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlanrecruitList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.PlanRecruit.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PlanRecruit planRecruit = 1;
 * @return {!Array<!proto.PlanRecruit>}
 */
proto.S_GetPlanRecruit_2007.prototype.getPlanrecruitList = function() {
  return /** @type{!Array<!proto.PlanRecruit>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PlanRecruit, 1));
};


/**
 * @param {!Array<!proto.PlanRecruit>} value
 * @return {!proto.S_GetPlanRecruit_2007} returns this
*/
proto.S_GetPlanRecruit_2007.prototype.setPlanrecruitList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.PlanRecruit=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PlanRecruit}
 */
proto.S_GetPlanRecruit_2007.prototype.addPlanrecruit = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.PlanRecruit, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.S_GetPlanRecruit_2007} returns this
 */
proto.S_GetPlanRecruit_2007.prototype.clearPlanrecruitList = function() {
  return this.setPlanrecruitList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.C_GetXkyqInfo_2008.prototype.toObject = function(opt_includeInstance) {
  return proto.C_GetXkyqInfo_2008.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.C_GetXkyqInfo_2008} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_GetXkyqInfo_2008.toObject = function(includeInstance, msg) {
  var f, obj = {
    schoolid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.C_GetXkyqInfo_2008}
 */
proto.C_GetXkyqInfo_2008.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.C_GetXkyqInfo_2008;
  return proto.C_GetXkyqInfo_2008.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.C_GetXkyqInfo_2008} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.C_GetXkyqInfo_2008}
 */
proto.C_GetXkyqInfo_2008.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setSchoolid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.C_GetXkyqInfo_2008.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.C_GetXkyqInfo_2008.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.C_GetXkyqInfo_2008} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_GetXkyqInfo_2008.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchoolid();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
};


/**
 * optional fixed64 schoolId = 1;
 * @return {number}
 */
proto.C_GetXkyqInfo_2008.prototype.getSchoolid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_GetXkyqInfo_2008} returns this
 */
proto.C_GetXkyqInfo_2008.prototype.setSchoolid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.S_GetXkyqInfo_2009.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.S_GetXkyqInfo_2009.prototype.toObject = function(opt_includeInstance) {
  return proto.S_GetXkyqInfo_2009.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.S_GetXkyqInfo_2009} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_GetXkyqInfo_2009.toObject = function(includeInstance, msg) {
  var f, obj = {
    xkyqinfoList: jspb.Message.toObjectList(msg.getXkyqinfoList(),
    proto.XkyqInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.S_GetXkyqInfo_2009}
 */
proto.S_GetXkyqInfo_2009.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.S_GetXkyqInfo_2009;
  return proto.S_GetXkyqInfo_2009.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.S_GetXkyqInfo_2009} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.S_GetXkyqInfo_2009}
 */
proto.S_GetXkyqInfo_2009.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.XkyqInfo;
      reader.readMessage(value,proto.XkyqInfo.deserializeBinaryFromReader);
      msg.addXkyqinfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.S_GetXkyqInfo_2009.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.S_GetXkyqInfo_2009.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.S_GetXkyqInfo_2009} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_GetXkyqInfo_2009.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getXkyqinfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.XkyqInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated XkyqInfo xkyqInfo = 1;
 * @return {!Array<!proto.XkyqInfo>}
 */
proto.S_GetXkyqInfo_2009.prototype.getXkyqinfoList = function() {
  return /** @type{!Array<!proto.XkyqInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.XkyqInfo, 1));
};


/**
 * @param {!Array<!proto.XkyqInfo>} value
 * @return {!proto.S_GetXkyqInfo_2009} returns this
*/
proto.S_GetXkyqInfo_2009.prototype.setXkyqinfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.XkyqInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.XkyqInfo}
 */
proto.S_GetXkyqInfo_2009.prototype.addXkyqinfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.XkyqInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.S_GetXkyqInfo_2009} returns this
 */
proto.S_GetXkyqInfo_2009.prototype.clearXkyqinfoList = function() {
  return this.setXkyqinfoList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.C_GetYxszInfo_2010.prototype.toObject = function(opt_includeInstance) {
  return proto.C_GetYxszInfo_2010.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.C_GetYxszInfo_2010} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_GetYxszInfo_2010.toObject = function(includeInstance, msg) {
  var f, obj = {
    schoolid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.C_GetYxszInfo_2010}
 */
proto.C_GetYxszInfo_2010.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.C_GetYxszInfo_2010;
  return proto.C_GetYxszInfo_2010.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.C_GetYxszInfo_2010} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.C_GetYxszInfo_2010}
 */
proto.C_GetYxszInfo_2010.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setSchoolid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.C_GetYxszInfo_2010.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.C_GetYxszInfo_2010.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.C_GetYxszInfo_2010} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_GetYxszInfo_2010.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchoolid();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
};


/**
 * optional fixed64 schoolId = 1;
 * @return {number}
 */
proto.C_GetYxszInfo_2010.prototype.getSchoolid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_GetYxszInfo_2010} returns this
 */
proto.C_GetYxszInfo_2010.prototype.setSchoolid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.S_GetYxszInfo_2011.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.S_GetYxszInfo_2011.prototype.toObject = function(opt_includeInstance) {
  return proto.S_GetYxszInfo_2011.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.S_GetYxszInfo_2011} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_GetYxszInfo_2011.toObject = function(includeInstance, msg) {
  var f, obj = {
    yxszinfoList: jspb.Message.toObjectList(msg.getYxszinfoList(),
    proto.YxszInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.S_GetYxszInfo_2011}
 */
proto.S_GetYxszInfo_2011.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.S_GetYxszInfo_2011;
  return proto.S_GetYxszInfo_2011.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.S_GetYxszInfo_2011} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.S_GetYxszInfo_2011}
 */
proto.S_GetYxszInfo_2011.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.YxszInfo;
      reader.readMessage(value,proto.YxszInfo.deserializeBinaryFromReader);
      msg.addYxszinfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.S_GetYxszInfo_2011.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.S_GetYxszInfo_2011.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.S_GetYxszInfo_2011} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_GetYxszInfo_2011.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getYxszinfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.YxszInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated YxszInfo yxszInfo = 1;
 * @return {!Array<!proto.YxszInfo>}
 */
proto.S_GetYxszInfo_2011.prototype.getYxszinfoList = function() {
  return /** @type{!Array<!proto.YxszInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.YxszInfo, 1));
};


/**
 * @param {!Array<!proto.YxszInfo>} value
 * @return {!proto.S_GetYxszInfo_2011} returns this
*/
proto.S_GetYxszInfo_2011.prototype.setYxszinfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.YxszInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.YxszInfo}
 */
proto.S_GetYxszInfo_2011.prototype.addYxszinfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.YxszInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.S_GetYxszInfo_2011} returns this
 */
proto.S_GetYxszInfo_2011.prototype.clearYxszinfoList = function() {
  return this.setYxszinfoList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.C_GetZsjzInfo_2012.prototype.toObject = function(opt_includeInstance) {
  return proto.C_GetZsjzInfo_2012.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.C_GetZsjzInfo_2012} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_GetZsjzInfo_2012.toObject = function(includeInstance, msg) {
  var f, obj = {
    schoolid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.C_GetZsjzInfo_2012}
 */
proto.C_GetZsjzInfo_2012.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.C_GetZsjzInfo_2012;
  return proto.C_GetZsjzInfo_2012.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.C_GetZsjzInfo_2012} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.C_GetZsjzInfo_2012}
 */
proto.C_GetZsjzInfo_2012.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setSchoolid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.C_GetZsjzInfo_2012.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.C_GetZsjzInfo_2012.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.C_GetZsjzInfo_2012} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_GetZsjzInfo_2012.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchoolid();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
};


/**
 * optional fixed64 schoolId = 1;
 * @return {number}
 */
proto.C_GetZsjzInfo_2012.prototype.getSchoolid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_GetZsjzInfo_2012} returns this
 */
proto.C_GetZsjzInfo_2012.prototype.setSchoolid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.S_GetZsjzInfo_2013.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.S_GetZsjzInfo_2013.prototype.toObject = function(opt_includeInstance) {
  return proto.S_GetZsjzInfo_2013.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.S_GetZsjzInfo_2013} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_GetZsjzInfo_2013.toObject = function(includeInstance, msg) {
  var f, obj = {
    zsjzinfoList: jspb.Message.toObjectList(msg.getZsjzinfoList(),
    proto.ZsjzInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.S_GetZsjzInfo_2013}
 */
proto.S_GetZsjzInfo_2013.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.S_GetZsjzInfo_2013;
  return proto.S_GetZsjzInfo_2013.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.S_GetZsjzInfo_2013} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.S_GetZsjzInfo_2013}
 */
proto.S_GetZsjzInfo_2013.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ZsjzInfo;
      reader.readMessage(value,proto.ZsjzInfo.deserializeBinaryFromReader);
      msg.addZsjzinfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.S_GetZsjzInfo_2013.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.S_GetZsjzInfo_2013.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.S_GetZsjzInfo_2013} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_GetZsjzInfo_2013.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getZsjzinfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ZsjzInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ZsjzInfo zsjzInfo = 1;
 * @return {!Array<!proto.ZsjzInfo>}
 */
proto.S_GetZsjzInfo_2013.prototype.getZsjzinfoList = function() {
  return /** @type{!Array<!proto.ZsjzInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ZsjzInfo, 1));
};


/**
 * @param {!Array<!proto.ZsjzInfo>} value
 * @return {!proto.S_GetZsjzInfo_2013} returns this
*/
proto.S_GetZsjzInfo_2013.prototype.setZsjzinfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ZsjzInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ZsjzInfo}
 */
proto.S_GetZsjzInfo_2013.prototype.addZsjzinfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ZsjzInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.S_GetZsjzInfo_2013} returns this
 */
proto.S_GetZsjzInfo_2013.prototype.clearZsjzinfoList = function() {
  return this.setZsjzinfoList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SchoolInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.SchoolInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SchoolInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SchoolInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    tel: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    logopath: jspb.Message.getFieldWithDefault(msg, 4, ""),
    type: jspb.Message.getFieldWithDefault(msg, 5, ""),
    level: jspb.Message.getFieldWithDefault(msg, 6, ""),
    province: jspb.Message.getFieldWithDefault(msg, 7, ""),
    email: jspb.Message.getFieldWithDefault(msg, 8, ""),
    schoolinfo: jspb.Message.getFieldWithDefault(msg, 9, ""),
    schoolmeddia: jspb.Message.getFieldWithDefault(msg, 10, ""),
    fengguang: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SchoolInfo}
 */
proto.SchoolInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SchoolInfo;
  return proto.SchoolInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SchoolInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SchoolInfo}
 */
proto.SchoolInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTel(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogopath(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setLevel(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvince(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchoolinfo(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchoolmeddia(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setFengguang(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SchoolInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SchoolInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SchoolInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SchoolInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
  f = message.getTel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLogopath();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getLevel();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getProvince();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getSchoolinfo();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getSchoolmeddia();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getFengguang();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional fixed64 id = 1;
 * @return {number}
 */
proto.SchoolInfo.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.SchoolInfo} returns this
 */
proto.SchoolInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string tel = 2;
 * @return {string}
 */
proto.SchoolInfo.prototype.getTel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.SchoolInfo} returns this
 */
proto.SchoolInfo.prototype.setTel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.SchoolInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.SchoolInfo} returns this
 */
proto.SchoolInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string logoPath = 4;
 * @return {string}
 */
proto.SchoolInfo.prototype.getLogopath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.SchoolInfo} returns this
 */
proto.SchoolInfo.prototype.setLogopath = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string type = 5;
 * @return {string}
 */
proto.SchoolInfo.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.SchoolInfo} returns this
 */
proto.SchoolInfo.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string level = 6;
 * @return {string}
 */
proto.SchoolInfo.prototype.getLevel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.SchoolInfo} returns this
 */
proto.SchoolInfo.prototype.setLevel = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string province = 7;
 * @return {string}
 */
proto.SchoolInfo.prototype.getProvince = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.SchoolInfo} returns this
 */
proto.SchoolInfo.prototype.setProvince = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string email = 8;
 * @return {string}
 */
proto.SchoolInfo.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.SchoolInfo} returns this
 */
proto.SchoolInfo.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string schoolInfo = 9;
 * @return {string}
 */
proto.SchoolInfo.prototype.getSchoolinfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.SchoolInfo} returns this
 */
proto.SchoolInfo.prototype.setSchoolinfo = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string schoolMeddia = 10;
 * @return {string}
 */
proto.SchoolInfo.prototype.getSchoolmeddia = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.SchoolInfo} returns this
 */
proto.SchoolInfo.prototype.setSchoolmeddia = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string fengguang = 11;
 * @return {string}
 */
proto.SchoolInfo.prototype.getFengguang = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.SchoolInfo} returns this
 */
proto.SchoolInfo.prototype.setFengguang = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ZyInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ZyInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ZyInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ZyInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, ""),
    level: jspb.Message.getFieldWithDefault(msg, 4, ""),
    yearlimit: jspb.Message.getFieldWithDefault(msg, 5, ""),
    studylev: jspb.Message.getFieldWithDefault(msg, 6, ""),
    requirement: jspb.Message.getFieldWithDefault(msg, 7, ""),
    zycode: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ZyInfo}
 */
proto.ZyInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ZyInfo;
  return proto.ZyInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ZyInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ZyInfo}
 */
proto.ZyInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLevel(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setYearlimit(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setStudylev(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequirement(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setZycode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ZyInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ZyInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ZyInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ZyInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLevel();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getYearlimit();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getStudylev();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getRequirement();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getZycode();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional fixed64 id = 1;
 * @return {number}
 */
proto.ZyInfo.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ZyInfo} returns this
 */
proto.ZyInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.ZyInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ZyInfo} returns this
 */
proto.ZyInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string type = 3;
 * @return {string}
 */
proto.ZyInfo.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ZyInfo} returns this
 */
proto.ZyInfo.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string level = 4;
 * @return {string}
 */
proto.ZyInfo.prototype.getLevel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ZyInfo} returns this
 */
proto.ZyInfo.prototype.setLevel = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string yearLimit = 5;
 * @return {string}
 */
proto.ZyInfo.prototype.getYearlimit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ZyInfo} returns this
 */
proto.ZyInfo.prototype.setYearlimit = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string studyLev = 6;
 * @return {string}
 */
proto.ZyInfo.prototype.getStudylev = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.ZyInfo} returns this
 */
proto.ZyInfo.prototype.setStudylev = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string requirement = 7;
 * @return {string}
 */
proto.ZyInfo.prototype.getRequirement = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.ZyInfo} returns this
 */
proto.ZyInfo.prototype.setRequirement = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string zyCode = 8;
 * @return {string}
 */
proto.ZyInfo.prototype.getZycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.ZyInfo} returns this
 */
proto.ZyInfo.prototype.setZycode = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SchoolAdmitInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.SchoolAdmitInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SchoolAdmitInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SchoolAdmitInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    schoolid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    zsnf: jspb.Message.getFieldWithDefault(msg, 3, ""),
    kelei: jspb.Message.getFieldWithDefault(msg, 4, ""),
    yylb: jspb.Message.getFieldWithDefault(msg, 5, ""),
    lqpc: jspb.Message.getFieldWithDefault(msg, 6, ""),
    higscore: jspb.Message.getFieldWithDefault(msg, 7, ""),
    avgscore: jspb.Message.getFieldWithDefault(msg, 8, ""),
    lowscore: jspb.Message.getFieldWithDefault(msg, 9, ""),
    lowseat: jspb.Message.getFieldWithDefault(msg, 10, ""),
    plancount: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SchoolAdmitInfo}
 */
proto.SchoolAdmitInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SchoolAdmitInfo;
  return proto.SchoolAdmitInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SchoolAdmitInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SchoolAdmitInfo}
 */
proto.SchoolAdmitInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setSchoolid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setZsnf(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setKelei(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setYylb(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setLqpc(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setHigscore(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setAvgscore(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setLowscore(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setLowseat(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlancount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SchoolAdmitInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SchoolAdmitInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SchoolAdmitInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SchoolAdmitInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
  f = message.getSchoolid();
  if (f !== 0) {
    writer.writeFixed64(
      2,
      f
    );
  }
  f = message.getZsnf();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getKelei();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getYylb();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getLqpc();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getHigscore();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getAvgscore();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getLowscore();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getLowseat();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getPlancount();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional fixed64 id = 1;
 * @return {number}
 */
proto.SchoolAdmitInfo.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.SchoolAdmitInfo} returns this
 */
proto.SchoolAdmitInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional fixed64 schoolId = 2;
 * @return {number}
 */
proto.SchoolAdmitInfo.prototype.getSchoolid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.SchoolAdmitInfo} returns this
 */
proto.SchoolAdmitInfo.prototype.setSchoolid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string zsnf = 3;
 * @return {string}
 */
proto.SchoolAdmitInfo.prototype.getZsnf = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.SchoolAdmitInfo} returns this
 */
proto.SchoolAdmitInfo.prototype.setZsnf = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string kelei = 4;
 * @return {string}
 */
proto.SchoolAdmitInfo.prototype.getKelei = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.SchoolAdmitInfo} returns this
 */
proto.SchoolAdmitInfo.prototype.setKelei = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string yylb = 5;
 * @return {string}
 */
proto.SchoolAdmitInfo.prototype.getYylb = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.SchoolAdmitInfo} returns this
 */
proto.SchoolAdmitInfo.prototype.setYylb = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string lqpc = 6;
 * @return {string}
 */
proto.SchoolAdmitInfo.prototype.getLqpc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.SchoolAdmitInfo} returns this
 */
proto.SchoolAdmitInfo.prototype.setLqpc = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string higScore = 7;
 * @return {string}
 */
proto.SchoolAdmitInfo.prototype.getHigscore = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.SchoolAdmitInfo} returns this
 */
proto.SchoolAdmitInfo.prototype.setHigscore = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string AvgScore = 8;
 * @return {string}
 */
proto.SchoolAdmitInfo.prototype.getAvgscore = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.SchoolAdmitInfo} returns this
 */
proto.SchoolAdmitInfo.prototype.setAvgscore = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string lowScore = 9;
 * @return {string}
 */
proto.SchoolAdmitInfo.prototype.getLowscore = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.SchoolAdmitInfo} returns this
 */
proto.SchoolAdmitInfo.prototype.setLowscore = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string lowSeat = 10;
 * @return {string}
 */
proto.SchoolAdmitInfo.prototype.getLowseat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.SchoolAdmitInfo} returns this
 */
proto.SchoolAdmitInfo.prototype.setLowseat = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string planCount = 11;
 * @return {string}
 */
proto.SchoolAdmitInfo.prototype.getPlancount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.SchoolAdmitInfo} returns this
 */
proto.SchoolAdmitInfo.prototype.setPlancount = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ZyAdmitInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ZyAdmitInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ZyAdmitInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ZyAdmitInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    zyid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    zyname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    zsnf: jspb.Message.getFieldWithDefault(msg, 4, ""),
    kelei: jspb.Message.getFieldWithDefault(msg, 5, ""),
    lqpc: jspb.Message.getFieldWithDefault(msg, 6, ""),
    higscore: jspb.Message.getFieldWithDefault(msg, 7, ""),
    avgscore: jspb.Message.getFieldWithDefault(msg, 8, ""),
    lowscore: jspb.Message.getFieldWithDefault(msg, 9, ""),
    lowseat: jspb.Message.getFieldWithDefault(msg, 10, ""),
    diff: jspb.Message.getFieldWithDefault(msg, 11, ""),
    plancount: jspb.Message.getFieldWithDefault(msg, 12, ""),
    schoolid: jspb.Message.getFieldWithDefault(msg, 13, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ZyAdmitInfo}
 */
proto.ZyAdmitInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ZyAdmitInfo;
  return proto.ZyAdmitInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ZyAdmitInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ZyAdmitInfo}
 */
proto.ZyAdmitInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setZyid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setZyname(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setZsnf(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setKelei(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setLqpc(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setHigscore(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setAvgscore(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setLowscore(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setLowseat(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setDiff(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlancount(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setSchoolid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ZyAdmitInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ZyAdmitInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ZyAdmitInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ZyAdmitInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
  f = message.getZyid();
  if (f !== 0) {
    writer.writeFixed64(
      2,
      f
    );
  }
  f = message.getZyname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getZsnf();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getKelei();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getLqpc();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getHigscore();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getAvgscore();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getLowscore();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getLowseat();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getDiff();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getPlancount();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getSchoolid();
  if (f !== 0) {
    writer.writeFixed64(
      13,
      f
    );
  }
};


/**
 * optional fixed64 id = 1;
 * @return {number}
 */
proto.ZyAdmitInfo.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ZyAdmitInfo} returns this
 */
proto.ZyAdmitInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional fixed64 zyId = 2;
 * @return {number}
 */
proto.ZyAdmitInfo.prototype.getZyid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ZyAdmitInfo} returns this
 */
proto.ZyAdmitInfo.prototype.setZyid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string zyName = 3;
 * @return {string}
 */
proto.ZyAdmitInfo.prototype.getZyname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ZyAdmitInfo} returns this
 */
proto.ZyAdmitInfo.prototype.setZyname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string zsnf = 4;
 * @return {string}
 */
proto.ZyAdmitInfo.prototype.getZsnf = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ZyAdmitInfo} returns this
 */
proto.ZyAdmitInfo.prototype.setZsnf = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string kelei = 5;
 * @return {string}
 */
proto.ZyAdmitInfo.prototype.getKelei = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ZyAdmitInfo} returns this
 */
proto.ZyAdmitInfo.prototype.setKelei = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string lqpc = 6;
 * @return {string}
 */
proto.ZyAdmitInfo.prototype.getLqpc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.ZyAdmitInfo} returns this
 */
proto.ZyAdmitInfo.prototype.setLqpc = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string higScore = 7;
 * @return {string}
 */
proto.ZyAdmitInfo.prototype.getHigscore = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.ZyAdmitInfo} returns this
 */
proto.ZyAdmitInfo.prototype.setHigscore = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string AvgScore = 8;
 * @return {string}
 */
proto.ZyAdmitInfo.prototype.getAvgscore = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.ZyAdmitInfo} returns this
 */
proto.ZyAdmitInfo.prototype.setAvgscore = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string lowScore = 9;
 * @return {string}
 */
proto.ZyAdmitInfo.prototype.getLowscore = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.ZyAdmitInfo} returns this
 */
proto.ZyAdmitInfo.prototype.setLowscore = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string lowSeat = 10;
 * @return {string}
 */
proto.ZyAdmitInfo.prototype.getLowseat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.ZyAdmitInfo} returns this
 */
proto.ZyAdmitInfo.prototype.setLowseat = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string diff = 11;
 * @return {string}
 */
proto.ZyAdmitInfo.prototype.getDiff = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.ZyAdmitInfo} returns this
 */
proto.ZyAdmitInfo.prototype.setDiff = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string planCount = 12;
 * @return {string}
 */
proto.ZyAdmitInfo.prototype.getPlancount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.ZyAdmitInfo} returns this
 */
proto.ZyAdmitInfo.prototype.setPlancount = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional fixed64 schoolId = 13;
 * @return {number}
 */
proto.ZyAdmitInfo.prototype.getSchoolid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.ZyAdmitInfo} returns this
 */
proto.ZyAdmitInfo.prototype.setSchoolid = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PlanRecruit.prototype.toObject = function(opt_includeInstance) {
  return proto.PlanRecruit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PlanRecruit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PlanRecruit.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    schoolid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    zyid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    zcode: jspb.Message.getFieldWithDefault(msg, 4, ""),
    zyname: jspb.Message.getFieldWithDefault(msg, 5, ""),
    plancount: jspb.Message.getFieldWithDefault(msg, 6, ""),
    zsnf: jspb.Message.getFieldWithDefault(msg, 7, ""),
    pici: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PlanRecruit}
 */
proto.PlanRecruit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PlanRecruit;
  return proto.PlanRecruit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PlanRecruit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PlanRecruit}
 */
proto.PlanRecruit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setSchoolid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setZyid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setZcode(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setZyname(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlancount(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setZsnf(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setPici(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PlanRecruit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PlanRecruit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PlanRecruit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PlanRecruit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
  f = message.getSchoolid();
  if (f !== 0) {
    writer.writeFixed64(
      2,
      f
    );
  }
  f = message.getZyid();
  if (f !== 0) {
    writer.writeFixed64(
      3,
      f
    );
  }
  f = message.getZcode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getZyname();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPlancount();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getZsnf();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getPici();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional fixed64 id = 1;
 * @return {number}
 */
proto.PlanRecruit.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PlanRecruit} returns this
 */
proto.PlanRecruit.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional fixed64 schoolId = 2;
 * @return {number}
 */
proto.PlanRecruit.prototype.getSchoolid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PlanRecruit} returns this
 */
proto.PlanRecruit.prototype.setSchoolid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional fixed64 zyId = 3;
 * @return {number}
 */
proto.PlanRecruit.prototype.getZyid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.PlanRecruit} returns this
 */
proto.PlanRecruit.prototype.setZyid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string zcode = 4;
 * @return {string}
 */
proto.PlanRecruit.prototype.getZcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.PlanRecruit} returns this
 */
proto.PlanRecruit.prototype.setZcode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string zyName = 5;
 * @return {string}
 */
proto.PlanRecruit.prototype.getZyname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.PlanRecruit} returns this
 */
proto.PlanRecruit.prototype.setZyname = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string planCount = 6;
 * @return {string}
 */
proto.PlanRecruit.prototype.getPlancount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.PlanRecruit} returns this
 */
proto.PlanRecruit.prototype.setPlancount = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string zsnf = 7;
 * @return {string}
 */
proto.PlanRecruit.prototype.getZsnf = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.PlanRecruit} returns this
 */
proto.PlanRecruit.prototype.setZsnf = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string pici = 8;
 * @return {string}
 */
proto.PlanRecruit.prototype.getPici = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.PlanRecruit} returns this
 */
proto.PlanRecruit.prototype.setPici = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.XkyqInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.XkyqInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.XkyqInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XkyqInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    schoolid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    zyid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    zyname: jspb.Message.getFieldWithDefault(msg, 4, ""),
    plancount: jspb.Message.getFieldWithDefault(msg, 5, ""),
    zsnf: jspb.Message.getFieldWithDefault(msg, 6, ""),
    pici: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.XkyqInfo}
 */
proto.XkyqInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.XkyqInfo;
  return proto.XkyqInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.XkyqInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.XkyqInfo}
 */
proto.XkyqInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setSchoolid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setZyid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setZyname(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlancount(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setZsnf(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPici(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.XkyqInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.XkyqInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.XkyqInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XkyqInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
  f = message.getSchoolid();
  if (f !== 0) {
    writer.writeFixed64(
      2,
      f
    );
  }
  f = message.getZyid();
  if (f !== 0) {
    writer.writeFixed64(
      3,
      f
    );
  }
  f = message.getZyname();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPlancount();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getZsnf();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPici();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional fixed64 id = 1;
 * @return {number}
 */
proto.XkyqInfo.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.XkyqInfo} returns this
 */
proto.XkyqInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional fixed64 schoolId = 2;
 * @return {number}
 */
proto.XkyqInfo.prototype.getSchoolid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.XkyqInfo} returns this
 */
proto.XkyqInfo.prototype.setSchoolid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional fixed64 zyId = 3;
 * @return {number}
 */
proto.XkyqInfo.prototype.getZyid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.XkyqInfo} returns this
 */
proto.XkyqInfo.prototype.setZyid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string zyName = 4;
 * @return {string}
 */
proto.XkyqInfo.prototype.getZyname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.XkyqInfo} returns this
 */
proto.XkyqInfo.prototype.setZyname = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string planCount = 5;
 * @return {string}
 */
proto.XkyqInfo.prototype.getPlancount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.XkyqInfo} returns this
 */
proto.XkyqInfo.prototype.setPlancount = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string zsnf = 6;
 * @return {string}
 */
proto.XkyqInfo.prototype.getZsnf = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.XkyqInfo} returns this
 */
proto.XkyqInfo.prototype.setZsnf = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string pici = 7;
 * @return {string}
 */
proto.XkyqInfo.prototype.getPici = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.XkyqInfo} returns this
 */
proto.XkyqInfo.prototype.setPici = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.YxszInfo.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.YxszInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.YxszInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.YxszInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.YxszInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    xyname: jspb.Message.getFieldWithDefault(msg, 1, 0),
    xkyqinfoList: jspb.Message.toObjectList(msg.getXkyqinfoList(),
    proto.XkyqInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.YxszInfo}
 */
proto.YxszInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.YxszInfo;
  return proto.YxszInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.YxszInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.YxszInfo}
 */
proto.YxszInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setXyname(value);
      break;
    case 2:
      var value = new proto.XkyqInfo;
      reader.readMessage(value,proto.XkyqInfo.deserializeBinaryFromReader);
      msg.addXkyqinfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.YxszInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.YxszInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.YxszInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.YxszInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getXyname();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
  f = message.getXkyqinfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.XkyqInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional fixed64 xyName = 1;
 * @return {number}
 */
proto.YxszInfo.prototype.getXyname = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.YxszInfo} returns this
 */
proto.YxszInfo.prototype.setXyname = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated XkyqInfo xkyqInfo = 2;
 * @return {!Array<!proto.XkyqInfo>}
 */
proto.YxszInfo.prototype.getXkyqinfoList = function() {
  return /** @type{!Array<!proto.XkyqInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.XkyqInfo, 2));
};


/**
 * @param {!Array<!proto.XkyqInfo>} value
 * @return {!proto.YxszInfo} returns this
*/
proto.YxszInfo.prototype.setXkyqinfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.XkyqInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.XkyqInfo}
 */
proto.YxszInfo.prototype.addXkyqinfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.XkyqInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.YxszInfo} returns this
 */
proto.YxszInfo.prototype.clearXkyqinfoList = function() {
  return this.setXkyqinfoList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ZsjzInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ZsjzInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ZsjzInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ZsjzInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    schoolid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    title: jspb.Message.getFieldWithDefault(msg, 3, 0),
    publishdate: jspb.Message.getFieldWithDefault(msg, 4, ""),
    content: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ZsjzInfo}
 */
proto.ZsjzInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ZsjzInfo;
  return proto.ZsjzInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ZsjzInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ZsjzInfo}
 */
proto.ZsjzInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setSchoolid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setTitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPublishdate(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ZsjzInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ZsjzInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ZsjzInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ZsjzInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
  f = message.getSchoolid();
  if (f !== 0) {
    writer.writeFixed64(
      2,
      f
    );
  }
  f = message.getTitle();
  if (f !== 0) {
    writer.writeFixed64(
      3,
      f
    );
  }
  f = message.getPublishdate();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional fixed64 id = 1;
 * @return {number}
 */
proto.ZsjzInfo.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ZsjzInfo} returns this
 */
proto.ZsjzInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional fixed64 schoolId = 2;
 * @return {number}
 */
proto.ZsjzInfo.prototype.getSchoolid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ZsjzInfo} returns this
 */
proto.ZsjzInfo.prototype.setSchoolid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional fixed64 title = 3;
 * @return {number}
 */
proto.ZsjzInfo.prototype.getTitle = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ZsjzInfo} returns this
 */
proto.ZsjzInfo.prototype.setTitle = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string publishDate = 4;
 * @return {string}
 */
proto.ZsjzInfo.prototype.getPublishdate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ZsjzInfo} returns this
 */
proto.ZsjzInfo.prototype.setPublishdate = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string content = 5;
 * @return {string}
 */
proto.ZsjzInfo.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ZsjzInfo} returns this
 */
proto.ZsjzInfo.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.C_GetZntjInfoList_3000.prototype.toObject = function(opt_includeInstance) {
  return proto.C_GetZntjInfoList_3000.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.C_GetZntjInfoList_3000} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_GetZntjInfoList_3000.toObject = function(includeInstance, msg) {
  var f, obj = {
    kelei: jspb.Message.getFieldWithDefault(msg, 1, ""),
    score: jspb.Message.getFieldWithDefault(msg, 2, 0),
    weishu: jspb.Message.getFieldWithDefault(msg, 3, 0),
    province: jspb.Message.getFieldWithDefault(msg, 4, ""),
    type: jspb.Message.getFieldWithDefault(msg, 5, ""),
    pici: jspb.Message.getFieldWithDefault(msg, 6, ""),
    cengci: jspb.Message.getFieldWithDefault(msg, 7, ""),
    startscore: jspb.Message.getFieldWithDefault(msg, 8, 0),
    endscore: jspb.Message.getFieldWithDefault(msg, 9, 0),
    page: jspb.Message.getFieldWithDefault(msg, 10, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 11, 0),
    sortfile: jspb.Message.getFieldWithDefault(msg, 12, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.C_GetZntjInfoList_3000}
 */
proto.C_GetZntjInfoList_3000.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.C_GetZntjInfoList_3000;
  return proto.C_GetZntjInfoList_3000.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.C_GetZntjInfoList_3000} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.C_GetZntjInfoList_3000}
 */
proto.C_GetZntjInfoList_3000.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKelei(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setScore(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWeishu(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvince(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPici(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCengci(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStartscore(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEndscore(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setSortfile(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.C_GetZntjInfoList_3000.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.C_GetZntjInfoList_3000.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.C_GetZntjInfoList_3000} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_GetZntjInfoList_3000.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKelei();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getScore();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getWeishu();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getProvince();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPici();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCengci();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getStartscore();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getEndscore();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getSortfile();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
};


/**
 * optional string kelei = 1;
 * @return {string}
 */
proto.C_GetZntjInfoList_3000.prototype.getKelei = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetZntjInfoList_3000} returns this
 */
proto.C_GetZntjInfoList_3000.prototype.setKelei = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 score = 2;
 * @return {number}
 */
proto.C_GetZntjInfoList_3000.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_GetZntjInfoList_3000} returns this
 */
proto.C_GetZntjInfoList_3000.prototype.setScore = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 weishu = 3;
 * @return {number}
 */
proto.C_GetZntjInfoList_3000.prototype.getWeishu = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_GetZntjInfoList_3000} returns this
 */
proto.C_GetZntjInfoList_3000.prototype.setWeishu = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string province = 4;
 * @return {string}
 */
proto.C_GetZntjInfoList_3000.prototype.getProvince = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetZntjInfoList_3000} returns this
 */
proto.C_GetZntjInfoList_3000.prototype.setProvince = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string type = 5;
 * @return {string}
 */
proto.C_GetZntjInfoList_3000.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetZntjInfoList_3000} returns this
 */
proto.C_GetZntjInfoList_3000.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string pici = 6;
 * @return {string}
 */
proto.C_GetZntjInfoList_3000.prototype.getPici = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetZntjInfoList_3000} returns this
 */
proto.C_GetZntjInfoList_3000.prototype.setPici = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string cengci = 7;
 * @return {string}
 */
proto.C_GetZntjInfoList_3000.prototype.getCengci = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetZntjInfoList_3000} returns this
 */
proto.C_GetZntjInfoList_3000.prototype.setCengci = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int32 startScore = 8;
 * @return {number}
 */
proto.C_GetZntjInfoList_3000.prototype.getStartscore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_GetZntjInfoList_3000} returns this
 */
proto.C_GetZntjInfoList_3000.prototype.setStartscore = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 endScore = 9;
 * @return {number}
 */
proto.C_GetZntjInfoList_3000.prototype.getEndscore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_GetZntjInfoList_3000} returns this
 */
proto.C_GetZntjInfoList_3000.prototype.setEndscore = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 page = 10;
 * @return {number}
 */
proto.C_GetZntjInfoList_3000.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_GetZntjInfoList_3000} returns this
 */
proto.C_GetZntjInfoList_3000.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 limit = 11;
 * @return {number}
 */
proto.C_GetZntjInfoList_3000.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_GetZntjInfoList_3000} returns this
 */
proto.C_GetZntjInfoList_3000.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional string sortFile = 12;
 * @return {string}
 */
proto.C_GetZntjInfoList_3000.prototype.getSortfile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetZntjInfoList_3000} returns this
 */
proto.C_GetZntjInfoList_3000.prototype.setSortfile = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.S_GetZntjInfoList_3001.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.S_GetZntjInfoList_3001.prototype.toObject = function(opt_includeInstance) {
  return proto.S_GetZntjInfoList_3001.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.S_GetZntjInfoList_3001} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_GetZntjInfoList_3001.toObject = function(includeInstance, msg) {
  var f, obj = {
    zntjinfoList: jspb.Message.toObjectList(msg.getZntjinfoList(),
    proto.ZntjInfo.toObject, includeInstance),
    paginginfo: (f = msg.getPaginginfo()) && proto.PagingInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.S_GetZntjInfoList_3001}
 */
proto.S_GetZntjInfoList_3001.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.S_GetZntjInfoList_3001;
  return proto.S_GetZntjInfoList_3001.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.S_GetZntjInfoList_3001} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.S_GetZntjInfoList_3001}
 */
proto.S_GetZntjInfoList_3001.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ZntjInfo;
      reader.readMessage(value,proto.ZntjInfo.deserializeBinaryFromReader);
      msg.addZntjinfo(value);
      break;
    case 2:
      var value = new proto.PagingInfo;
      reader.readMessage(value,proto.PagingInfo.deserializeBinaryFromReader);
      msg.setPaginginfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.S_GetZntjInfoList_3001.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.S_GetZntjInfoList_3001.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.S_GetZntjInfoList_3001} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_GetZntjInfoList_3001.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getZntjinfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ZntjInfo.serializeBinaryToWriter
    );
  }
  f = message.getPaginginfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.PagingInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ZntjInfo zntjInfo = 1;
 * @return {!Array<!proto.ZntjInfo>}
 */
proto.S_GetZntjInfoList_3001.prototype.getZntjinfoList = function() {
  return /** @type{!Array<!proto.ZntjInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ZntjInfo, 1));
};


/**
 * @param {!Array<!proto.ZntjInfo>} value
 * @return {!proto.S_GetZntjInfoList_3001} returns this
*/
proto.S_GetZntjInfoList_3001.prototype.setZntjinfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ZntjInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ZntjInfo}
 */
proto.S_GetZntjInfoList_3001.prototype.addZntjinfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ZntjInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.S_GetZntjInfoList_3001} returns this
 */
proto.S_GetZntjInfoList_3001.prototype.clearZntjinfoList = function() {
  return this.setZntjinfoList([]);
};


/**
 * optional PagingInfo pagingInfo = 2;
 * @return {?proto.PagingInfo}
 */
proto.S_GetZntjInfoList_3001.prototype.getPaginginfo = function() {
  return /** @type{?proto.PagingInfo} */ (
    jspb.Message.getWrapperField(this, proto.PagingInfo, 2));
};


/**
 * @param {?proto.PagingInfo|undefined} value
 * @return {!proto.S_GetZntjInfoList_3001} returns this
*/
proto.S_GetZntjInfoList_3001.prototype.setPaginginfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.S_GetZntjInfoList_3001} returns this
 */
proto.S_GetZntjInfoList_3001.prototype.clearPaginginfo = function() {
  return this.setPaginginfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.S_GetZntjInfoList_3001.prototype.hasPaginginfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.C_GetSeachSchoolList_3002.prototype.toObject = function(opt_includeInstance) {
  return proto.C_GetSeachSchoolList_3002.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.C_GetSeachSchoolList_3002} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_GetSeachSchoolList_3002.toObject = function(includeInstance, msg) {
  var f, obj = {
    schoolname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    province: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, ""),
    pici: jspb.Message.getFieldWithDefault(msg, 4, ""),
    cengci: jspb.Message.getFieldWithDefault(msg, 5, ""),
    startscore: jspb.Message.getFieldWithDefault(msg, 6, 0),
    endscore: jspb.Message.getFieldWithDefault(msg, 7, 0),
    page: jspb.Message.getFieldWithDefault(msg, 8, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 9, 0),
    sortfile: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.C_GetSeachSchoolList_3002}
 */
proto.C_GetSeachSchoolList_3002.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.C_GetSeachSchoolList_3002;
  return proto.C_GetSeachSchoolList_3002.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.C_GetSeachSchoolList_3002} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.C_GetSeachSchoolList_3002}
 */
proto.C_GetSeachSchoolList_3002.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchoolname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvince(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPici(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCengci(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStartscore(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEndscore(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setSortfile(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.C_GetSeachSchoolList_3002.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.C_GetSeachSchoolList_3002.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.C_GetSeachSchoolList_3002} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_GetSeachSchoolList_3002.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchoolname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProvince();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPici();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCengci();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getStartscore();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getEndscore();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getSortfile();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional string schoolName = 1;
 * @return {string}
 */
proto.C_GetSeachSchoolList_3002.prototype.getSchoolname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetSeachSchoolList_3002} returns this
 */
proto.C_GetSeachSchoolList_3002.prototype.setSchoolname = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string province = 2;
 * @return {string}
 */
proto.C_GetSeachSchoolList_3002.prototype.getProvince = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetSeachSchoolList_3002} returns this
 */
proto.C_GetSeachSchoolList_3002.prototype.setProvince = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string type = 3;
 * @return {string}
 */
proto.C_GetSeachSchoolList_3002.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetSeachSchoolList_3002} returns this
 */
proto.C_GetSeachSchoolList_3002.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string pici = 4;
 * @return {string}
 */
proto.C_GetSeachSchoolList_3002.prototype.getPici = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetSeachSchoolList_3002} returns this
 */
proto.C_GetSeachSchoolList_3002.prototype.setPici = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string cengci = 5;
 * @return {string}
 */
proto.C_GetSeachSchoolList_3002.prototype.getCengci = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetSeachSchoolList_3002} returns this
 */
proto.C_GetSeachSchoolList_3002.prototype.setCengci = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int64 startScore = 6;
 * @return {number}
 */
proto.C_GetSeachSchoolList_3002.prototype.getStartscore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_GetSeachSchoolList_3002} returns this
 */
proto.C_GetSeachSchoolList_3002.prototype.setStartscore = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 endScore = 7;
 * @return {number}
 */
proto.C_GetSeachSchoolList_3002.prototype.getEndscore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_GetSeachSchoolList_3002} returns this
 */
proto.C_GetSeachSchoolList_3002.prototype.setEndscore = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 page = 8;
 * @return {number}
 */
proto.C_GetSeachSchoolList_3002.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_GetSeachSchoolList_3002} returns this
 */
proto.C_GetSeachSchoolList_3002.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 limit = 9;
 * @return {number}
 */
proto.C_GetSeachSchoolList_3002.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_GetSeachSchoolList_3002} returns this
 */
proto.C_GetSeachSchoolList_3002.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional string sortFile = 10;
 * @return {string}
 */
proto.C_GetSeachSchoolList_3002.prototype.getSortfile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetSeachSchoolList_3002} returns this
 */
proto.C_GetSeachSchoolList_3002.prototype.setSortfile = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.S_GetSeachSchoolList_3003.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.S_GetSeachSchoolList_3003.prototype.toObject = function(opt_includeInstance) {
  return proto.S_GetSeachSchoolList_3003.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.S_GetSeachSchoolList_3003} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_GetSeachSchoolList_3003.toObject = function(includeInstance, msg) {
  var f, obj = {
    seachschoolList: jspb.Message.toObjectList(msg.getSeachschoolList(),
    proto.SeachSchool.toObject, includeInstance),
    paginginfo: (f = msg.getPaginginfo()) && proto.PagingInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.S_GetSeachSchoolList_3003}
 */
proto.S_GetSeachSchoolList_3003.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.S_GetSeachSchoolList_3003;
  return proto.S_GetSeachSchoolList_3003.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.S_GetSeachSchoolList_3003} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.S_GetSeachSchoolList_3003}
 */
proto.S_GetSeachSchoolList_3003.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.SeachSchool;
      reader.readMessage(value,proto.SeachSchool.deserializeBinaryFromReader);
      msg.addSeachschool(value);
      break;
    case 2:
      var value = new proto.PagingInfo;
      reader.readMessage(value,proto.PagingInfo.deserializeBinaryFromReader);
      msg.setPaginginfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.S_GetSeachSchoolList_3003.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.S_GetSeachSchoolList_3003.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.S_GetSeachSchoolList_3003} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_GetSeachSchoolList_3003.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSeachschoolList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.SeachSchool.serializeBinaryToWriter
    );
  }
  f = message.getPaginginfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.PagingInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SeachSchool seachSchool = 1;
 * @return {!Array<!proto.SeachSchool>}
 */
proto.S_GetSeachSchoolList_3003.prototype.getSeachschoolList = function() {
  return /** @type{!Array<!proto.SeachSchool>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.SeachSchool, 1));
};


/**
 * @param {!Array<!proto.SeachSchool>} value
 * @return {!proto.S_GetSeachSchoolList_3003} returns this
*/
proto.S_GetSeachSchoolList_3003.prototype.setSeachschoolList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.SeachSchool=} opt_value
 * @param {number=} opt_index
 * @return {!proto.SeachSchool}
 */
proto.S_GetSeachSchoolList_3003.prototype.addSeachschool = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.SeachSchool, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.S_GetSeachSchoolList_3003} returns this
 */
proto.S_GetSeachSchoolList_3003.prototype.clearSeachschoolList = function() {
  return this.setSeachschoolList([]);
};


/**
 * optional PagingInfo pagingInfo = 2;
 * @return {?proto.PagingInfo}
 */
proto.S_GetSeachSchoolList_3003.prototype.getPaginginfo = function() {
  return /** @type{?proto.PagingInfo} */ (
    jspb.Message.getWrapperField(this, proto.PagingInfo, 2));
};


/**
 * @param {?proto.PagingInfo|undefined} value
 * @return {!proto.S_GetSeachSchoolList_3003} returns this
*/
proto.S_GetSeachSchoolList_3003.prototype.setPaginginfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.S_GetSeachSchoolList_3003} returns this
 */
proto.S_GetSeachSchoolList_3003.prototype.clearPaginginfo = function() {
  return this.setPaginginfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.S_GetSeachSchoolList_3003.prototype.hasPaginginfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.C_GetSeachScoreList_3004.prototype.toObject = function(opt_includeInstance) {
  return proto.C_GetSeachScoreList_3004.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.C_GetSeachScoreList_3004} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_GetSeachScoreList_3004.toObject = function(includeInstance, msg) {
  var f, obj = {
    schoolname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    province: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, ""),
    pici: jspb.Message.getFieldWithDefault(msg, 4, ""),
    cengci: jspb.Message.getFieldWithDefault(msg, 5, ""),
    startscore: jspb.Message.getFieldWithDefault(msg, 6, 0),
    endscore: jspb.Message.getFieldWithDefault(msg, 7, 0),
    page: jspb.Message.getFieldWithDefault(msg, 8, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 9, 0),
    sortfile: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.C_GetSeachScoreList_3004}
 */
proto.C_GetSeachScoreList_3004.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.C_GetSeachScoreList_3004;
  return proto.C_GetSeachScoreList_3004.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.C_GetSeachScoreList_3004} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.C_GetSeachScoreList_3004}
 */
proto.C_GetSeachScoreList_3004.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchoolname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvince(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPici(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCengci(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStartscore(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEndscore(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setSortfile(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.C_GetSeachScoreList_3004.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.C_GetSeachScoreList_3004.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.C_GetSeachScoreList_3004} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_GetSeachScoreList_3004.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchoolname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProvince();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPici();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCengci();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getStartscore();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getEndscore();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getSortfile();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional string schoolName = 1;
 * @return {string}
 */
proto.C_GetSeachScoreList_3004.prototype.getSchoolname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetSeachScoreList_3004} returns this
 */
proto.C_GetSeachScoreList_3004.prototype.setSchoolname = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string province = 2;
 * @return {string}
 */
proto.C_GetSeachScoreList_3004.prototype.getProvince = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetSeachScoreList_3004} returns this
 */
proto.C_GetSeachScoreList_3004.prototype.setProvince = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string type = 3;
 * @return {string}
 */
proto.C_GetSeachScoreList_3004.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetSeachScoreList_3004} returns this
 */
proto.C_GetSeachScoreList_3004.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string pici = 4;
 * @return {string}
 */
proto.C_GetSeachScoreList_3004.prototype.getPici = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetSeachScoreList_3004} returns this
 */
proto.C_GetSeachScoreList_3004.prototype.setPici = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string cengci = 5;
 * @return {string}
 */
proto.C_GetSeachScoreList_3004.prototype.getCengci = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetSeachScoreList_3004} returns this
 */
proto.C_GetSeachScoreList_3004.prototype.setCengci = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int64 startScore = 6;
 * @return {number}
 */
proto.C_GetSeachScoreList_3004.prototype.getStartscore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_GetSeachScoreList_3004} returns this
 */
proto.C_GetSeachScoreList_3004.prototype.setStartscore = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 endScore = 7;
 * @return {number}
 */
proto.C_GetSeachScoreList_3004.prototype.getEndscore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_GetSeachScoreList_3004} returns this
 */
proto.C_GetSeachScoreList_3004.prototype.setEndscore = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 page = 8;
 * @return {number}
 */
proto.C_GetSeachScoreList_3004.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_GetSeachScoreList_3004} returns this
 */
proto.C_GetSeachScoreList_3004.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 limit = 9;
 * @return {number}
 */
proto.C_GetSeachScoreList_3004.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_GetSeachScoreList_3004} returns this
 */
proto.C_GetSeachScoreList_3004.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional string sortFile = 10;
 * @return {string}
 */
proto.C_GetSeachScoreList_3004.prototype.getSortfile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetSeachScoreList_3004} returns this
 */
proto.C_GetSeachScoreList_3004.prototype.setSortfile = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.S_GetSeachScoreList_3005.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.S_GetSeachScoreList_3005.prototype.toObject = function(opt_includeInstance) {
  return proto.S_GetSeachScoreList_3005.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.S_GetSeachScoreList_3005} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_GetSeachScoreList_3005.toObject = function(includeInstance, msg) {
  var f, obj = {
    seachscoreList: jspb.Message.toObjectList(msg.getSeachscoreList(),
    proto.SeachScore.toObject, includeInstance),
    paginginfo: (f = msg.getPaginginfo()) && proto.PagingInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.S_GetSeachScoreList_3005}
 */
proto.S_GetSeachScoreList_3005.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.S_GetSeachScoreList_3005;
  return proto.S_GetSeachScoreList_3005.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.S_GetSeachScoreList_3005} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.S_GetSeachScoreList_3005}
 */
proto.S_GetSeachScoreList_3005.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.SeachScore;
      reader.readMessage(value,proto.SeachScore.deserializeBinaryFromReader);
      msg.addSeachscore(value);
      break;
    case 2:
      var value = new proto.PagingInfo;
      reader.readMessage(value,proto.PagingInfo.deserializeBinaryFromReader);
      msg.setPaginginfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.S_GetSeachScoreList_3005.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.S_GetSeachScoreList_3005.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.S_GetSeachScoreList_3005} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_GetSeachScoreList_3005.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSeachscoreList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.SeachScore.serializeBinaryToWriter
    );
  }
  f = message.getPaginginfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.PagingInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SeachScore seachScore = 1;
 * @return {!Array<!proto.SeachScore>}
 */
proto.S_GetSeachScoreList_3005.prototype.getSeachscoreList = function() {
  return /** @type{!Array<!proto.SeachScore>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.SeachScore, 1));
};


/**
 * @param {!Array<!proto.SeachScore>} value
 * @return {!proto.S_GetSeachScoreList_3005} returns this
*/
proto.S_GetSeachScoreList_3005.prototype.setSeachscoreList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.SeachScore=} opt_value
 * @param {number=} opt_index
 * @return {!proto.SeachScore}
 */
proto.S_GetSeachScoreList_3005.prototype.addSeachscore = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.SeachScore, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.S_GetSeachScoreList_3005} returns this
 */
proto.S_GetSeachScoreList_3005.prototype.clearSeachscoreList = function() {
  return this.setSeachscoreList([]);
};


/**
 * optional PagingInfo pagingInfo = 2;
 * @return {?proto.PagingInfo}
 */
proto.S_GetSeachScoreList_3005.prototype.getPaginginfo = function() {
  return /** @type{?proto.PagingInfo} */ (
    jspb.Message.getWrapperField(this, proto.PagingInfo, 2));
};


/**
 * @param {?proto.PagingInfo|undefined} value
 * @return {!proto.S_GetSeachScoreList_3005} returns this
*/
proto.S_GetSeachScoreList_3005.prototype.setPaginginfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.S_GetSeachScoreList_3005} returns this
 */
proto.S_GetSeachScoreList_3005.prototype.clearPaginginfo = function() {
  return this.setPaginginfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.S_GetSeachScoreList_3005.prototype.hasPaginginfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.C_GetSeachSKYXList_3006.prototype.toObject = function(opt_includeInstance) {
  return proto.C_GetSeachSKYXList_3006.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.C_GetSeachSKYXList_3006} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_GetSeachSKYXList_3006.toObject = function(includeInstance, msg) {
  var f, obj = {
    province: jspb.Message.getFieldWithDefault(msg, 1, ""),
    kelei: jspb.Message.getFieldWithDefault(msg, 2, ""),
    years: jspb.Message.getFieldWithDefault(msg, 3, ""),
    page: jspb.Message.getFieldWithDefault(msg, 4, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.C_GetSeachSKYXList_3006}
 */
proto.C_GetSeachSKYXList_3006.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.C_GetSeachSKYXList_3006;
  return proto.C_GetSeachSKYXList_3006.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.C_GetSeachSKYXList_3006} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.C_GetSeachSKYXList_3006}
 */
proto.C_GetSeachSKYXList_3006.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvince(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setKelei(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setYears(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.C_GetSeachSKYXList_3006.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.C_GetSeachSKYXList_3006.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.C_GetSeachSKYXList_3006} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_GetSeachSKYXList_3006.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProvince();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getKelei();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getYears();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional string province = 1;
 * @return {string}
 */
proto.C_GetSeachSKYXList_3006.prototype.getProvince = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetSeachSKYXList_3006} returns this
 */
proto.C_GetSeachSKYXList_3006.prototype.setProvince = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string kelei = 2;
 * @return {string}
 */
proto.C_GetSeachSKYXList_3006.prototype.getKelei = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetSeachSKYXList_3006} returns this
 */
proto.C_GetSeachSKYXList_3006.prototype.setKelei = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string years = 3;
 * @return {string}
 */
proto.C_GetSeachSKYXList_3006.prototype.getYears = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetSeachSKYXList_3006} returns this
 */
proto.C_GetSeachSKYXList_3006.prototype.setYears = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 page = 4;
 * @return {number}
 */
proto.C_GetSeachSKYXList_3006.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_GetSeachSKYXList_3006} returns this
 */
proto.C_GetSeachSKYXList_3006.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 limit = 5;
 * @return {number}
 */
proto.C_GetSeachSKYXList_3006.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_GetSeachSKYXList_3006} returns this
 */
proto.C_GetSeachSKYXList_3006.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.S_GetSeachSKYXList_3007.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.S_GetSeachSKYXList_3007.prototype.toObject = function(opt_includeInstance) {
  return proto.S_GetSeachSKYXList_3007.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.S_GetSeachSKYXList_3007} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_GetSeachSKYXList_3007.toObject = function(includeInstance, msg) {
  var f, obj = {
    seachskyxList: jspb.Message.toObjectList(msg.getSeachskyxList(),
    proto.SeachSKYX.toObject, includeInstance),
    paginginfo: (f = msg.getPaginginfo()) && proto.PagingInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.S_GetSeachSKYXList_3007}
 */
proto.S_GetSeachSKYXList_3007.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.S_GetSeachSKYXList_3007;
  return proto.S_GetSeachSKYXList_3007.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.S_GetSeachSKYXList_3007} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.S_GetSeachSKYXList_3007}
 */
proto.S_GetSeachSKYXList_3007.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.SeachSKYX;
      reader.readMessage(value,proto.SeachSKYX.deserializeBinaryFromReader);
      msg.addSeachskyx(value);
      break;
    case 2:
      var value = new proto.PagingInfo;
      reader.readMessage(value,proto.PagingInfo.deserializeBinaryFromReader);
      msg.setPaginginfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.S_GetSeachSKYXList_3007.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.S_GetSeachSKYXList_3007.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.S_GetSeachSKYXList_3007} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_GetSeachSKYXList_3007.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSeachskyxList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.SeachSKYX.serializeBinaryToWriter
    );
  }
  f = message.getPaginginfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.PagingInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SeachSKYX seachSKYX = 1;
 * @return {!Array<!proto.SeachSKYX>}
 */
proto.S_GetSeachSKYXList_3007.prototype.getSeachskyxList = function() {
  return /** @type{!Array<!proto.SeachSKYX>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.SeachSKYX, 1));
};


/**
 * @param {!Array<!proto.SeachSKYX>} value
 * @return {!proto.S_GetSeachSKYXList_3007} returns this
*/
proto.S_GetSeachSKYXList_3007.prototype.setSeachskyxList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.SeachSKYX=} opt_value
 * @param {number=} opt_index
 * @return {!proto.SeachSKYX}
 */
proto.S_GetSeachSKYXList_3007.prototype.addSeachskyx = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.SeachSKYX, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.S_GetSeachSKYXList_3007} returns this
 */
proto.S_GetSeachSKYXList_3007.prototype.clearSeachskyxList = function() {
  return this.setSeachskyxList([]);
};


/**
 * optional PagingInfo pagingInfo = 2;
 * @return {?proto.PagingInfo}
 */
proto.S_GetSeachSKYXList_3007.prototype.getPaginginfo = function() {
  return /** @type{?proto.PagingInfo} */ (
    jspb.Message.getWrapperField(this, proto.PagingInfo, 2));
};


/**
 * @param {?proto.PagingInfo|undefined} value
 * @return {!proto.S_GetSeachSKYXList_3007} returns this
*/
proto.S_GetSeachSKYXList_3007.prototype.setPaginginfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.S_GetSeachSKYXList_3007} returns this
 */
proto.S_GetSeachSKYXList_3007.prototype.clearPaginginfo = function() {
  return this.setPaginginfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.S_GetSeachSKYXList_3007.prototype.hasPaginginfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.C_GetSeachYYPMList_3008.prototype.toObject = function(opt_includeInstance) {
  return proto.C_GetSeachYYPMList_3008.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.C_GetSeachYYPMList_3008} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_GetSeachYYPMList_3008.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    xueli: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, ""),
    cengci: jspb.Message.getFieldWithDefault(msg, 4, ""),
    startscore: jspb.Message.getFieldWithDefault(msg, 5, 0),
    endscore: jspb.Message.getFieldWithDefault(msg, 6, 0),
    page: jspb.Message.getFieldWithDefault(msg, 7, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 8, 0),
    diqu: jspb.Message.getFieldWithDefault(msg, 9, ""),
    sortfile: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.C_GetSeachYYPMList_3008}
 */
proto.C_GetSeachYYPMList_3008.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.C_GetSeachYYPMList_3008;
  return proto.C_GetSeachYYPMList_3008.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.C_GetSeachYYPMList_3008} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.C_GetSeachYYPMList_3008}
 */
proto.C_GetSeachYYPMList_3008.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setXueli(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCengci(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStartscore(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEndscore(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setDiqu(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setSortfile(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.C_GetSeachYYPMList_3008.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.C_GetSeachYYPMList_3008.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.C_GetSeachYYPMList_3008} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_GetSeachYYPMList_3008.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getXueli();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCengci();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getStartscore();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getEndscore();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getDiqu();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getSortfile();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.C_GetSeachYYPMList_3008.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetSeachYYPMList_3008} returns this
 */
proto.C_GetSeachYYPMList_3008.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string xueli = 2;
 * @return {string}
 */
proto.C_GetSeachYYPMList_3008.prototype.getXueli = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetSeachYYPMList_3008} returns this
 */
proto.C_GetSeachYYPMList_3008.prototype.setXueli = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string type = 3;
 * @return {string}
 */
proto.C_GetSeachYYPMList_3008.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetSeachYYPMList_3008} returns this
 */
proto.C_GetSeachYYPMList_3008.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string cengci = 4;
 * @return {string}
 */
proto.C_GetSeachYYPMList_3008.prototype.getCengci = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetSeachYYPMList_3008} returns this
 */
proto.C_GetSeachYYPMList_3008.prototype.setCengci = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 startScore = 5;
 * @return {number}
 */
proto.C_GetSeachYYPMList_3008.prototype.getStartscore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_GetSeachYYPMList_3008} returns this
 */
proto.C_GetSeachYYPMList_3008.prototype.setStartscore = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 endScore = 6;
 * @return {number}
 */
proto.C_GetSeachYYPMList_3008.prototype.getEndscore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_GetSeachYYPMList_3008} returns this
 */
proto.C_GetSeachYYPMList_3008.prototype.setEndscore = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 page = 7;
 * @return {number}
 */
proto.C_GetSeachYYPMList_3008.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_GetSeachYYPMList_3008} returns this
 */
proto.C_GetSeachYYPMList_3008.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 limit = 8;
 * @return {number}
 */
proto.C_GetSeachYYPMList_3008.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_GetSeachYYPMList_3008} returns this
 */
proto.C_GetSeachYYPMList_3008.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string diqu = 9;
 * @return {string}
 */
proto.C_GetSeachYYPMList_3008.prototype.getDiqu = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetSeachYYPMList_3008} returns this
 */
proto.C_GetSeachYYPMList_3008.prototype.setDiqu = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string sortFile = 10;
 * @return {string}
 */
proto.C_GetSeachYYPMList_3008.prototype.getSortfile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetSeachYYPMList_3008} returns this
 */
proto.C_GetSeachYYPMList_3008.prototype.setSortfile = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.S_GetSeachYYPMList_3009.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.S_GetSeachYYPMList_3009.prototype.toObject = function(opt_includeInstance) {
  return proto.S_GetSeachYYPMList_3009.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.S_GetSeachYYPMList_3009} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_GetSeachYYPMList_3009.toObject = function(includeInstance, msg) {
  var f, obj = {
    seachyypmList: jspb.Message.toObjectList(msg.getSeachyypmList(),
    proto.SeachYYPM.toObject, includeInstance),
    paginginfo: (f = msg.getPaginginfo()) && proto.PagingInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.S_GetSeachYYPMList_3009}
 */
proto.S_GetSeachYYPMList_3009.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.S_GetSeachYYPMList_3009;
  return proto.S_GetSeachYYPMList_3009.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.S_GetSeachYYPMList_3009} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.S_GetSeachYYPMList_3009}
 */
proto.S_GetSeachYYPMList_3009.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.SeachYYPM;
      reader.readMessage(value,proto.SeachYYPM.deserializeBinaryFromReader);
      msg.addSeachyypm(value);
      break;
    case 2:
      var value = new proto.PagingInfo;
      reader.readMessage(value,proto.PagingInfo.deserializeBinaryFromReader);
      msg.setPaginginfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.S_GetSeachYYPMList_3009.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.S_GetSeachYYPMList_3009.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.S_GetSeachYYPMList_3009} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_GetSeachYYPMList_3009.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSeachyypmList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.SeachYYPM.serializeBinaryToWriter
    );
  }
  f = message.getPaginginfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.PagingInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SeachYYPM SeachYYPM = 1;
 * @return {!Array<!proto.SeachYYPM>}
 */
proto.S_GetSeachYYPMList_3009.prototype.getSeachyypmList = function() {
  return /** @type{!Array<!proto.SeachYYPM>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.SeachYYPM, 1));
};


/**
 * @param {!Array<!proto.SeachYYPM>} value
 * @return {!proto.S_GetSeachYYPMList_3009} returns this
*/
proto.S_GetSeachYYPMList_3009.prototype.setSeachyypmList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.SeachYYPM=} opt_value
 * @param {number=} opt_index
 * @return {!proto.SeachYYPM}
 */
proto.S_GetSeachYYPMList_3009.prototype.addSeachyypm = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.SeachYYPM, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.S_GetSeachYYPMList_3009} returns this
 */
proto.S_GetSeachYYPMList_3009.prototype.clearSeachyypmList = function() {
  return this.setSeachyypmList([]);
};


/**
 * optional PagingInfo pagingInfo = 2;
 * @return {?proto.PagingInfo}
 */
proto.S_GetSeachYYPMList_3009.prototype.getPaginginfo = function() {
  return /** @type{?proto.PagingInfo} */ (
    jspb.Message.getWrapperField(this, proto.PagingInfo, 2));
};


/**
 * @param {?proto.PagingInfo|undefined} value
 * @return {!proto.S_GetSeachYYPMList_3009} returns this
*/
proto.S_GetSeachYYPMList_3009.prototype.setPaginginfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.S_GetSeachYYPMList_3009} returns this
 */
proto.S_GetSeachYYPMList_3009.prototype.clearPaginginfo = function() {
  return this.setPaginginfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.S_GetSeachYYPMList_3009.prototype.hasPaginginfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.C_GetZydqList_3010.prototype.toObject = function(opt_includeInstance) {
  return proto.C_GetZydqList_3010.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.C_GetZydqList_3010} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_GetZydqList_3010.toObject = function(includeInstance, msg) {
  var f, obj = {
    zyname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pici: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, ""),
    schoolisall: jspb.Message.getFieldWithDefault(msg, 4, 0),
    page: jspb.Message.getFieldWithDefault(msg, 5, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.C_GetZydqList_3010}
 */
proto.C_GetZydqList_3010.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.C_GetZydqList_3010;
  return proto.C_GetZydqList_3010.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.C_GetZydqList_3010} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.C_GetZydqList_3010}
 */
proto.C_GetZydqList_3010.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setZyname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPici(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSchoolisall(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.C_GetZydqList_3010.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.C_GetZydqList_3010.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.C_GetZydqList_3010} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_GetZydqList_3010.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getZyname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPici();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSchoolisall();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
};


/**
 * optional string zYName = 1;
 * @return {string}
 */
proto.C_GetZydqList_3010.prototype.getZyname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetZydqList_3010} returns this
 */
proto.C_GetZydqList_3010.prototype.setZyname = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string pici = 2;
 * @return {string}
 */
proto.C_GetZydqList_3010.prototype.getPici = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetZydqList_3010} returns this
 */
proto.C_GetZydqList_3010.prototype.setPici = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string type = 3;
 * @return {string}
 */
proto.C_GetZydqList_3010.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetZydqList_3010} returns this
 */
proto.C_GetZydqList_3010.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 schoolIsAll = 4;
 * @return {number}
 */
proto.C_GetZydqList_3010.prototype.getSchoolisall = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_GetZydqList_3010} returns this
 */
proto.C_GetZydqList_3010.prototype.setSchoolisall = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 page = 5;
 * @return {number}
 */
proto.C_GetZydqList_3010.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_GetZydqList_3010} returns this
 */
proto.C_GetZydqList_3010.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 limit = 6;
 * @return {number}
 */
proto.C_GetZydqList_3010.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_GetZydqList_3010} returns this
 */
proto.C_GetZydqList_3010.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.S_GetZydqList_3011.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.S_GetZydqList_3011.prototype.toObject = function(opt_includeInstance) {
  return proto.S_GetZydqList_3011.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.S_GetZydqList_3011} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_GetZydqList_3011.toObject = function(includeInstance, msg) {
  var f, obj = {
    xkmlList: jspb.Message.toObjectList(msg.getXkmlList(),
    proto.Xkml.toObject, includeInstance),
    paginginfo: (f = msg.getPaginginfo()) && proto.PagingInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.S_GetZydqList_3011}
 */
proto.S_GetZydqList_3011.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.S_GetZydqList_3011;
  return proto.S_GetZydqList_3011.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.S_GetZydqList_3011} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.S_GetZydqList_3011}
 */
proto.S_GetZydqList_3011.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Xkml;
      reader.readMessage(value,proto.Xkml.deserializeBinaryFromReader);
      msg.addXkml(value);
      break;
    case 2:
      var value = new proto.PagingInfo;
      reader.readMessage(value,proto.PagingInfo.deserializeBinaryFromReader);
      msg.setPaginginfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.S_GetZydqList_3011.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.S_GetZydqList_3011.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.S_GetZydqList_3011} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_GetZydqList_3011.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getXkmlList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.Xkml.serializeBinaryToWriter
    );
  }
  f = message.getPaginginfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.PagingInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Xkml xkml = 1;
 * @return {!Array<!proto.Xkml>}
 */
proto.S_GetZydqList_3011.prototype.getXkmlList = function() {
  return /** @type{!Array<!proto.Xkml>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Xkml, 1));
};


/**
 * @param {!Array<!proto.Xkml>} value
 * @return {!proto.S_GetZydqList_3011} returns this
*/
proto.S_GetZydqList_3011.prototype.setXkmlList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.Xkml=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Xkml}
 */
proto.S_GetZydqList_3011.prototype.addXkml = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Xkml, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.S_GetZydqList_3011} returns this
 */
proto.S_GetZydqList_3011.prototype.clearXkmlList = function() {
  return this.setXkmlList([]);
};


/**
 * optional PagingInfo pagingInfo = 2;
 * @return {?proto.PagingInfo}
 */
proto.S_GetZydqList_3011.prototype.getPaginginfo = function() {
  return /** @type{?proto.PagingInfo} */ (
    jspb.Message.getWrapperField(this, proto.PagingInfo, 2));
};


/**
 * @param {?proto.PagingInfo|undefined} value
 * @return {!proto.S_GetZydqList_3011} returns this
*/
proto.S_GetZydqList_3011.prototype.setPaginginfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.S_GetZydqList_3011} returns this
 */
proto.S_GetZydqList_3011.prototype.clearPaginginfo = function() {
  return this.setPaginginfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.S_GetZydqList_3011.prototype.hasPaginginfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.C_GetSeachFSXZYList_3012.prototype.toObject = function(opt_includeInstance) {
  return proto.C_GetSeachFSXZYList_3012.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.C_GetSeachFSXZYList_3012} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_GetSeachFSXZYList_3012.toObject = function(includeInstance, msg) {
  var f, obj = {
    kelei: jspb.Message.getFieldWithDefault(msg, 1, ""),
    zyname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    province: jspb.Message.getFieldWithDefault(msg, 3, ""),
    type: jspb.Message.getFieldWithDefault(msg, 4, ""),
    pici: jspb.Message.getFieldWithDefault(msg, 5, ""),
    xueli: jspb.Message.getFieldWithDefault(msg, 6, ""),
    kemu: jspb.Message.getFieldWithDefault(msg, 7, ""),
    schoolisall: jspb.Message.getFieldWithDefault(msg, 8, 0),
    startscore: jspb.Message.getFieldWithDefault(msg, 9, 0),
    endscore: jspb.Message.getFieldWithDefault(msg, 10, 0),
    page: jspb.Message.getFieldWithDefault(msg, 11, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 12, 0),
    sortfile: jspb.Message.getFieldWithDefault(msg, 13, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.C_GetSeachFSXZYList_3012}
 */
proto.C_GetSeachFSXZYList_3012.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.C_GetSeachFSXZYList_3012;
  return proto.C_GetSeachFSXZYList_3012.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.C_GetSeachFSXZYList_3012} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.C_GetSeachFSXZYList_3012}
 */
proto.C_GetSeachFSXZYList_3012.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKelei(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setZyname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvince(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPici(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setXueli(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setKemu(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSchoolisall(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStartscore(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEndscore(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setSortfile(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.C_GetSeachFSXZYList_3012.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.C_GetSeachFSXZYList_3012.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.C_GetSeachFSXZYList_3012} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_GetSeachFSXZYList_3012.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKelei();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getZyname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProvince();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPici();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getXueli();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getKemu();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getSchoolisall();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getStartscore();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getEndscore();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getSortfile();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
};


/**
 * optional string kelei = 1;
 * @return {string}
 */
proto.C_GetSeachFSXZYList_3012.prototype.getKelei = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetSeachFSXZYList_3012} returns this
 */
proto.C_GetSeachFSXZYList_3012.prototype.setKelei = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string zyName = 2;
 * @return {string}
 */
proto.C_GetSeachFSXZYList_3012.prototype.getZyname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetSeachFSXZYList_3012} returns this
 */
proto.C_GetSeachFSXZYList_3012.prototype.setZyname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string province = 3;
 * @return {string}
 */
proto.C_GetSeachFSXZYList_3012.prototype.getProvince = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetSeachFSXZYList_3012} returns this
 */
proto.C_GetSeachFSXZYList_3012.prototype.setProvince = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string type = 4;
 * @return {string}
 */
proto.C_GetSeachFSXZYList_3012.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetSeachFSXZYList_3012} returns this
 */
proto.C_GetSeachFSXZYList_3012.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string pici = 5;
 * @return {string}
 */
proto.C_GetSeachFSXZYList_3012.prototype.getPici = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetSeachFSXZYList_3012} returns this
 */
proto.C_GetSeachFSXZYList_3012.prototype.setPici = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string xueli = 6;
 * @return {string}
 */
proto.C_GetSeachFSXZYList_3012.prototype.getXueli = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetSeachFSXZYList_3012} returns this
 */
proto.C_GetSeachFSXZYList_3012.prototype.setXueli = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string kemu = 7;
 * @return {string}
 */
proto.C_GetSeachFSXZYList_3012.prototype.getKemu = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetSeachFSXZYList_3012} returns this
 */
proto.C_GetSeachFSXZYList_3012.prototype.setKemu = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int32 schoolIsAll = 8;
 * @return {number}
 */
proto.C_GetSeachFSXZYList_3012.prototype.getSchoolisall = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_GetSeachFSXZYList_3012} returns this
 */
proto.C_GetSeachFSXZYList_3012.prototype.setSchoolisall = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 startScore = 9;
 * @return {number}
 */
proto.C_GetSeachFSXZYList_3012.prototype.getStartscore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_GetSeachFSXZYList_3012} returns this
 */
proto.C_GetSeachFSXZYList_3012.prototype.setStartscore = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 endScore = 10;
 * @return {number}
 */
proto.C_GetSeachFSXZYList_3012.prototype.getEndscore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_GetSeachFSXZYList_3012} returns this
 */
proto.C_GetSeachFSXZYList_3012.prototype.setEndscore = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 page = 11;
 * @return {number}
 */
proto.C_GetSeachFSXZYList_3012.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_GetSeachFSXZYList_3012} returns this
 */
proto.C_GetSeachFSXZYList_3012.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 limit = 12;
 * @return {number}
 */
proto.C_GetSeachFSXZYList_3012.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_GetSeachFSXZYList_3012} returns this
 */
proto.C_GetSeachFSXZYList_3012.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional string sortFile = 13;
 * @return {string}
 */
proto.C_GetSeachFSXZYList_3012.prototype.getSortfile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetSeachFSXZYList_3012} returns this
 */
proto.C_GetSeachFSXZYList_3012.prototype.setSortfile = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.S_GetSeachFSXZYList_3013.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.S_GetSeachFSXZYList_3013.prototype.toObject = function(opt_includeInstance) {
  return proto.S_GetSeachFSXZYList_3013.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.S_GetSeachFSXZYList_3013} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_GetSeachFSXZYList_3013.toObject = function(includeInstance, msg) {
  var f, obj = {
    fsxzyList: jspb.Message.toObjectList(msg.getFsxzyList(),
    proto.FSXZY.toObject, includeInstance),
    paginginfo: (f = msg.getPaginginfo()) && proto.PagingInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.S_GetSeachFSXZYList_3013}
 */
proto.S_GetSeachFSXZYList_3013.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.S_GetSeachFSXZYList_3013;
  return proto.S_GetSeachFSXZYList_3013.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.S_GetSeachFSXZYList_3013} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.S_GetSeachFSXZYList_3013}
 */
proto.S_GetSeachFSXZYList_3013.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.FSXZY;
      reader.readMessage(value,proto.FSXZY.deserializeBinaryFromReader);
      msg.addFsxzy(value);
      break;
    case 2:
      var value = new proto.PagingInfo;
      reader.readMessage(value,proto.PagingInfo.deserializeBinaryFromReader);
      msg.setPaginginfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.S_GetSeachFSXZYList_3013.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.S_GetSeachFSXZYList_3013.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.S_GetSeachFSXZYList_3013} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_GetSeachFSXZYList_3013.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFsxzyList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.FSXZY.serializeBinaryToWriter
    );
  }
  f = message.getPaginginfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.PagingInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated FSXZY fSXZY = 1;
 * @return {!Array<!proto.FSXZY>}
 */
proto.S_GetSeachFSXZYList_3013.prototype.getFsxzyList = function() {
  return /** @type{!Array<!proto.FSXZY>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.FSXZY, 1));
};


/**
 * @param {!Array<!proto.FSXZY>} value
 * @return {!proto.S_GetSeachFSXZYList_3013} returns this
*/
proto.S_GetSeachFSXZYList_3013.prototype.setFsxzyList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.FSXZY=} opt_value
 * @param {number=} opt_index
 * @return {!proto.FSXZY}
 */
proto.S_GetSeachFSXZYList_3013.prototype.addFsxzy = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.FSXZY, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.S_GetSeachFSXZYList_3013} returns this
 */
proto.S_GetSeachFSXZYList_3013.prototype.clearFsxzyList = function() {
  return this.setFsxzyList([]);
};


/**
 * optional PagingInfo pagingInfo = 2;
 * @return {?proto.PagingInfo}
 */
proto.S_GetSeachFSXZYList_3013.prototype.getPaginginfo = function() {
  return /** @type{?proto.PagingInfo} */ (
    jspb.Message.getWrapperField(this, proto.PagingInfo, 2));
};


/**
 * @param {?proto.PagingInfo|undefined} value
 * @return {!proto.S_GetSeachFSXZYList_3013} returns this
*/
proto.S_GetSeachFSXZYList_3013.prototype.setPaginginfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.S_GetSeachFSXZYList_3013} returns this
 */
proto.S_GetSeachFSXZYList_3013.prototype.clearPaginginfo = function() {
  return this.setPaginginfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.S_GetSeachFSXZYList_3013.prototype.hasPaginginfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.C_GetZyzdxList_3014.prototype.toObject = function(opt_includeInstance) {
  return proto.C_GetZyzdxList_3014.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.C_GetZyzdxList_3014} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_GetZyzdxList_3014.toObject = function(includeInstance, msg) {
  var f, obj = {
    zyname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    province: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, ""),
    xueli: jspb.Message.getFieldWithDefault(msg, 4, ""),
    pici: jspb.Message.getFieldWithDefault(msg, 5, ""),
    kemu: jspb.Message.getFieldWithDefault(msg, 6, ""),
    schoolisall: jspb.Message.getFieldWithDefault(msg, 7, 0),
    startscore: jspb.Message.getFieldWithDefault(msg, 8, 0),
    endscore: jspb.Message.getFieldWithDefault(msg, 9, 0),
    page: jspb.Message.getFieldWithDefault(msg, 10, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 12, 0),
    sortfile: jspb.Message.getFieldWithDefault(msg, 13, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.C_GetZyzdxList_3014}
 */
proto.C_GetZyzdxList_3014.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.C_GetZyzdxList_3014;
  return proto.C_GetZyzdxList_3014.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.C_GetZyzdxList_3014} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.C_GetZyzdxList_3014}
 */
proto.C_GetZyzdxList_3014.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setZyname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvince(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setXueli(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPici(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setKemu(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSchoolisall(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStartscore(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEndscore(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setSortfile(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.C_GetZyzdxList_3014.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.C_GetZyzdxList_3014.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.C_GetZyzdxList_3014} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.C_GetZyzdxList_3014.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getZyname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProvince();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getXueli();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPici();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getKemu();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getSchoolisall();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getStartscore();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getEndscore();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getSortfile();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
};


/**
 * optional string zyName = 1;
 * @return {string}
 */
proto.C_GetZyzdxList_3014.prototype.getZyname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetZyzdxList_3014} returns this
 */
proto.C_GetZyzdxList_3014.prototype.setZyname = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string province = 2;
 * @return {string}
 */
proto.C_GetZyzdxList_3014.prototype.getProvince = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetZyzdxList_3014} returns this
 */
proto.C_GetZyzdxList_3014.prototype.setProvince = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string type = 3;
 * @return {string}
 */
proto.C_GetZyzdxList_3014.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetZyzdxList_3014} returns this
 */
proto.C_GetZyzdxList_3014.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string xueli = 4;
 * @return {string}
 */
proto.C_GetZyzdxList_3014.prototype.getXueli = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetZyzdxList_3014} returns this
 */
proto.C_GetZyzdxList_3014.prototype.setXueli = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string pici = 5;
 * @return {string}
 */
proto.C_GetZyzdxList_3014.prototype.getPici = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetZyzdxList_3014} returns this
 */
proto.C_GetZyzdxList_3014.prototype.setPici = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string kemu = 6;
 * @return {string}
 */
proto.C_GetZyzdxList_3014.prototype.getKemu = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetZyzdxList_3014} returns this
 */
proto.C_GetZyzdxList_3014.prototype.setKemu = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 schoolIsAll = 7;
 * @return {number}
 */
proto.C_GetZyzdxList_3014.prototype.getSchoolisall = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_GetZyzdxList_3014} returns this
 */
proto.C_GetZyzdxList_3014.prototype.setSchoolisall = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 startScore = 8;
 * @return {number}
 */
proto.C_GetZyzdxList_3014.prototype.getStartscore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_GetZyzdxList_3014} returns this
 */
proto.C_GetZyzdxList_3014.prototype.setStartscore = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 endScore = 9;
 * @return {number}
 */
proto.C_GetZyzdxList_3014.prototype.getEndscore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_GetZyzdxList_3014} returns this
 */
proto.C_GetZyzdxList_3014.prototype.setEndscore = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 page = 10;
 * @return {number}
 */
proto.C_GetZyzdxList_3014.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_GetZyzdxList_3014} returns this
 */
proto.C_GetZyzdxList_3014.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 limit = 12;
 * @return {number}
 */
proto.C_GetZyzdxList_3014.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.C_GetZyzdxList_3014} returns this
 */
proto.C_GetZyzdxList_3014.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional string sortFile = 13;
 * @return {string}
 */
proto.C_GetZyzdxList_3014.prototype.getSortfile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.C_GetZyzdxList_3014} returns this
 */
proto.C_GetZyzdxList_3014.prototype.setSortfile = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.S_GetZyzdxList_3015.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.S_GetZyzdxList_3015.prototype.toObject = function(opt_includeInstance) {
  return proto.S_GetZyzdxList_3015.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.S_GetZyzdxList_3015} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_GetZyzdxList_3015.toObject = function(includeInstance, msg) {
  var f, obj = {
    zyzdxList: jspb.Message.toObjectList(msg.getZyzdxList(),
    proto.Zyzdx.toObject, includeInstance),
    paginginfo: (f = msg.getPaginginfo()) && proto.PagingInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.S_GetZyzdxList_3015}
 */
proto.S_GetZyzdxList_3015.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.S_GetZyzdxList_3015;
  return proto.S_GetZyzdxList_3015.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.S_GetZyzdxList_3015} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.S_GetZyzdxList_3015}
 */
proto.S_GetZyzdxList_3015.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Zyzdx;
      reader.readMessage(value,proto.Zyzdx.deserializeBinaryFromReader);
      msg.addZyzdx(value);
      break;
    case 9:
      var value = new proto.PagingInfo;
      reader.readMessage(value,proto.PagingInfo.deserializeBinaryFromReader);
      msg.setPaginginfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.S_GetZyzdxList_3015.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.S_GetZyzdxList_3015.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.S_GetZyzdxList_3015} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.S_GetZyzdxList_3015.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getZyzdxList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.Zyzdx.serializeBinaryToWriter
    );
  }
  f = message.getPaginginfo();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.PagingInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Zyzdx zyzdx = 1;
 * @return {!Array<!proto.Zyzdx>}
 */
proto.S_GetZyzdxList_3015.prototype.getZyzdxList = function() {
  return /** @type{!Array<!proto.Zyzdx>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Zyzdx, 1));
};


/**
 * @param {!Array<!proto.Zyzdx>} value
 * @return {!proto.S_GetZyzdxList_3015} returns this
*/
proto.S_GetZyzdxList_3015.prototype.setZyzdxList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.Zyzdx=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Zyzdx}
 */
proto.S_GetZyzdxList_3015.prototype.addZyzdx = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Zyzdx, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.S_GetZyzdxList_3015} returns this
 */
proto.S_GetZyzdxList_3015.prototype.clearZyzdxList = function() {
  return this.setZyzdxList([]);
};


/**
 * optional PagingInfo pagingInfo = 9;
 * @return {?proto.PagingInfo}
 */
proto.S_GetZyzdxList_3015.prototype.getPaginginfo = function() {
  return /** @type{?proto.PagingInfo} */ (
    jspb.Message.getWrapperField(this, proto.PagingInfo, 9));
};


/**
 * @param {?proto.PagingInfo|undefined} value
 * @return {!proto.S_GetZyzdxList_3015} returns this
*/
proto.S_GetZyzdxList_3015.prototype.setPaginginfo = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.S_GetZyzdxList_3015} returns this
 */
proto.S_GetZyzdxList_3015.prototype.clearPaginginfo = function() {
  return this.setPaginginfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.S_GetZyzdxList_3015.prototype.hasPaginginfo = function() {
  return jspb.Message.getField(this, 9) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ZntjInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ZntjInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ZntjInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ZntjInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    logopath: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    lqgl: jspb.Message.getFieldWithDefault(msg, 4, ""),
    lqpc: jspb.Message.getFieldWithDefault(msg, 5, ""),
    tdx: jspb.Message.getFieldWithDefault(msg, 6, ""),
    rmzy: jspb.Message.getFieldWithDefault(msg, 7, ""),
    xxpm: jspb.Message.getFieldWithDefault(msg, 8, ""),
    type: jspb.Message.getFieldWithDefault(msg, 9, ""),
    level: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ZntjInfo}
 */
proto.ZntjInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ZntjInfo;
  return proto.ZntjInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ZntjInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ZntjInfo}
 */
proto.ZntjInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogopath(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLqgl(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLqpc(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTdx(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setRmzy(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setXxpm(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setLevel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ZntjInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ZntjInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ZntjInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ZntjInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
  f = message.getLogopath();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLqgl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLqpc();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTdx();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getRmzy();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getXxpm();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getLevel();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional fixed64 id = 1;
 * @return {number}
 */
proto.ZntjInfo.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ZntjInfo} returns this
 */
proto.ZntjInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string logoPath = 2;
 * @return {string}
 */
proto.ZntjInfo.prototype.getLogopath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ZntjInfo} returns this
 */
proto.ZntjInfo.prototype.setLogopath = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.ZntjInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ZntjInfo} returns this
 */
proto.ZntjInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string lqgl = 4;
 * @return {string}
 */
proto.ZntjInfo.prototype.getLqgl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ZntjInfo} returns this
 */
proto.ZntjInfo.prototype.setLqgl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string lqpc = 5;
 * @return {string}
 */
proto.ZntjInfo.prototype.getLqpc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ZntjInfo} returns this
 */
proto.ZntjInfo.prototype.setLqpc = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string tdx = 6;
 * @return {string}
 */
proto.ZntjInfo.prototype.getTdx = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.ZntjInfo} returns this
 */
proto.ZntjInfo.prototype.setTdx = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string rmzy = 7;
 * @return {string}
 */
proto.ZntjInfo.prototype.getRmzy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.ZntjInfo} returns this
 */
proto.ZntjInfo.prototype.setRmzy = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string xxpm = 8;
 * @return {string}
 */
proto.ZntjInfo.prototype.getXxpm = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.ZntjInfo} returns this
 */
proto.ZntjInfo.prototype.setXxpm = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string type = 9;
 * @return {string}
 */
proto.ZntjInfo.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.ZntjInfo} returns this
 */
proto.ZntjInfo.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string level = 10;
 * @return {string}
 */
proto.ZntjInfo.prototype.getLevel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.ZntjInfo} returns this
 */
proto.ZntjInfo.prototype.setLevel = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PagingInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.PagingInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PagingInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PagingInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    rowcount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pagecount: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pageno: jspb.Message.getFieldWithDefault(msg, 3, 0),
    pagesize: jspb.Message.getFieldWithDefault(msg, 4, 0),
    startlimt: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PagingInfo}
 */
proto.PagingInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PagingInfo;
  return proto.PagingInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PagingInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PagingInfo}
 */
proto.PagingInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setRowcount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setPagecount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setPageno(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setPagesize(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setStartlimt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PagingInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PagingInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PagingInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PagingInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRowcount();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
  f = message.getPagecount();
  if (f !== 0) {
    writer.writeFixed64(
      2,
      f
    );
  }
  f = message.getPageno();
  if (f !== 0) {
    writer.writeFixed64(
      3,
      f
    );
  }
  f = message.getPagesize();
  if (f !== 0) {
    writer.writeFixed64(
      4,
      f
    );
  }
  f = message.getStartlimt();
  if (f !== 0) {
    writer.writeFixed64(
      5,
      f
    );
  }
};


/**
 * optional fixed64 rowcount = 1;
 * @return {number}
 */
proto.PagingInfo.prototype.getRowcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PagingInfo} returns this
 */
proto.PagingInfo.prototype.setRowcount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional fixed64 pageCount = 2;
 * @return {number}
 */
proto.PagingInfo.prototype.getPagecount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PagingInfo} returns this
 */
proto.PagingInfo.prototype.setPagecount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional fixed64 pageNo = 3;
 * @return {number}
 */
proto.PagingInfo.prototype.getPageno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.PagingInfo} returns this
 */
proto.PagingInfo.prototype.setPageno = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional fixed64 pageSize = 4;
 * @return {number}
 */
proto.PagingInfo.prototype.getPagesize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.PagingInfo} returns this
 */
proto.PagingInfo.prototype.setPagesize = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional fixed64 startLimt = 5;
 * @return {number}
 */
proto.PagingInfo.prototype.getStartlimt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.PagingInfo} returns this
 */
proto.PagingInfo.prototype.setStartlimt = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SeachSchool.prototype.toObject = function(opt_includeInstance) {
  return proto.SeachSchool.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SeachSchool} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SeachSchool.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    logopath: jspb.Message.getFieldWithDefault(msg, 3, ""),
    lqgl: jspb.Message.getFieldWithDefault(msg, 4, ""),
    lqpc: jspb.Message.getFieldWithDefault(msg, 5, ""),
    tdx: jspb.Message.getFieldWithDefault(msg, 6, ""),
    rmzy: jspb.Message.getFieldWithDefault(msg, 7, ""),
    type: jspb.Message.getFieldWithDefault(msg, 8, ""),
    level: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SeachSchool}
 */
proto.SeachSchool.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SeachSchool;
  return proto.SeachSchool.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SeachSchool} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SeachSchool}
 */
proto.SeachSchool.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogopath(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLqgl(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLqpc(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTdx(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setRmzy(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setLevel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SeachSchool.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SeachSchool.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SeachSchool} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SeachSchool.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLogopath();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLqgl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLqpc();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTdx();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getRmzy();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getLevel();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional fixed64 id = 1;
 * @return {number}
 */
proto.SeachSchool.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.SeachSchool} returns this
 */
proto.SeachSchool.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.SeachSchool.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.SeachSchool} returns this
 */
proto.SeachSchool.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string logoPath = 3;
 * @return {string}
 */
proto.SeachSchool.prototype.getLogopath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.SeachSchool} returns this
 */
proto.SeachSchool.prototype.setLogopath = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string lqgl = 4;
 * @return {string}
 */
proto.SeachSchool.prototype.getLqgl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.SeachSchool} returns this
 */
proto.SeachSchool.prototype.setLqgl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string lqpc = 5;
 * @return {string}
 */
proto.SeachSchool.prototype.getLqpc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.SeachSchool} returns this
 */
proto.SeachSchool.prototype.setLqpc = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string tdx = 6;
 * @return {string}
 */
proto.SeachSchool.prototype.getTdx = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.SeachSchool} returns this
 */
proto.SeachSchool.prototype.setTdx = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string rmzy = 7;
 * @return {string}
 */
proto.SeachSchool.prototype.getRmzy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.SeachSchool} returns this
 */
proto.SeachSchool.prototype.setRmzy = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string type = 8;
 * @return {string}
 */
proto.SeachSchool.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.SeachSchool} returns this
 */
proto.SeachSchool.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string level = 9;
 * @return {string}
 */
proto.SeachSchool.prototype.getLevel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.SeachSchool} returns this
 */
proto.SeachSchool.prototype.setLevel = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SeachScore.prototype.toObject = function(opt_includeInstance) {
  return proto.SeachScore.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SeachScore} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SeachScore.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    logopath: jspb.Message.getFieldWithDefault(msg, 3, ""),
    type: jspb.Message.getFieldWithDefault(msg, 4, ""),
    level: jspb.Message.getFieldWithDefault(msg, 5, ""),
    stfsx1: jspb.Message.getFieldWithDefault(msg, 6, ""),
    ndfsx2: jspb.Message.getFieldWithDefault(msg, 7, ""),
    rdfsx3: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SeachScore}
 */
proto.SeachScore.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SeachScore;
  return proto.SeachScore.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SeachScore} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SeachScore}
 */
proto.SeachScore.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogopath(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLevel(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setStfsx1(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setNdfsx2(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setRdfsx3(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SeachScore.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SeachScore.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SeachScore} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SeachScore.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLogopath();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLevel();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getStfsx1();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getNdfsx2();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getRdfsx3();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional fixed64 id = 1;
 * @return {number}
 */
proto.SeachScore.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.SeachScore} returns this
 */
proto.SeachScore.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.SeachScore.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.SeachScore} returns this
 */
proto.SeachScore.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string logoPath = 3;
 * @return {string}
 */
proto.SeachScore.prototype.getLogopath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.SeachScore} returns this
 */
proto.SeachScore.prototype.setLogopath = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string type = 4;
 * @return {string}
 */
proto.SeachScore.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.SeachScore} returns this
 */
proto.SeachScore.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string level = 5;
 * @return {string}
 */
proto.SeachScore.prototype.getLevel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.SeachScore} returns this
 */
proto.SeachScore.prototype.setLevel = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string stFsx1 = 6;
 * @return {string}
 */
proto.SeachScore.prototype.getStfsx1 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.SeachScore} returns this
 */
proto.SeachScore.prototype.setStfsx1 = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string ndFsx2 = 7;
 * @return {string}
 */
proto.SeachScore.prototype.getNdfsx2 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.SeachScore} returns this
 */
proto.SeachScore.prototype.setNdfsx2 = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string rdFsx3 = 8;
 * @return {string}
 */
proto.SeachScore.prototype.getRdfsx3 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.SeachScore} returns this
 */
proto.SeachScore.prototype.setRdfsx3 = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SeachSKYX.prototype.toObject = function(opt_includeInstance) {
  return proto.SeachSKYX.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SeachSKYX} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SeachSKYX.toObject = function(includeInstance, msg) {
  var f, obj = {
    lqyears: jspb.Message.getFieldWithDefault(msg, 1, ""),
    province: jspb.Message.getFieldWithDefault(msg, 2, ""),
    kelei: jspb.Message.getFieldWithDefault(msg, 3, ""),
    pici: jspb.Message.getFieldWithDefault(msg, 4, ""),
    zdscroe: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SeachSKYX}
 */
proto.SeachSKYX.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SeachSKYX;
  return proto.SeachSKYX.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SeachSKYX} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SeachSKYX}
 */
proto.SeachSKYX.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLqyears(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvince(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setKelei(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPici(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setZdscroe(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SeachSKYX.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SeachSKYX.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SeachSKYX} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SeachSKYX.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLqyears();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProvince();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getKelei();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPici();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getZdscroe();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * optional string lqyears = 1;
 * @return {string}
 */
proto.SeachSKYX.prototype.getLqyears = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.SeachSKYX} returns this
 */
proto.SeachSKYX.prototype.setLqyears = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string province = 2;
 * @return {string}
 */
proto.SeachSKYX.prototype.getProvince = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.SeachSKYX} returns this
 */
proto.SeachSKYX.prototype.setProvince = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string kelei = 3;
 * @return {string}
 */
proto.SeachSKYX.prototype.getKelei = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.SeachSKYX} returns this
 */
proto.SeachSKYX.prototype.setKelei = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string pici = 4;
 * @return {string}
 */
proto.SeachSKYX.prototype.getPici = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.SeachSKYX} returns this
 */
proto.SeachSKYX.prototype.setPici = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 zdScroe = 5;
 * @return {number}
 */
proto.SeachSKYX.prototype.getZdscroe = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.SeachSKYX} returns this
 */
proto.SeachSKYX.prototype.setZdscroe = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SeachYYPM.prototype.toObject = function(opt_includeInstance) {
  return proto.SeachYYPM.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SeachYYPM} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SeachYYPM.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    logopath: jspb.Message.getFieldWithDefault(msg, 3, ""),
    type: jspb.Message.getFieldWithDefault(msg, 4, ""),
    level: jspb.Message.getFieldWithDefault(msg, 5, ""),
    tlgxsort: jspb.Message.getFieldWithDefault(msg, 6, ""),
    provincesort: jspb.Message.getFieldWithDefault(msg, 7, ""),
    qssort: jspb.Message.getFieldWithDefault(msg, 8, ""),
    wslsort: jspb.Message.getFieldWithDefault(msg, 9, ""),
    xyhsort: jspb.Message.getFieldWithDefault(msg, 10, ""),
    hot: jspb.Message.getFieldWithDefault(msg, 11, ""),
    tdx: jspb.Message.getFieldWithDefault(msg, 12, ""),
    diqu: jspb.Message.getFieldWithDefault(msg, 13, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SeachYYPM}
 */
proto.SeachYYPM.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SeachYYPM;
  return proto.SeachYYPM.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SeachYYPM} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SeachYYPM}
 */
proto.SeachYYPM.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogopath(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLevel(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTlgxsort(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvincesort(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setQssort(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setWslsort(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setXyhsort(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setHot(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setTdx(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setDiqu(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SeachYYPM.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SeachYYPM.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SeachYYPM} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SeachYYPM.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLogopath();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLevel();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTlgxsort();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getProvincesort();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getQssort();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getWslsort();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getXyhsort();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getHot();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getTdx();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getDiqu();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
};


/**
 * optional fixed64 id = 1;
 * @return {number}
 */
proto.SeachYYPM.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.SeachYYPM} returns this
 */
proto.SeachYYPM.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.SeachYYPM.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.SeachYYPM} returns this
 */
proto.SeachYYPM.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string logoPath = 3;
 * @return {string}
 */
proto.SeachYYPM.prototype.getLogopath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.SeachYYPM} returns this
 */
proto.SeachYYPM.prototype.setLogopath = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string type = 4;
 * @return {string}
 */
proto.SeachYYPM.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.SeachYYPM} returns this
 */
proto.SeachYYPM.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string level = 5;
 * @return {string}
 */
proto.SeachYYPM.prototype.getLevel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.SeachYYPM} returns this
 */
proto.SeachYYPM.prototype.setLevel = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string tlgxSort = 6;
 * @return {string}
 */
proto.SeachYYPM.prototype.getTlgxsort = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.SeachYYPM} returns this
 */
proto.SeachYYPM.prototype.setTlgxsort = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string provinceSort = 7;
 * @return {string}
 */
proto.SeachYYPM.prototype.getProvincesort = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.SeachYYPM} returns this
 */
proto.SeachYYPM.prototype.setProvincesort = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string qsSort = 8;
 * @return {string}
 */
proto.SeachYYPM.prototype.getQssort = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.SeachYYPM} returns this
 */
proto.SeachYYPM.prototype.setQssort = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string wslSort = 9;
 * @return {string}
 */
proto.SeachYYPM.prototype.getWslsort = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.SeachYYPM} returns this
 */
proto.SeachYYPM.prototype.setWslsort = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string xyhSort = 10;
 * @return {string}
 */
proto.SeachYYPM.prototype.getXyhsort = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.SeachYYPM} returns this
 */
proto.SeachYYPM.prototype.setXyhsort = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string hot = 11;
 * @return {string}
 */
proto.SeachYYPM.prototype.getHot = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.SeachYYPM} returns this
 */
proto.SeachYYPM.prototype.setHot = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string tdx = 12;
 * @return {string}
 */
proto.SeachYYPM.prototype.getTdx = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.SeachYYPM} returns this
 */
proto.SeachYYPM.prototype.setTdx = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string diqu = 13;
 * @return {string}
 */
proto.SeachYYPM.prototype.getDiqu = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.SeachYYPM} returns this
 */
proto.SeachYYPM.prototype.setDiqu = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Xkml.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Xkml.prototype.toObject = function(opt_includeInstance) {
  return proto.Xkml.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Xkml} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Xkml.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    xkmlname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    yjxkList: jspb.Message.toObjectList(msg.getYjxkList(),
    proto.Yjxk.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Xkml}
 */
proto.Xkml.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Xkml;
  return proto.Xkml.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Xkml} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Xkml}
 */
proto.Xkml.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setXkmlname(value);
      break;
    case 3:
      var value = new proto.Yjxk;
      reader.readMessage(value,proto.Yjxk.deserializeBinaryFromReader);
      msg.addYjxk(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Xkml.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Xkml.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Xkml} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Xkml.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
  f = message.getXkmlname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getYjxkList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.Yjxk.serializeBinaryToWriter
    );
  }
};


/**
 * optional fixed64 id = 1;
 * @return {number}
 */
proto.Xkml.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.Xkml} returns this
 */
proto.Xkml.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string XKmlName = 2;
 * @return {string}
 */
proto.Xkml.prototype.getXkmlname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Xkml} returns this
 */
proto.Xkml.prototype.setXkmlname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Yjxk yjxk = 3;
 * @return {!Array<!proto.Yjxk>}
 */
proto.Xkml.prototype.getYjxkList = function() {
  return /** @type{!Array<!proto.Yjxk>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Yjxk, 3));
};


/**
 * @param {!Array<!proto.Yjxk>} value
 * @return {!proto.Xkml} returns this
*/
proto.Xkml.prototype.setYjxkList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.Yjxk=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Yjxk}
 */
proto.Xkml.prototype.addYjxk = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.Yjxk, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Xkml} returns this
 */
proto.Xkml.prototype.clearYjxkList = function() {
  return this.setYjxkList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Yjxk.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yjxk.prototype.toObject = function(opt_includeInstance) {
  return proto.Yjxk.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yjxk} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yjxk.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    yjxkname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    zyinfoList: jspb.Message.toObjectList(msg.getZyinfoList(),
    proto.ZyInfo.toObject, includeInstance),
    xkyqList: jspb.Message.toObjectList(msg.getXkyqList(),
    proto.Xkyq.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yjxk}
 */
proto.Yjxk.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yjxk;
  return proto.Yjxk.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yjxk} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yjxk}
 */
proto.Yjxk.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setYjxkname(value);
      break;
    case 3:
      var value = new proto.ZyInfo;
      reader.readMessage(value,proto.ZyInfo.deserializeBinaryFromReader);
      msg.addZyinfo(value);
      break;
    case 4:
      var value = new proto.Xkyq;
      reader.readMessage(value,proto.Xkyq.deserializeBinaryFromReader);
      msg.addXkyq(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yjxk.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yjxk.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yjxk} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yjxk.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
  f = message.getYjxkname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getZyinfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.ZyInfo.serializeBinaryToWriter
    );
  }
  f = message.getXkyqList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.Xkyq.serializeBinaryToWriter
    );
  }
};


/**
 * optional fixed64 id = 1;
 * @return {number}
 */
proto.Yjxk.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yjxk} returns this
 */
proto.Yjxk.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string yjxkName = 2;
 * @return {string}
 */
proto.Yjxk.prototype.getYjxkname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yjxk} returns this
 */
proto.Yjxk.prototype.setYjxkname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated ZyInfo zyInfo = 3;
 * @return {!Array<!proto.ZyInfo>}
 */
proto.Yjxk.prototype.getZyinfoList = function() {
  return /** @type{!Array<!proto.ZyInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ZyInfo, 3));
};


/**
 * @param {!Array<!proto.ZyInfo>} value
 * @return {!proto.Yjxk} returns this
*/
proto.Yjxk.prototype.setZyinfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.ZyInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ZyInfo}
 */
proto.Yjxk.prototype.addZyinfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ZyInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Yjxk} returns this
 */
proto.Yjxk.prototype.clearZyinfoList = function() {
  return this.setZyinfoList([]);
};


/**
 * repeated Xkyq xkyq = 4;
 * @return {!Array<!proto.Xkyq>}
 */
proto.Yjxk.prototype.getXkyqList = function() {
  return /** @type{!Array<!proto.Xkyq>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Xkyq, 4));
};


/**
 * @param {!Array<!proto.Xkyq>} value
 * @return {!proto.Yjxk} returns this
*/
proto.Yjxk.prototype.setXkyqList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.Xkyq=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Xkyq}
 */
proto.Yjxk.prototype.addXkyq = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.Xkyq, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Yjxk} returns this
 */
proto.Yjxk.prototype.clearXkyqList = function() {
  return this.setXkyqList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Xkyq.prototype.toObject = function(opt_includeInstance) {
  return proto.Xkyq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Xkyq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Xkyq.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    xkyqname: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Xkyq}
 */
proto.Xkyq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Xkyq;
  return proto.Xkyq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Xkyq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Xkyq}
 */
proto.Xkyq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setXkyqname(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Xkyq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Xkyq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Xkyq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Xkyq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
  f = message.getXkyqname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional fixed64 id = 1;
 * @return {number}
 */
proto.Xkyq.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.Xkyq} returns this
 */
proto.Xkyq.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string xkyqName = 2;
 * @return {string}
 */
proto.Xkyq.prototype.getXkyqname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Xkyq} returns this
 */
proto.Xkyq.prototype.setXkyqname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.FSXZY.prototype.toObject = function(opt_includeInstance) {
  return proto.FSXZY.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.FSXZY} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FSXZY.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    zyname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    zytese: jspb.Message.getFieldWithDefault(msg, 3, ""),
    zylqgl: jspb.Message.getFieldWithDefault(msg, 4, ""),
    lqpc: jspb.Message.getFieldWithDefault(msg, 5, ""),
    province: jspb.Message.getFieldWithDefault(msg, 6, ""),
    xkyq: jspb.Message.getFieldWithDefault(msg, 7, ""),
    styearline1: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FSXZY}
 */
proto.FSXZY.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FSXZY;
  return proto.FSXZY.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FSXZY} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FSXZY}
 */
proto.FSXZY.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setZyname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setZytese(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setZylqgl(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLqpc(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvince(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setXkyq(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setStyearline1(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FSXZY.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FSXZY.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FSXZY} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FSXZY.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
  f = message.getZyname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getZytese();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getZylqgl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLqpc();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getProvince();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getXkyq();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getStyearline1();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional fixed64 id = 1;
 * @return {number}
 */
proto.FSXZY.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.FSXZY} returns this
 */
proto.FSXZY.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string zyName = 2;
 * @return {string}
 */
proto.FSXZY.prototype.getZyname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.FSXZY} returns this
 */
proto.FSXZY.prototype.setZyname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string zyTeSe = 3;
 * @return {string}
 */
proto.FSXZY.prototype.getZytese = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.FSXZY} returns this
 */
proto.FSXZY.prototype.setZytese = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string zyLqgl = 4;
 * @return {string}
 */
proto.FSXZY.prototype.getZylqgl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.FSXZY} returns this
 */
proto.FSXZY.prototype.setZylqgl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string lqpc = 5;
 * @return {string}
 */
proto.FSXZY.prototype.getLqpc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.FSXZY} returns this
 */
proto.FSXZY.prototype.setLqpc = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string province = 6;
 * @return {string}
 */
proto.FSXZY.prototype.getProvince = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.FSXZY} returns this
 */
proto.FSXZY.prototype.setProvince = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string xkyq = 7;
 * @return {string}
 */
proto.FSXZY.prototype.getXkyq = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.FSXZY} returns this
 */
proto.FSXZY.prototype.setXkyq = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string stYearLine1 = 8;
 * @return {string}
 */
proto.FSXZY.prototype.getStyearline1 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.FSXZY} returns this
 */
proto.FSXZY.prototype.setStyearline1 = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Zyzdx.prototype.toObject = function(opt_includeInstance) {
  return proto.Zyzdx.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Zyzdx} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Zyzdx.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    logopath: jspb.Message.getFieldWithDefault(msg, 3, ""),
    type: jspb.Message.getFieldWithDefault(msg, 4, ""),
    level: jspb.Message.getFieldWithDefault(msg, 5, ""),
    styearline1: jspb.Message.getFieldWithDefault(msg, 6, ""),
    zylqgl: jspb.Message.getFieldWithDefault(msg, 7, ""),
    zyname: jspb.Message.getFieldWithDefault(msg, 8, ""),
    zylev: jspb.Message.getFieldWithDefault(msg, 9, ""),
    zyid: jspb.Message.getFieldWithDefault(msg, 10, 0),
    xkyq: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Zyzdx}
 */
proto.Zyzdx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Zyzdx;
  return proto.Zyzdx.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Zyzdx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Zyzdx}
 */
proto.Zyzdx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogopath(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLevel(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setStyearline1(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setZylqgl(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setZyname(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setZylev(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setZyid(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setXkyq(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Zyzdx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Zyzdx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Zyzdx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Zyzdx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLogopath();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLevel();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getStyearline1();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getZylqgl();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getZyname();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getZylev();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getZyid();
  if (f !== 0) {
    writer.writeFixed64(
      10,
      f
    );
  }
  f = message.getXkyq();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional fixed64 id = 1;
 * @return {number}
 */
proto.Zyzdx.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.Zyzdx} returns this
 */
proto.Zyzdx.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.Zyzdx.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Zyzdx} returns this
 */
proto.Zyzdx.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string logoPath = 3;
 * @return {string}
 */
proto.Zyzdx.prototype.getLogopath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Zyzdx} returns this
 */
proto.Zyzdx.prototype.setLogopath = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string type = 4;
 * @return {string}
 */
proto.Zyzdx.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Zyzdx} returns this
 */
proto.Zyzdx.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string level = 5;
 * @return {string}
 */
proto.Zyzdx.prototype.getLevel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Zyzdx} returns this
 */
proto.Zyzdx.prototype.setLevel = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string stYearLine1 = 6;
 * @return {string}
 */
proto.Zyzdx.prototype.getStyearline1 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Zyzdx} returns this
 */
proto.Zyzdx.prototype.setStyearline1 = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string zyLqgl = 7;
 * @return {string}
 */
proto.Zyzdx.prototype.getZylqgl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Zyzdx} returns this
 */
proto.Zyzdx.prototype.setZylqgl = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string zyName = 8;
 * @return {string}
 */
proto.Zyzdx.prototype.getZyname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Zyzdx} returns this
 */
proto.Zyzdx.prototype.setZyname = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string zyLev = 9;
 * @return {string}
 */
proto.Zyzdx.prototype.getZylev = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.Zyzdx} returns this
 */
proto.Zyzdx.prototype.setZylev = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional fixed64 zyId = 10;
 * @return {number}
 */
proto.Zyzdx.prototype.getZyid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.Zyzdx} returns this
 */
proto.Zyzdx.prototype.setZyid = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string xkyq = 11;
 * @return {string}
 */
proto.Zyzdx.prototype.getXkyq = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.Zyzdx} returns this
 */
proto.Zyzdx.prototype.setXkyq = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


